// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package creator

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// CreatorMetaData contains all meta data concerning the Creator contract.
var CreatorMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Exception\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sw\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"d\",\"type\":\"uint8\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"name\":\"setMarketPlace\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561552f806100326000396000f3fe60806040523480156200001157600080fd5b50600436106200006f5760003560e01c80636363e86711620000565780636363e86714620000e7578063704b6c02146200012c578063f851a440146200014357600080fd5b80632e25d2a6146200007457806330568a8d14620000bf575b600080fd5b600154620000959073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b620000d6620000d036600462000611565b62000164565b6040519015158152602001620000b6565b620000fe620000f836600462000694565b620002c7565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815292909116602083015201620000b6565b620000d66200013d36600462000611565b620004f7565b600054620000959073ffffffffffffffffffffffffffffffffffffffff1681565b6000805473ffffffffffffffffffffffffffffffffffffffff16338114620001f0576040517f6d4c6c8900000000000000000000000000000000000000000000000000000000815260006004820181905260248201819052604482015233606482015273ffffffffffffffffffffffffffffffffffffffff8216608482015260a4015b60405180910390fd5b60015473ffffffffffffffffffffffffffffffffffffffff16156200027d576001546040517f6d4c6c89000000000000000000000000000000000000000000000000000000008152602160048201526000602482018190526044820181905273ffffffffffffffffffffffffffffffffffffffff9092166064820152608481019190915260a401620001e7565b6001805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116178155915050919050565b600154600090819073ffffffffffffffffffffffffffffffffffffffff1633811462000353576040517f6d4c6c8900000000000000000000000000000000000000000000000000000000815260006004820181905260248201819052604482015233606482015273ffffffffffffffffffffffffffffffffffffffff8216608482015260a401620001e7565b60015473ffffffffffffffffffffffffffffffffffffffff16620003df576001546040517f6d4c6c89000000000000000000000000000000000000000000000000000000008152602260048201526000602482018190526044820181905273ffffffffffffffffffffffffffffffffffffffff9092166064820152608481019190915260a401620001e7565b60008d8d8d8d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d8d8d8d8d6040516200041b90620005cb565b620004309a99989796959493929190620007bb565b604051809103906000f0801580156200044d573d6000803e3d6000fd5b50905060008e8d8d8d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200048790620005d9565b60ff9095168552602085019390935273ffffffffffffffffffffffffffffffffffffffff91821660408501528116606084015216608082015260a001604051809103906000f080158015620004e0573d6000803e3d6000fd5b50919f919e50909c50505050505050505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff163381146200057f576040517f6d4c6c8900000000000000000000000000000000000000000000000000000000815260006004820181905260248201819052604482015233606482015273ffffffffffffffffffffffffffffffffffffffff8216608482015260a401620001e7565b6000805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff00000000000000000000000000000000000000009091161790556001915050919050565b612572806200084283390190565b6127468062002db483390190565b803573ffffffffffffffffffffffffffffffffffffffff811681146200060c57600080fd5b919050565b6000602082840312156200062457600080fd5b6200062f82620005e7565b9392505050565b803560ff811681146200060c57600080fd5b60008083601f8401126200065b57600080fd5b50813567ffffffffffffffff8111156200067457600080fd5b6020830191508360208285010111156200068d57600080fd5b9250929050565b6000806000806000806000806000806101008b8d031215620006b557600080fd5b620006c08b62000636565b9950620006d060208c01620005e7565b985060408b01359750620006e760608c01620005e7565b9650620006f760808c01620005e7565b955060a08b013567ffffffffffffffff808211156200071557600080fd5b620007238e838f0162000648565b909750955060c08d01359150808211156200073d57600080fd5b506200074c8d828e0162000648565b909450925062000761905060e08c0162000636565b90509295989b9194979a5092959850565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061010060ff8d16835273ffffffffffffffffffffffffffffffffffffffff808d1660208501528b6040850152808b166060850152808a166080850152508060a08401526200080f818401888a62000772565b905082810360c08401526200082681868862000772565b91505060ff831660e08301529b9a505050505050505050505056fe6101806040523480156200001257600080fd5b506040516200257238038062002572833981016040819052620000359162000233565b828282600062000046848262000394565b50600162000055838262000394565b5060ff81166080524660a0526200006b620000a3565b60c05250505060ff9097166101205250506001600160a01b039384166101005260e092909252821661014052166101605250620004de565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000d7919062000460565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b805160ff811681146200015157600080fd5b919050565b80516001600160a01b03811681146200015157600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019657600080fd5b81516001600160401b0380821115620001b357620001b36200016e565b604051601f8301601f19908116603f01168101908282118183101715620001de57620001de6200016e565b81604052838152602092508683858801011115620001fb57600080fd5b600091505b838210156200021f578582018301518183018401529082019062000200565b600093810190920192909252949350505050565b600080600080600080600080610100898b0312156200025157600080fd5b6200025c896200013f565b97506200026c60208a0162000156565b9650604089015195506200028360608a0162000156565b94506200029360808a0162000156565b60a08a01519094506001600160401b0380821115620002b157600080fd5b620002bf8c838d0162000184565b945060c08b0151915080821115620002d657600080fd5b50620002e58b828c0162000184565b925050620002f660e08a016200013f565b90509295985092959890939650565b600181811c908216806200031a57607f821691505b6020821081036200033b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038f57600081815260208120601f850160051c810160208610156200036a5750805b601f850160051c820191505b818110156200038b5782815560010162000376565b5050505b505050565b81516001600160401b03811115620003b057620003b06200016e565b620003c881620003c1845462000305565b8462000341565b602080601f831160018114620004005760008415620003e75750858301515b600019600386901b1c1916600185901b1785556200038b565b600085815260208120601f198616915b82811015620004315788860151825594840194600190910190840162000410565b5085821015620004505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620004708162000305565b600182811680156200048b5760018114620004a157620004d2565b60ff1984168752821515830287019450620004d2565b8760005260208060002060005b85811015620004c95781548a820152908401908201620004ae565b50505082870194505b50929695505050505050565b60805160a05160c05160e05161010051610120516101405161016051611f166200065c6000396000818161027b01528181610678015281816107ef01528181610a0e01528181610b3a01528181610dc001528181610fce015281816111a9015281816113b801526115180152600061031b0152600081816103a9015281816105e70152818161075e01528181610d1f01528181610f43015281816111080152818161132d0152611487015260008181610342015281816106250152818161079c01528181610d5d01528181610f6c015281816111460152818161135601526114c5015260008181610241015281816105910152818161064d01528181610708015281816107c401528181610a9b01528181610ae901528181610c5301528181610ca101528181610d8501528181610f9401528181611049015281816110970152818161116e0152818161137e01528181611431015281816114ed01526118a4015260006109e8015260006109b3015260006102c70152611f166000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806369e527da116100f9578063a9059cbb11610097578063ce96cb7711610071578063ce96cb771461041f578063d505accf14610432578063d905777e14610447578063dd62ed3e1461045a57600080fd5b8063a9059cbb146103e6578063b460af94146103f9578063ba0876521461040c57600080fd5b80637ecebe00116100d35780637ecebe00146103845780638ce74426146103a457806395d89b41146103cb5780639dc29fac146103d357600080fd5b806369e527da146103165780636f307dc31461033d57806370a082311461036457600080fd5b806323b872dd11610166578063313ce56711610140578063313ce567146102c25780633644e515146102fb57806340c10f19146103035780634cdad5061461022957600080fd5b806323b872dd1461026357806325a8d87d146101ff5780632ba29d381461027657600080fd5b806318160ddd1161019757806318160ddd146102205780631dc7f52114610229578063204f83f91461023c57600080fd5b806306fdde03146101be578063095ea7b3146101dc5780630a28a477146101ff575b600080fd5b6101c6610485565b6040516101d39190611a9c565b60405180910390f35b6101ef6101ea366004611b31565b610513565b60405190151581526020016101d3565b61021261020d366004611b5b565b61058d565b6040519081526020016101d3565b61021260025481565b610212610237366004611b5b565b610704565b6102127f000000000000000000000000000000000000000000000000000000000000000081565b6101ef610271366004611b74565b610869565b61029d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d3565b6102e97f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101d3565b6102126109af565b6101ef610311366004611b31565b610a0a565b61029d7f000000000000000000000000000000000000000000000000000000000000000081565b61029d7f000000000000000000000000000000000000000000000000000000000000000081565b610212610372366004611bb0565b60036020526000908152604090205481565b610212610392366004611bb0565b60056020526000908152604090205481565b6102e97f000000000000000000000000000000000000000000000000000000000000000081565b6101c6610b29565b6101ef6103e1366004611b31565b610b36565b6101ef6103f4366004611b31565b610bca565b610212610407366004611bcb565b610c4f565b61021261041a366004611bcb565b611045565b61021261042d366004611bb0565b61142d565b610445610440366004611c07565b6115ba565b005b610212610455366004611bb0565b6118a0565b610212610468366004611c7a565b600460209081526000928352604080842090915290825290205481565b6000805461049290611cad565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90611cad565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061057b9086815260200190565b60405180910390a35060015b92915050565b60007f00000000000000000000000000000000000000000000000000000000000000004210156105bf57506000919050565b6040517ff7de8b1f0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060ff16600482015273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000604483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063f7de8b1f906064016040805180830381865afa1580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190611d00565b9092509050806106f28386611d53565b6106fc9190611d90565b949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000042101561073657506000919050565b6040517ff7de8b1f0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060ff16600482015273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000604483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063f7de8b1f906064016040805180830381865afa158015610835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108599190611d00565b9092509050816106f28286611d53565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108fd576108cb8382611dcb565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610932908490611dcb565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061099a9087815260200190565b60405180910390a360019150505b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146109e5576109e06118fb565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60007f00000000000000000000000000000000000000000000000000000000000000003373ffffffffffffffffffffffffffffffffffffffff821614610a99576040517fdc84e3a400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000421115610b15576040517f03a428230000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152602401610a90565b610b1f8484611995565b5060019392505050565b6001805461049290611cad565b60007f00000000000000000000000000000000000000000000000000000000000000003373ffffffffffffffffffffffffffffffffffffffff821614610bc0576040517fdc84e3a400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610a90565b610b1f8484611a0e565b33600090815260036020526040812080548391908390610beb908490611dcb565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061057b9086815260200190565b60007f0000000000000000000000000000000000000000000000000000000000000000421015610ccd576040517f03a428230000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152602401610a90565b6000610cd88561058d565b90503373ffffffffffffffffffffffffffffffffffffffff841603610e33576040517f52bc94300000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060ff16600482015273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660248301527f00000000000000000000000000000000000000000000000000000000000000006044830152336064830152858116608483015260a482018390527f000000000000000000000000000000000000000000000000000000000000000016906352bc94309060c4016020604051808303816000875af1158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d9190611dde565b506106fc565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020908152604080832033845290915290205481811015610ea8576040517f4a1d07160000000000000000000000000000000000000000000000000000000081526004810182905260248101839052604401610a90565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600460209081526040808320338452909152902054610ee4908390611dcb565b73ffffffffffffffffffffffffffffffffffffffff85811660008181526004602081815260408084203385529091529182902094909455517f52bc943000000000000000000000000000000000000000000000000000000000815260ff7f000000000000000000000000000000000000000000000000000000000000000016938101939093527f0000000000000000000000000000000000000000000000000000000000000000821660248401527f000000000000000000000000000000000000000000000000000000000000000060448401526064830152868116608483015260a482018490527f000000000000000000000000000000000000000000000000000000000000000016906352bc94309060c4016020604051808303816000875af1158015611017573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103b9190611dde565b5050949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004210156110c3576040517f03a428230000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152602401610a90565b3373ffffffffffffffffffffffffffffffffffffffff83160361121d576040517f52bc94300000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060ff16600482015273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660248301527f00000000000000000000000000000000000000000000000000000000000000006044830152336064830152848116608483015260a482018690527f000000000000000000000000000000000000000000000000000000000000000016906352bc94309060c4016020604051808303816000875af11580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190611dde565b90506109a8565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260046020908152604080832033845290915290205484811015611292576040517f4a1d07160000000000000000000000000000000000000000000000000000000081526004810182905260248101869052604401610a90565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091529020546112ce908690611dcb565b73ffffffffffffffffffffffffffffffffffffffff84811660008181526004602081815260408084203385529091529182902094909455517f52bc943000000000000000000000000000000000000000000000000000000000815260ff7f000000000000000000000000000000000000000000000000000000000000000016938101939093527f0000000000000000000000000000000000000000000000000000000000000000821660248401527f000000000000000000000000000000000000000000000000000000000000000060448401526064830152858116608483015260a482018790527f000000000000000000000000000000000000000000000000000000000000000016906352bc94309060c4016020604051808303816000875af1158015611401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114259190611dde565b9150506109a8565b60007f000000000000000000000000000000000000000000000000000000000000000042101561145f57506000919050565b6040517ff7de8b1f0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060ff16600482015273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000604483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063f7de8b1f906064016040805180830381865afa15801561155e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115829190611d00565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260036020526040902054919350915082906106f2908390611d53565b428410156115fd576040517fb979466100000000000000000000000000000000000000000000000000000000815260048101859052426024820152604401610a90565b600060016116096109af565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561175b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615806117d557508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561182a576040517feecd906e00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff89166024820152604401610a90565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000004210156118d257506000919050565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161192d9190611df7565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546119a79190611ecd565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290611a43908490611dcb565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611a02565b600060208083528351808285015260005b81811015611ac957858101830151858201604001528201611aad565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611b2c57600080fd5b919050565b60008060408385031215611b4457600080fd5b611b4d83611b08565b946020939093013593505050565b600060208284031215611b6d57600080fd5b5035919050565b600080600060608486031215611b8957600080fd5b611b9284611b08565b9250611ba060208501611b08565b9150604084013590509250925092565b600060208284031215611bc257600080fd5b6109a882611b08565b600080600060608486031215611be057600080fd5b83359250611bf060208501611b08565b9150611bfe60408501611b08565b90509250925092565b600080600080600080600060e0888a031215611c2257600080fd5b611c2b88611b08565b9650611c3960208901611b08565b95506040880135945060608801359350608088013560ff81168114611c5d57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611c8d57600080fd5b611c9683611b08565b9150611ca460208401611b08565b90509250929050565b600181811c90821680611cc157607f821691505b602082108103611cfa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008060408385031215611d1357600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d8b57611d8b611d24565b500290565b600082611dc6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561058757610587611d24565b600060208284031215611df057600080fd5b5051919050565b600080835481600182811c915080831680611e1357607f831692505b60208084108203611e4b577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015611e5f5760018114611e9257611ebf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650611ebf565b60008a81526020902060005b86811015611eb75781548b820152908501908301611e9e565b505084890196505b509498975050505050505050565b8082018082111561058757610587611d2456fea26469706673582212202f3e371f871d6d3f02c70957471f93936013db4fd8be23c83029d227ff69409364736f6c634300081000336101206040523480156200001257600080fd5b5060405162002746380380620027468339810160408190526200003591620009ac565b60ff85166101005260e08490526001600160a01b0380841660805282811660c052811660a052604080516060810182526000808252602082810191909152909182019062000090908890879062001082620000d1821b17901c565b90526001600160a01b0390921660009081526020818152604091829020845181559084015160018201559201516002909201919091555062000ac392505050565b600060001960ff841601620000fe57620000f682620003b660201b620014241760201c565b9050620003b0565b60011960ff8416016200017057816001600160a01b031663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200014a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f6919062000a25565b60021960ff841601620001bc57816001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200014a573d6000803e3d6000fd5b60031960ff8416016200031a576000829050806001600160a01b0316637535d2466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200020d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000233919062000a3f565b6001600160a01b031663d15e0053826001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000280573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a6919062000a3f565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620002eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000311919062000a25565b915050620003b0565b60041960ff841601620003785760405163010ad6d160e01b81526a52b7d2dcc80cd2e400000060048201526001600160a01b0383169063010ad6d1906024015b602060405180830381865afa1580156200014a573d6000803e3d6000fd5b6040516303d1689d60e11b81526a52b7d2dcc80cd2e400000060048201526001600160a01b038316906307a2d13a906024016200035a565b92915050565b600080826001600160a01b0316636c540baf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200041e919062000a25565b90504381036200049457826001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000467573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200048d919062000a25565b9392505050565b6000836001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fb919062000a3f565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a0823190602401602060405180830381865afa15801562000544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200056a919062000a25565b90506000846001600160a01b03166347bd37186040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005d3919062000a25565b90506000856001600160a01b0316638f840ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000616573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200063c919062000a25565b90506000866001600160a01b031663f3fdb15a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200067f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a5919062000a3f565b6040516315f2405360e01b81526004810186905260248101859052604481018490526001600160a01b0391909116906315f2405390606401602060405180830381865afa158015620006fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000721919062000a25565b905065048c273950008111156200076e5760405162461bcd60e51b815260206004820152600d60248201526c0a482a88abea89e9ebe90928e9609b1b604482015260640160405180910390fd5b6000620007a18462000781884362000a75565b6200078d908562000a8b565b6200094a60201b620019c01790919060201c565b905060008362000810838b6001600160a01b031663173b99046040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007ea573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078d919062000a25565b6200081c919062000aad565b905060006200082c868462000aad565b905060008a6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200086f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000895919062000a25565b90508015620008d657620008d08184620008b0858c62000aad565b620008bc919062000a75565b6200096160201b620019d51790919060201c565b6200093b565b8a6001600160a01b031663675d972c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200093b919062000a25565b9b9a5050505050505050505050565b60006200048d8383670de0b6b3a764000062000973565b60006200048d83670de0b6b3a7640000845b8282028115158415858304851417166200098c57600080fd5b0492915050565b6001600160a01b0381168114620009a957600080fd5b50565b600080600080600060a08688031215620009c557600080fd5b855160ff81168114620009d757600080fd5b602087015160408801519196509450620009f18162000993565b606087015190935062000a048162000993565b608087015190925062000a178162000993565b809150509295509295909350565b60006020828403121562000a3857600080fd5b5051919050565b60006020828403121562000a5257600080fd5b81516200048d8162000993565b634e487b7160e01b600052601160045260246000fd5b81810381811115620003b057620003b062000a5f565b600081600019048311821515161562000aa85762000aa862000a5f565b500290565b80820180821115620003b057620003b062000a5f565b60805160a05160c05160e05161010051611bf962000b4d6000396000818161027001526108a60152600061019001526000818160ff01528181610e7601526110100152600081816101b70152818161033f015281816106f40152818161090d01528181610b3f01528181610bd40152610db201526000818161031901526108c70152611bf96000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063613a28d111610097578063a01cfffb11610066578063a01cfffb146102a4578063a622ee7c146102b7578063b326258d14610301578063b7dd34831461031457600080fd5b8063613a28d1146101f65780636392a51f1461020957806364ae3c9d146102585780638ce744261461026b57600080fd5b806319caf46c116100d357806319caf46c14610178578063204f83f91461018b5780632e25d2a6146101b257806343f48fbd146101d957600080fd5b8063012b264a146100fa57806311554c431461013e5780631779467314610155575b600080fd5b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61014760015481565b604051908152602001610135565b610168610163366004611a1d565b61033b565b6040519015158152602001610135565b610147610186366004611a5e565b6106f0565b6101477f000000000000000000000000000000000000000000000000000000000000000081565b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6101e161089c565b60408051928352602083019190915201610135565b610168610204366004611a7b565b610909565b6101e1610217366004611a5e565b6001600160a01b0316600090815260208181526040918290208251606081018452815480825260018301549382018490526002909201549301929092529091565b610168610266366004611aa7565b610b3b565b6102927f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610135565b6101686102b2366004611a7b565b610bd0565b6102e66102c5366004611a5e565b60006020819052908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610135565b61016861030f366004611a7b565b610dae565b6101217f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146103cb576040517f6d4c6c890000000000000000000000000000000000000000000000000000000081526000600482018190526024820181905260448201523360648201526001600160a01b038216608482015260a4015b60405180910390fd5b836001600160a01b0316856001600160a01b03160361043e576040517f6d4c6c890000000000000000000000000000000000000000000000000000000081526020600482015260006024820181905260448201526001600160a01b0380871660648301528516608482015260a4016103c2565b6001600160a01b03808616600090815260208181526040808320815160608082018452825482526001808401548387015260029384015483860152968b1686528585529483902083519586018452805486529586015493850193909352939093015492820192909252815185111561050d5781516040517f6d4c6c89000000000000000000000000000000000000000000000000000000008152601f60048201526024810187905260448101919091526001600160a01b0380891660648301528716608482015260a4016103c2565b60008061051861089c565b9150915060006a52b7d2dcc80cd2e40000008560400151846a52b7d2dcc80cd2e40000006105469190611aef565b6105509190611b2c565b61055a9190611b67565b905060006a52b7d2dcc80cd2e40000008660200151876000015161057e9190611b7a565b6105889084611aef565b6105929190611b2c565b90508086602001516105a49190611b7a565b602087015285516105b6908a90611b67565b86528284106105c557826105c7565b835b60408088019182526001600160a01b038d16600090815260208181529190208851815590880151600182015590516002909101558451156106935760408501516a52b7d2dcc80cd2e40000009061061e8683611aef565b6106289190611b2c565b6106329190611b67565b91506a52b7d2dcc80cd2e4000000856020015186600001516106549190611b7a565b61065e9084611aef565b6106689190611b2c565b905080856020015161067a9190611b7a565b6020860152845161068c908a90611b7a565b8552610697565b8885525b8284106106a457826106a6565b835b60408087019182526001600160a01b038c16600090815260208181529190208751815596015160018088019190915590516002909601959095555092955050505050509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b0382161461077b576040517f6d4c6c890000000000000000000000000000000000000000000000000000000081526000600482018190526024820181905260448201523360648201526001600160a01b038216608482015260a4016103c2565b6001600160a01b03831660009081526020818152604080832081516060810183528154815260018201549381018490526002909101549181019190915291806107c261089c565b9150915060006a52b7d2dcc80cd2e40000008560400151846a52b7d2dcc80cd2e40000006107f09190611aef565b6107fa9190611b2c565b6108049190611b67565b905060006a52b7d2dcc80cd2e4000000866020015187600001516108289190611b7a565b6108329084611aef565b61083c9190611b2c565b905082841061084b578261084d565b835b604080880191825260006020808a018281526001600160a01b038e168352908290529190208851815590516001820155905160029091015561088f8186611b7a565b9998505050505050505050565b60008060006108eb7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611082565b90506000600154116108fd5780610901565b6001545b939092509050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610994576040517f6d4c6c890000000000000000000000000000000000000000000000000000000081526000600482018190526024820181905260448201523360648201526001600160a01b038216608482015260a4016103c2565b6001600160a01b038416600090815260208181526040918290208251606081018452815480825260018301549382019390935260029091015492810192909252841115610a375780516040517f6d4c6c89000000000000000000000000000000000000000000000000000000008152601f60048201526024810186905260448101919091526001600160a01b03861660648201526000608482015260a4016103c2565b600080610a4261089c565b9150915060006a52b7d2dcc80cd2e40000008460400151846a52b7d2dcc80cd2e4000000610a709190611aef565b610a7a9190611b2c565b610a849190611b67565b905060006a52b7d2dcc80cd2e400000085602001518660000151610aa89190611b7a565b610ab29084611aef565b610abc9190611b2c565b9050808560200151610ace9190611b7a565b60208601528451610ae0908990611b67565b85526001548311610af15782610af3565b835b60408087019182526001600160a01b038b1660009081526020818152919020875181559601516001808801919091559051600290960195909555509294505050505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610bc6576040517f6d4c6c890000000000000000000000000000000000000000000000000000000081526000600482018190526024820181905260448201523360648201526001600160a01b038216608482015260a4016103c2565b5050600190815590565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610c5b576040517f6d4c6c890000000000000000000000000000000000000000000000000000000081526000600482018190526024820181905260448201523360648201526001600160a01b038216608482015260a4016103c2565b600080610c6661089c565b6001600160a01b0388166000908152602081815260409182902082516060810184528154808252600183015493820193909352600290910154928101929092529294509092509015610d565760006a52b7d2dcc80cd2e40000008260400151856a52b7d2dcc80cd2e4000000610cdc9190611aef565b610ce69190611b2c565b610cf09190611b67565b905060006a52b7d2dcc80cd2e400000083602001518460000151610d149190611b7a565b610d1e9084611aef565b610d289190611b2c565b9050808360200151610d3a9190611b7a565b60208401528251610d4c908990611b7a565b835250610d5a9050565b8581525b818310610d675781610d69565b825b60408083019182526001600160a01b03891660009081526020818152919020835181559201516001808401919091559051600290920191909155935050505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610e39576040517f6d4c6c890000000000000000000000000000000000000000000000000000000081526000600482018190526024820181905260448201523360648201526001600160a01b038216608482015260a4016103c2565b6001600160a01b038085166000908152602081815260408083208151606080820184528254825260018084015483870152600293840154838601527f0000000000000000000000000000000000000000000000000000000000000000909716865285855294839020835195860184528054865295860154938501939093529390930154928201929092528151851115610f285781516040517f6d4c6c89000000000000000000000000000000000000000000000000000000008152601f60048201526024810187905260448101919091526001600160a01b03871660648201526000608482015260a4016103c2565b8151610f35908690611b67565b8252600080610f4261089c565b9150915080836040015114610ff55760006a52b7d2dcc80cd2e40000008460400151846a52b7d2dcc80cd2e4000000610f7b9190611aef565b610f859190611b2c565b610f8f9190611b67565b905060006a52b7d2dcc80cd2e400000085602001518660000151610fb39190611b7a565b610fbd9084611aef565b610fc79190611b2c565b9050808560200151610fd99190611b7a565b6020860152828410610feb5782610fed565b835b604086015250505b8251611002908890611b7a565b835250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600090815260208181526040808320855181558286015160018083019190915595820151600291820155938a1683529182902085518155908501518185015593015192019190915591505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff8416016110be576110b782611424565b905061141e565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff84160161114a57816001600160a01b031663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611126573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b79190611b8d565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60ff8416016111b257816001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa158015611126573d6000803e3d6000fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60ff84160161133b576000829050806001600160a01b0316637535d2466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561121f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112439190611ba6565b6001600160a01b031663d15e0053826001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561128f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b39190611ba6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561130f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113339190611b8d565b91505061141e565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb60ff8416016113ce576040517f010ad6d10000000000000000000000000000000000000000000000000000000081526a52b7d2dcc80cd2e400000060048201526001600160a01b0383169063010ad6d1906024015b602060405180830381865afa158015611126573d6000803e3d6000fd5b6040517f07a2d13a0000000000000000000000000000000000000000000000000000000081526a52b7d2dcc80cd2e400000060048201526001600160a01b038316906307a2d13a906024016113b1565b92915050565b600080826001600160a01b0316636c540baf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114899190611b8d565b90504381036114fb57826001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f49190611b8d565b9392505050565b6000836001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561153b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155f9190611ba6565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015291909116906370a0823190602401602060405180830381865afa1580156115c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e49190611b8d565b90506000846001600160a01b03166347bd37186040518163ffffffff1660e01b8152600401602060405180830381865afa158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a9190611b8d565b90506000856001600160a01b0316638f840ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b09190611b8d565b90506000866001600160a01b031663f3fdb15a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117169190611ba6565b6040517f15f240530000000000000000000000000000000000000000000000000000000081526004810186905260248101859052604481018490526001600160a01b0391909116906315f2405390606401602060405180830381865afa158015611784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a89190611b8d565b905065048c2739500081111561181a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f524154455f544f4f5f484947480000000000000000000000000000000000000060448201526064016103c2565b600061183a8461182a8843611b67565b6118349085611aef565b906119c0565b90506000836118a5838b6001600160a01b031663173b99046040518163ffffffff1660e01b8152600401602060405180830381865afa158015611881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118349190611b8d565b6118af9190611b7a565b905060006118bd8684611b7a565b905060008a6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119239190611b8d565b9050801561194f5761194a818461193a858c611b7a565b6119449190611b67565b906119d5565b6119b1565b8a6001600160a01b031663675d972c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561198d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b19190611b8d565b9b9a5050505050505050505050565b60006114f48383670de0b6b3a76400006119e6565b60006114f483670de0b6b3a7640000845b8282028115158415858304851417166119fe57600080fd5b0492915050565b6001600160a01b0381168114611a1a57600080fd5b50565b600080600060608486031215611a3257600080fd5b8335611a3d81611a05565b92506020840135611a4d81611a05565b929592945050506040919091013590565b600060208284031215611a7057600080fd5b81356114f481611a05565b60008060408385031215611a8e57600080fd5b8235611a9981611a05565b946020939093013593505050565b600060208284031215611ab957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b2757611b27611ac0565b500290565b600082611b62577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561141e5761141e611ac0565b8082018082111561141e5761141e611ac0565b600060208284031215611b9f57600080fd5b5051919050565b600060208284031215611bb857600080fd5b81516114f481611a0556fea264697066735822122068de531fd01c254ae6ccfc9f381add514cc9257b2a44a23e32b3c962a6afad8164736f6c63430008100033a264697066735822122097825d9cabd7af153d8ec08dd5859852e90a5c81b7faf31e5c7f5fcb40871a6764736f6c63430008100033",
}

// CreatorABI is the input ABI used to generate the binding from.
// Deprecated: Use CreatorMetaData.ABI instead.
var CreatorABI = CreatorMetaData.ABI

// CreatorBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use CreatorMetaData.Bin instead.
var CreatorBin = CreatorMetaData.Bin

// DeployCreator deploys a new Ethereum contract, binding an instance of Creator to it.
func DeployCreator(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Creator, error) {
	parsed, err := CreatorMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(CreatorBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Creator{CreatorCaller: CreatorCaller{contract: contract}, CreatorTransactor: CreatorTransactor{contract: contract}, CreatorFilterer: CreatorFilterer{contract: contract}}, nil
}

// Creator is an auto generated Go binding around an Ethereum contract.
type Creator struct {
	CreatorCaller     // Read-only binding to the contract
	CreatorTransactor // Write-only binding to the contract
	CreatorFilterer   // Log filterer for contract events
}

// CreatorCaller is an auto generated read-only Go binding around an Ethereum contract.
type CreatorCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CreatorTransactor is an auto generated write-only Go binding around an Ethereum contract.
type CreatorTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CreatorFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type CreatorFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CreatorSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type CreatorSession struct {
	Contract     *Creator          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CreatorCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type CreatorCallerSession struct {
	Contract *CreatorCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// CreatorTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type CreatorTransactorSession struct {
	Contract     *CreatorTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// CreatorRaw is an auto generated low-level Go binding around an Ethereum contract.
type CreatorRaw struct {
	Contract *Creator // Generic contract binding to access the raw methods on
}

// CreatorCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type CreatorCallerRaw struct {
	Contract *CreatorCaller // Generic read-only contract binding to access the raw methods on
}

// CreatorTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type CreatorTransactorRaw struct {
	Contract *CreatorTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCreator creates a new instance of Creator, bound to a specific deployed contract.
func NewCreator(address common.Address, backend bind.ContractBackend) (*Creator, error) {
	contract, err := bindCreator(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Creator{CreatorCaller: CreatorCaller{contract: contract}, CreatorTransactor: CreatorTransactor{contract: contract}, CreatorFilterer: CreatorFilterer{contract: contract}}, nil
}

// NewCreatorCaller creates a new read-only instance of Creator, bound to a specific deployed contract.
func NewCreatorCaller(address common.Address, caller bind.ContractCaller) (*CreatorCaller, error) {
	contract, err := bindCreator(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CreatorCaller{contract: contract}, nil
}

// NewCreatorTransactor creates a new write-only instance of Creator, bound to a specific deployed contract.
func NewCreatorTransactor(address common.Address, transactor bind.ContractTransactor) (*CreatorTransactor, error) {
	contract, err := bindCreator(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CreatorTransactor{contract: contract}, nil
}

// NewCreatorFilterer creates a new log filterer instance of Creator, bound to a specific deployed contract.
func NewCreatorFilterer(address common.Address, filterer bind.ContractFilterer) (*CreatorFilterer, error) {
	contract, err := bindCreator(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CreatorFilterer{contract: contract}, nil
}

// bindCreator binds a generic wrapper to an already deployed contract.
func bindCreator(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CreatorABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Creator *CreatorRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Creator.Contract.CreatorCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Creator *CreatorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Creator.Contract.CreatorTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Creator *CreatorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Creator.Contract.CreatorTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Creator *CreatorCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Creator.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Creator *CreatorTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Creator.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Creator *CreatorTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Creator.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Creator *CreatorCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Creator.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Creator *CreatorSession) Admin() (common.Address, error) {
	return _Creator.Contract.Admin(&_Creator.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Creator *CreatorCallerSession) Admin() (common.Address, error) {
	return _Creator.Contract.Admin(&_Creator.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Creator *CreatorCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Creator.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Creator *CreatorSession) MarketPlace() (common.Address, error) {
	return _Creator.Contract.MarketPlace(&_Creator.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Creator *CreatorCallerSession) MarketPlace() (common.Address, error) {
	return _Creator.Contract.MarketPlace(&_Creator.CallOpts)
}

// Create is a paid mutator transaction binding the contract method 0x6363e867.
//
// Solidity: function create(uint8 p, address u, uint256 m, address c, address sw, string n, string s, uint8 d) returns(address, address)
func (_Creator *CreatorTransactor) Create(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, c common.Address, sw common.Address, n string, s string, d uint8) (*types.Transaction, error) {
	return _Creator.contract.Transact(opts, "create", p, u, m, c, sw, n, s, d)
}

// Create is a paid mutator transaction binding the contract method 0x6363e867.
//
// Solidity: function create(uint8 p, address u, uint256 m, address c, address sw, string n, string s, uint8 d) returns(address, address)
func (_Creator *CreatorSession) Create(p uint8, u common.Address, m *big.Int, c common.Address, sw common.Address, n string, s string, d uint8) (*types.Transaction, error) {
	return _Creator.Contract.Create(&_Creator.TransactOpts, p, u, m, c, sw, n, s, d)
}

// Create is a paid mutator transaction binding the contract method 0x6363e867.
//
// Solidity: function create(uint8 p, address u, uint256 m, address c, address sw, string n, string s, uint8 d) returns(address, address)
func (_Creator *CreatorTransactorSession) Create(p uint8, u common.Address, m *big.Int, c common.Address, sw common.Address, n string, s string, d uint8) (*types.Transaction, error) {
	return _Creator.Contract.Create(&_Creator.TransactOpts, p, u, m, c, sw, n, s, d)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x704b6c02.
//
// Solidity: function setAdmin(address a) returns(bool)
func (_Creator *CreatorTransactor) SetAdmin(opts *bind.TransactOpts, a common.Address) (*types.Transaction, error) {
	return _Creator.contract.Transact(opts, "setAdmin", a)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x704b6c02.
//
// Solidity: function setAdmin(address a) returns(bool)
func (_Creator *CreatorSession) SetAdmin(a common.Address) (*types.Transaction, error) {
	return _Creator.Contract.SetAdmin(&_Creator.TransactOpts, a)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x704b6c02.
//
// Solidity: function setAdmin(address a) returns(bool)
func (_Creator *CreatorTransactorSession) SetAdmin(a common.Address) (*types.Transaction, error) {
	return _Creator.Contract.SetAdmin(&_Creator.TransactOpts, a)
}

// SetMarketPlace is a paid mutator transaction binding the contract method 0x30568a8d.
//
// Solidity: function setMarketPlace(address m) returns(bool)
func (_Creator *CreatorTransactor) SetMarketPlace(opts *bind.TransactOpts, m common.Address) (*types.Transaction, error) {
	return _Creator.contract.Transact(opts, "setMarketPlace", m)
}

// SetMarketPlace is a paid mutator transaction binding the contract method 0x30568a8d.
//
// Solidity: function setMarketPlace(address m) returns(bool)
func (_Creator *CreatorSession) SetMarketPlace(m common.Address) (*types.Transaction, error) {
	return _Creator.Contract.SetMarketPlace(&_Creator.TransactOpts, m)
}

// SetMarketPlace is a paid mutator transaction binding the contract method 0x30568a8d.
//
// Solidity: function setMarketPlace(address m) returns(bool)
func (_Creator *CreatorTransactorSession) SetMarketPlace(m common.Address) (*types.Transaction, error) {
	return _Creator.Contract.SetMarketPlace(&_Creator.TransactOpts, m)
}
