// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package lender

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SwivelComponents is an auto generated low-level Go binding around an user-defined struct.
type SwivelComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelOrder is an auto generated low-level Go binding around an user-defined struct.
type SwivelOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// LenderABI is the input ABI used to generate the binding from.
const LenderABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returned\",\"type\":\"uint256\"}],\"name\":\"Lend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"u\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"c\",\"type\":\"address[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"i\",\"type\":\"bytes32\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"a\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aave\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structSwivel.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSwivel.Components[]\",\"name\":\"s\",\"type\":\"tuple[]\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"f\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"name\":\"setMarketPlaceAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swivelAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempusAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// LenderBin is the compiled bytecode used for deploying new contracts.
var LenderBin = "0x60806040523480156200001157600080fd5b5060405162003920380380620039208339810160408190526200003491620000a5565b600080546001600160a01b03199081163317909155600280546001600160a01b039586169083161790556003805493851693821693909317909255600480549190931691161790556103e8600555620000ef565b80516001600160a01b0381168114620000a057600080fd5b919050565b600080600060608486031215620000bb57600080fd5b620000c68462000088565b9250620000d66020850162000088565b9150620000e66040850162000088565b90509250925092565b61382180620000ff6000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063de1d3cb5116100cd578063f3cf26f311610081578063f851a44011610066578063f851a440146102e5578063f9a17fcb146102f8578063faaebd211461030b57600080fd5b8063f3cf26f3146102bf578063f7302e7c146102d257600080fd5b8063e86e5e6d116100b2578063e86e5e6d14610286578063ea08c03114610299578063ef603569146102ac57600080fd5b8063de1d3cb514610260578063e448b4581461027357600080fd5b806369fe0e2d11610124578063c1a7abfd11610109578063c1a7abfd14610227578063cc98ef961461023a578063dc4c7ca91461024d57600080fd5b806369fe0e2d1461020b5780639e6b51731461021e57600080fd5b80634135c9d1116101555780634135c9d1146101c257806351cff8d9146101d557806365dff1e1146101f857600080fd5b806303799f87146101715780632e25d2a614610197575b600080fd5b61018461017f366004612ac9565b61032b565b6040519081526020015b60405180910390f35b6001546101aa906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b6101846101d0366004612b43565b6106fc565b6101e86101e3366004612b9a565b610b9c565b604051901515815260200161018e565b6101e8610206366004612c03565b610c33565b6101e8610219366004612c6f565b610d89565b61018460055481565b610184610235366004612ca6565b610def565b6101e8610248366004612b9a565b611182565b6101e861025b366004612d28565b611231565b6004546101aa906001600160a01b031681565b610184610281366004612d6c565b6113c8565b610184610294366004612d28565b61186c565b6002546101aa906001600160a01b031681565b6003546101aa906001600160a01b031681565b6101846102cd366004612def565b611c9b565b6101846102e0366004612ee5565b611ff0565b6000546101aa906001600160a01b031681565b610184610306366004612fc3565b6122e9565b610184610319366004612b9a565b60066020526000908152604090205481565b600060ff891660031461033d57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190613020565b9050886001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190613020565b6001600160a01b0316146104a25760405162461bcd60e51b815260206004820181905260248201527f656c656d656e7420756e6465726c79696e6720213d20756e6465726c79696e6760448201526064015b60405180910390fd5b87816001600160a01b031663aa082a9d6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610507919061303d565b146105545760405162461bcd60e51b815260206004820152601c60248201527f656c656d656e74206d6174757269747920213d206d61747572697479000000006044820152606401610499565b6105608933308a6125cb565b61056987612681565b6001600160a01b038a1660009081526006602052604081208054909190610591908490613085565b90915550506040805160808101825230808252602082015260008183018190526060820181905282516101208101845260c081018481529293919290918291906137ac60e084013981526020018681526020016105ed8b612681565b6105f7908c61309d565b8152602001600081526020018c6001600160a01b03168152602001846001600160a01b031681525090506000866001600160a01b03166369bbd8cd83858c8c6040518563ffffffff1660e01b815260040161065594939291906130ef565b6020604051808303816000875af1158015610674573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610698919061303d565b90508a8c6001600160a01b03167f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d98f846040516106e492919060ff929092168252602082015260400190565b60405180910390a39c9b505050505050505050505050565b600060ff871660041461070e57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820188905260ff8a166044830152600092169063ca1695f0906064016020604051808303816000875af1158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190613020565b90506000819050876001600160a01b0316816001600160a01b03166376d5de856040518163ffffffff1660e01b81526004016020604051808303816000875af11580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190613020565b6001600160a01b0316146108735760405162461bcd60e51b815260206004820152601f60248201527f70656e646c6520756e6465726c79696e6720213d20756e6465726c79696e67006044820152606401610499565b86816001600160a01b031663e184c9be6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d8919061303d565b146109255760405162461bcd60e51b815260206004820152601b60248201527f70656e646c65206d6174757269747920213d206d6174757269747900000000006044820152606401610499565b610931883330896125cb565b61093a86612681565b6001600160a01b03891660009081526006602052604081208054909190610962908490613085565b9091555050604080516002808252606082018352600092602083019080368337019050509050888160008151811061099c5761099c613244565b60200260200101906001600160a01b031690816001600160a01b03168152505082816001815181106109d0576109d0613244565b6001600160a01b039283166020918202929092010152600354600091166338ed17396109fb8a612681565b610a05908b61309d565b8985308b6040518663ffffffff1660e01b8152600401610a29959493929190613273565b6000604051808303816000875af1158015610a48573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a8e919081019061335d565b600081518110610aa057610aa0613244565b602002602001015190506000610ab68b8b6126a6565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190613411565b506040805160ff8e168152602081018490528b916001600160a01b038e16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509a9950505050505050505050565b600080546001600160a01b0316338114610bf85760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b6001600160a01b03808416600090815260066020526040812080549082905590548592610c289184911683612745565b506001949350505050565b600080546001600160a01b0316338114610c8f5760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b84838114610cdf5760405162461bcd60e51b815260206004820152601560248201527f6172726179206c656e677468206d69736d6174636800000000000000000000006044820152606401610499565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005b82811015610d7a576000898983818110610d1f57610d1f613244565b9050602002016020810190610d349190612b9a565b9050610d6781898985818110610d4c57610d4c613244565b9050602002016020810190610d619190612b9a565b856127eb565b5080610d728161342e565b915050610d03565b50600198975050505050505050565b600080546001600160a01b0316338114610de55760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b5050600555600190565b600060ff8816600614610e0157600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820189905260ff8b166044830152600092169063ca1695f0906064016020604051808303816000875af1158015610e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9b9190613020565b9050876001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610ee7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0b9190613020565b6001600160a01b031614610f615760405162461bcd60e51b815260206004820152601e60248201527f73656e736520756e6465726c79696e6720213d20756e6465726c79696e6700006044820152606401610499565b6000610f7e876fffffffffffffffffffffffffffffffff16612681565b6001600160a01b038a16600090815260066020526040812080549293508392909190610fab908490613085565b9091555060009050610fcf826fffffffffffffffffffffffffffffffff8a1661309d565b9050610fef8a33308b6fffffffffffffffffffffffffffffffff166125cb565b6040517f8f1f30f00000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018b9052604482018390526064820189905260009190881690638f1f30f0906084016020604051808303816000875af1158015611069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108d919061303d565b9050600061109b8c8c6126a6565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015611104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111289190613411565b506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600080546001600160a01b03163381146111de5760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b6001546001600160a01b0316156111f457600080fd5b600180546001600160a01b0385167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116178155915050919050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820185905260ff87166044830152600092839291169063ca1695f0906064016020604051808303816000875af11580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce9190613020565b90506112dc813330866125cb565b6112e685856126a6565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b0391909116906340c10f19906044016020604051808303816000875af115801561134e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113729190613411565b506040805160ff881681526020810185905285916001600160a01b038816917f309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6910160405180910390a350600195945050505050565b600060ff89166005146113da57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114749190613020565b9050886001600160a01b0316816001600160a01b0316632d81f8386040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e29190613020565b6001600160a01b0316146115385760405162461bcd60e51b815260206004820152601f60248201527f74656d70757320756e6465726c79696e6720213d20756e6465726c79696e67006044820152606401610499565b87816001600160a01b0316634e8bfdaa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b919061303d565b146115e85760405162461bcd60e51b815260206004820152601b60248201527f74656d707573206d6174757269747920213d206d6174757269747900000000006044820152606401610499565b886115f58133308b6125cb565b6115fe88612681565b6001600160a01b038b1660009081526006602052604081208054909190611626908490613085565b90915550600090506116388b8b6126a6565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038316906370a08231906024016020604051808303816000875af115801561169d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c1919061303d565b6004546001600160a01b0316634f255a1f888a6116dd8f612681565b8f6116e8919061309d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039384166004820152929091166024830152604482015260016064820152608481018d905260a481018c905260c4016020604051808303816000875af1158015611769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178d919061303d565b611797919061309d565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018290529091506001600160a01b038316906340c10f19906044015b6020604051808303816000875af1158015611801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118259190613411565b506040805160ff8f168152602081018390528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d991016106e4565b600060ff851660081461187e57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820186905260ff88166044830152600092169063ca1695f0906064016020604051808303816000875af11580156118f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119189190613020565b9050600081905084816001600160a01b031663e16695b56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561195e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119829190613466565b64ffffffffff16146119d65760405162461bcd60e51b815260206004820152601d60248201527f6e6f74696f6e616c206d6174757269747920213d206d617475726974790000006044820152606401610499565b6000816001600160a01b031663ee719bc86040518163ffffffff1660e01b81526004016040805180830381865afa158015611a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a39919061348d565b509050866001600160a01b0316816001600160a01b031614611ac35760405162461bcd60e51b815260206004820152602160248201527f6e6f74696f6e616c20756e6465726c79696e6720213d20756e6465726c79696e60448201527f67000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b611acf873330886125cb565b6000611ada86612681565b6001600160a01b038916600090815260066020526040812080549293508392909190611b07908490613085565b90915550600090506001600160a01b038416636e553f65611b28848a61309d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091523060248201526044016020604051808303816000875af1158015611b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba8919061303d565b90506000611bb68a8a6126a6565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015611c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c439190613411565b506040805160ff8d168152602081018490528a916001600160a01b038d16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509998505050505050505050565b600060ff8916600714611cad57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d479190613020565b9050886001600160a01b0316816001600160a01b0316631e5f74a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db59190613020565b6001600160a01b031614611e0b5760405162461bcd60e51b815260206004820152601d60248201527f617077696e65207072696e6369706c6520213d207072696e6369706c650000006044820152606401610499565b611e178933308a6125cb565b6000611e2288612681565b6001600160a01b038b16600090815260066020526040812080549293508392909190611e4f908490613085565b9091555060009050611e61828a61309d565b6040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b038d8116600483015260248201839052306044830152600060648301529192509087169063e8eda9df90608401600060405180830381600087803b158015611ed557600080fd5b505af1158015611ee9573d6000803e3d6000fd5b50506040517f5dde4ba6000000000000000000000000000000000000000000000000000000008152600481018890526001602482015260448101849052600060648201819052608482018c90523060a483015292506001600160a01b038a169150635dde4ba69060c4016020604051808303816000875af1158015611f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f96919061303d565b9050611fa28c8c6126a6565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f19906044016117e2565b600060ff8b1660011461200257600080fd5b60008080805b878110156121b957600089898381811061202457612024613244565b9050610120020180360381019061203b91906134c6565b90508d8160e00151146120905760405162461bcd60e51b815260206004820152601b60248201527f73776976656c206d6174757269747920213d206d6174757269747900000000006044820152606401610499565b8e6001600160a01b031681604001516001600160a01b0316146120f55760405162461bcd60e51b815260206004820152601f60248201527f73776976656c20756e6465726c79696e6720213d20756e6465726c79696e67006044820152606401610499565b60006121188e8e8581811061210c5761210c613244565b90506020020135612681565b90506121248185613085565b9350808e8e8581811061213957612139613244565b9050602002013561214a919061309d565b6121549087613085565b95508160a001518260c0015161216a919061355d565b818f8f8681811061217d5761217d613244565b9050602002013561218e919061309d565b6121989190613598565b6121a29086613085565b9450505080806121b19061342e565b915050612008565b506001600160a01b038d16600090815260066020526040812080548392906121e2908490613085565b909155506121f490508d3330866125cb565b600260009054906101000a90046001600160a01b03166001600160a01b031663d2144f5889898e8e8b8b6040518763ffffffff1660e01b815260040161223f96959493929190613679565b6020604051808303816000875af115801561225e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122829190613411565b5061228e8d8a8461288b565b50506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600060ff861615806122fe575060ff86166002145b61230757600080fd5b6000829050856001600160a01b0316816001600160a01b0316635001f3b56040518163ffffffff1660e01b81526004016020604051808303816000875af1158015612356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061237a9190613020565b6001600160a01b0316146123d05760405162461bcd60e51b815260206004820152601860248201527f7969656c64206261736520213d20756e6465726c79696e6700000000000000006044820152606401610499565b84816001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015612411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124359190613768565b63ffffffff16146124885760405162461bcd60e51b815260206004820152601a60248201527f7969656c64206d6174757269747920213d206d617475726974790000000000006044820152606401610499565b612494863330876125cb565b60006124b387856124a488612681565b6124ae908961309d565b61288b565b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff891601612577576124e987876126a6565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f19906044016020604051808303816000875af1158015612551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125759190613411565b505b6040805160ff8a1681526020810183905287916001600160a01b038a16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3979650505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af191505061262e81612a06565b61267a5760405162461bcd60e51b815260206004820152601460248201527f7472616e736665722066726f6d206661696c65640000000000000000000000006044820152606401610499565b5050505050565b600080600554116126935760006126a0565b6005546126a0908361355d565b92915050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905260006044830181905292169063ca1695f0906064016020604051808303816000875af115801561271a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061273e9190613020565b9392505050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af191505061279981612a06565b6127e55760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401610499565b50505050565b60006040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af191505061283f81612a06565b6127e55760405162461bcd60e51b815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610499565b600080836001600160a01b03166313e7bc8c6128a685612a50565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526fffffffffffffffffffffffffffffffff90911660048201526024016020604051808303816000875af115801561290d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612931919061378e565b90506129508585836fffffffffffffffffffffffffffffffff16612745565b6040517fbcc1694f0000000000000000000000000000000000000000000000000000000081523060048201526fffffffffffffffffffffffffffffffff821660248201526001600160a01b0385169063bcc1694f906044016020604051808303816000875af11580156129c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129eb919061378e565b506fffffffffffffffffffffffffffffffff16949350505050565b6000803d83612a1957806000803e806000fd5b8060208114612a31578015612a425760009250612a47565b816000803e60005115159250612a47565b600192505b50909392505050565b60006fffffffffffffffffffffffffffffffff821115612a8c5760405162461bcd60e51b81526020600482015260006024820152604401610499565b5090565b803560ff81168114612aa157600080fd5b919050565b6001600160a01b0381168114612abb57600080fd5b50565b8035612aa181612aa6565b600080600080600080600080610100898b031215612ae657600080fd5b612aef89612a90565b97506020890135612aff81612aa6565b965060408901359550606089013594506080890135935060a0890135925060c0890135612b2b81612aa6565b8092505060e089013590509295985092959890939650565b60008060008060008060c08789031215612b5c57600080fd5b612b6587612a90565b95506020870135612b7581612aa6565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060208284031215612bac57600080fd5b813561273e81612aa6565b60008083601f840112612bc957600080fd5b50813567ffffffffffffffff811115612be157600080fd5b6020830191508360208260051b8501011115612bfc57600080fd5b9250929050565b60008060008060408587031215612c1957600080fd5b843567ffffffffffffffff80821115612c3157600080fd5b612c3d88838901612bb7565b90965094506020870135915080821115612c5657600080fd5b50612c6387828801612bb7565b95989497509550505050565b600060208284031215612c8157600080fd5b5035919050565b6fffffffffffffffffffffffffffffffff81168114612abb57600080fd5b600080600080600080600060e0888a031215612cc157600080fd5b612cca88612a90565b96506020880135612cda81612aa6565b9550604088013594506060880135612cf181612c88565b93506080880135925060a0880135612d0881612aa6565b915060c0880135612d1881612aa6565b8091505092959891949750929550565b60008060008060808587031215612d3e57600080fd5b612d4785612a90565b93506020850135612d5781612aa6565b93969395505050506040820135916060013590565b600080600080600080600080610100898b031215612d8957600080fd5b612d9289612a90565b97506020890135612da281612aa6565b965060408901359550606089013594506080890135935060a0890135925060c0890135612dce81612aa6565b915060e0890135612dde81612aa6565b809150509295985092959890939650565b600080600080600080600080610100898b031215612e0c57600080fd5b612e1589612a90565b97506020890135612e2581612aa6565b965060408901359550606089013594506080890135935060a0890135612e4a81612aa6565b925060c0890135612b2b81612aa6565b60008083601f840112612e6c57600080fd5b50813567ffffffffffffffff811115612e8457600080fd5b60208301915083602061012083028501011115612bfc57600080fd5b60008083601f840112612eb257600080fd5b50813567ffffffffffffffff811115612eca57600080fd5b602083019150836020606083028501011115612bfc57600080fd5b60008060008060008060008060008060e08b8d031215612f0457600080fd5b612f0d8b612a90565b995060208b0135612f1d81612aa6565b985060408b0135975060608b013567ffffffffffffffff80821115612f4157600080fd5b612f4d8e838f01612bb7565b909950975060808d01359150612f6282612aa6565b90955060a08c01359080821115612f7857600080fd5b612f848e838f01612e5a565b909650945060c08d0135915080821115612f9d57600080fd5b50612faa8d828e01612ea0565b915080935050809150509295989b9194979a5092959850565b600080600080600060a08688031215612fdb57600080fd5b612fe486612a90565b94506020860135612ff481612aa6565b93506040860135925060608601359150608086013561301281612aa6565b809150509295509295909350565b60006020828403121561303257600080fd5b815161273e81612aa6565b60006020828403121561304f57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561309857613098613056565b500190565b6000828210156130af576130af613056565b500390565b600281106130eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60e081526000855160c060e08401528051806101a085015260005b818110156131285760208184018101516101c087840101520161310a565b8181111561313b5760006101c083870101525b5060208801516101008501526040880151610120850152606088015191506131676101408501836130b4565b60808801516001600160a01b038116610160860152915060a08801516001600160a01b0381166101808601529150601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683016101c0019150613203905060208301866001600160a01b03808251168352806020830151166020840152506040810151151560408301526060810151151560608301525050565b60a082019390935260c0015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156132c35784516001600160a01b03168352938301939183019160010161329e565b50506001600160a01b03969096166060850152505050608001529392505050565b604051610120810167ffffffffffffffff8111828210171561330857613308613215565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561335557613355613215565b604052919050565b6000602080838503121561337057600080fd5b825167ffffffffffffffff8082111561338857600080fd5b818501915085601f83011261339c57600080fd5b8151818111156133ae576133ae613215565b8060051b91506133bf84830161330e565b81815291830184019184810190888411156133d957600080fd5b938501935b838510156133f7578451825293850193908501906133de565b98975050505050505050565b8015158114612abb57600080fd5b60006020828403121561342357600080fd5b815161273e81613403565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361345f5761345f613056565b5060010190565b60006020828403121561347857600080fd5b815164ffffffffff8116811461273e57600080fd5b600080604083850312156134a057600080fd5b82516134ab81612aa6565b6020939093015192949293505050565b8035612aa181613403565b600061012082840312156134d957600080fd5b6134e16132e4565b823581526134f160208401612abe565b602082015261350260408401612abe565b6040820152613513606084016134bb565b6060820152613524608084016134bb565b608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152508091505092915050565b600082613593577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156135d0576135d0613056565b500290565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561360757600080fd5b8260051b8083602087013760009401602001938452509192915050565b8183526000602080850194508260005b8581101561366e5760ff61364783612a90565b16875281830135838801526040808301359088015260609687019690910190600101613634565b509495945050505050565b606080825281810187905260009060808084018a845b8b81101561372f57813583526020808301356136aa81612aa6565b6001600160a01b03169084015260406136c4838201612abe565b6001600160a01b0316908401526136dc8286016134bb565b1515858401526136ed8285016134bb565b15158484015260a0828101359084015260c0808301359084015260e080830135908401526101008083013590840152610120928301929091019060010161368f565b5050848103602086015261374481898b6135d5565b92505050828103604084015261375b818587613624565b9998505050505050505050565b60006020828403121561377a57600080fd5b815163ffffffff8116811461273e57600080fd5b6000602082840312156137a057600080fd5b815161273e81612c8856fe30783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030a2646970667358221220b81d0bfecff17a5309d0ff8235b32b16a0f2af808e6bf2c9309a11a6d98d7cb064736f6c634300080d0033"

// DeployLender deploys a new Ethereum contract, binding an instance of Lender to it.
func DeployLender(auth *bind.TransactOpts, backend bind.ContractBackend, s common.Address, p common.Address, t common.Address) (common.Address, *types.Transaction, *Lender, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(LenderBin), backend, s, p, t)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// Lender is an auto generated Go binding around an Ethereum contract.
type Lender struct {
	LenderCaller     // Read-only binding to the contract
	LenderTransactor // Write-only binding to the contract
	LenderFilterer   // Log filterer for contract events
}

// LenderCaller is an auto generated read-only Go binding around an Ethereum contract.
type LenderCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LenderTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type LenderFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LenderSession struct {
	Contract     *Lender           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LenderCallerSession struct {
	Contract *LenderCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// LenderTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LenderTransactorSession struct {
	Contract     *LenderTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderRaw is an auto generated low-level Go binding around an Ethereum contract.
type LenderRaw struct {
	Contract *Lender // Generic contract binding to access the raw methods on
}

// LenderCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LenderCallerRaw struct {
	Contract *LenderCaller // Generic read-only contract binding to access the raw methods on
}

// LenderTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LenderTransactorRaw struct {
	Contract *LenderTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLender creates a new instance of Lender, bound to a specific deployed contract.
func NewLender(address common.Address, backend bind.ContractBackend) (*Lender, error) {
	contract, err := bindLender(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// NewLenderCaller creates a new read-only instance of Lender, bound to a specific deployed contract.
func NewLenderCaller(address common.Address, caller bind.ContractCaller) (*LenderCaller, error) {
	contract, err := bindLender(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &LenderCaller{contract: contract}, nil
}

// NewLenderTransactor creates a new write-only instance of Lender, bound to a specific deployed contract.
func NewLenderTransactor(address common.Address, transactor bind.ContractTransactor) (*LenderTransactor, error) {
	contract, err := bindLender(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &LenderTransactor{contract: contract}, nil
}

// NewLenderFilterer creates a new log filterer instance of Lender, bound to a specific deployed contract.
func NewLenderFilterer(address common.Address, filterer bind.ContractFilterer) (*LenderFilterer, error) {
	contract, err := bindLender(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &LenderFilterer{contract: contract}, nil
}

// bindLender binds a generic wrapper to an already deployed contract.
func bindLender(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.LenderCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCallerSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCaller) Feenominator(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "feenominator")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCallerSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCaller) Fees(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "fees", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCallerSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCallerSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCaller) PendleAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "pendleAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCallerSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCaller) SwivelAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "swivelAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCallerSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCaller) TempusAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "tempusAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCallerSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] c) returns(bool)
func (_Lender *LenderTransactor) Approve(opts *bind.TransactOpts, u []common.Address, c []common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "approve", u, c)
}

// Approve is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] c) returns(bool)
func (_Lender *LenderSession) Approve(u []common.Address, c []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, c)
}

// Approve is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] c) returns(bool)
func (_Lender *LenderTransactorSession) Approve(u []common.Address, c []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, c)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactor) Lend(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend", p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactor) Lend0(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend0", p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactorSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactor) Lend1(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend1", p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactor) Lend2(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend2", p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactorSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactor) Lend3(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend3", p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactorSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactor) Lend4(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend4", p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactor) Lend5(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend5", p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactor) Lend6(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend6", p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactorSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactor) Mint(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "mint", p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactorSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactor) SetFee(opts *bind.TransactOpts, f *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setFee", f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactorSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactor) SetMarketPlaceAddress(opts *bind.TransactOpts, m common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setMarketPlaceAddress", m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactorSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactor) Withdraw(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "withdraw", e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactorSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// LenderLendIterator is returned from FilterLend and is used to iterate over the raw logs and unpacked data for Lend events raised by the Lender contract.
type LenderLendIterator struct {
	Event *LenderLend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderLendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderLend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderLend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderLendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderLendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderLend represents a Lend event raised by the Lender contract.
type LenderLend struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Returned   *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterLend is a free log retrieval operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) FilterLend(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderLendIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderLendIterator{contract: _Lender.contract, event: "Lend", logs: logs, sub: sub}, nil
}

// WatchLend is a free log subscription operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) WatchLend(opts *bind.WatchOpts, sink chan<- *LenderLend, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderLend)
				if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLend is a log parse operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) ParseLend(log types.Log) (*LenderLend, error) {
	event := new(LenderLend)
	if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// LenderMintIterator is returned from FilterMint and is used to iterate over the raw logs and unpacked data for Mint events raised by the Lender contract.
type LenderMintIterator struct {
	Event *LenderMint // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderMintIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderMint)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderMint)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderMintIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderMintIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderMint represents a Mint event raised by the Lender contract.
type LenderMint struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Amount     *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterMint is a free log retrieval operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) FilterMint(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderMintIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderMintIterator{contract: _Lender.contract, event: "Mint", logs: logs, sub: sub}, nil
}

// WatchMint is a free log subscription operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) WatchMint(opts *bind.WatchOpts, sink chan<- *LenderMint, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderMint)
				if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMint is a log parse operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) ParseMint(log types.Log) (*LenderMint, error) {
	event := new(LenderMint)
	if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
