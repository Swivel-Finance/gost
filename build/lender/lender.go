// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package lender

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SwivelComponents is an auto generated low-level Go binding around an user-defined struct.
type SwivelComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelOrder is an auto generated low-level Go binding around an user-defined struct.
type SwivelOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// LenderMetaData contains all meta data concerning the Lender contract.
var LenderMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Exists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Invalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"NotEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returned\",\"type\":\"uint256\"}],\"name\":\"Lend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"u\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"a\",\"type\":\"address[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"i\",\"type\":\"bytes32\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"a\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aave\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structSwivel.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSwivel.Components[]\",\"name\":\"s\",\"type\":\"tuple[]\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"f\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"name\":\"setMarketPlaceAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swivelAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempusAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b5060405162003fe038038062003fe08339810160408190526200003491620000a5565b600080546001600160a01b03199081163317909155600280546001600160a01b039586169083161790556003805493851693821693909317909255600480549190931691161790556103e8600555620000ef565b80516001600160a01b0381168114620000a057600080fd5b919050565b600080600060608486031215620000bb57600080fd5b620000c68462000088565b9250620000d66020850162000088565b9150620000e66040850162000088565b90509250925092565b613ee180620000ff6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c8063dc4c7ca9116100d8578063ef6035691161008c578063f851a44011610066578063f851a44014610303578063f9a17fcb14610316578063faaebd211461032957600080fd5b8063ef603569146102ca578063f3cf26f3146102dd578063f7302e7c146102f057600080fd5b8063e448b458116100bd578063e448b45814610291578063e86e5e6d146102a4578063ea08c031146102b757600080fd5b8063dc4c7ca91461026b578063de1d3cb51461027e57600080fd5b806365dff1e11161012f5780639e6b5173116101145780639e6b51731461023c578063c1a7abfd14610245578063cc98ef961461025857600080fd5b806365dff1e11461021657806369fe0e2d1461022957600080fd5b80632e25d2a6116101605780632e25d2a6146101c55780634135c9d1146101f057806351cff8d91461020357600080fd5b806303799f871461017c5780631271f09a146101a2575b600080fd5b61018f61018a36600461317f565b610349565b6040519081526020015b60405180910390f35b6101b56101b03660046131f9565b6107ac565b6040519015158152602001610199565b6001546101d8906001600160a01b031681565b6040516001600160a01b039091168152602001610199565b61018f6101fe36600461323b565b6108ee565b6101b5610211366004613292565b610e20565b6101b56102243660046132fb565b610ea1565b6101b5610237366004613367565b610ff1565b61018f60055481565b61018f61025336600461339e565b611041565b6101b5610266366004613292565b611518565b6101b5610279366004613420565b6115ed565b6004546101d8906001600160a01b031681565b61018f61029f366004613464565b611784565b61018f6102b2366004613420565b611cba565b6002546101d8906001600160a01b031681565b6003546101d8906001600160a01b031681565b61018f6102eb3660046134e7565b612155565b61018f6102fe3660046135dd565b612521565b6000546101d8906001600160a01b031681565b61018f6103243660046136bb565b6128a1565b61018f610337366004613292565b60066020526000908152604090205481565b600060ff89166003146103bd576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190613718565b9050886001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c79190613718565b6001600160a01b031614610537576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b87816001600160a01b031663aa082a9d6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190613735565b1115610604576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d6174757269747900000000000000000000000000000000000000000000000060448201526064016103b4565b6106108933308a612c19565b61061987612ce9565b6001600160a01b038a166000908152600660205260408120805490919061064190849061377d565b90915550506040805160808101825230808252602082015260008183018190526060820181905282516101208101845260c08101848152929391929091829190613e6c60e0840139815260200186815260200161069d8b612ce9565b6106a7908c613795565b8152602001600081526020018c6001600160a01b03168152602001846001600160a01b031681525090506000866001600160a01b03166369bbd8cd83858c8c6040518563ffffffff1660e01b815260040161070594939291906137e7565b6020604051808303816000875af1158015610724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107489190613735565b90508a8c6001600160a01b03167f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d98f8460405161079492919060ff929092168252602082015260400190565b60405180910390a39c9b505050505050505050505050565b600080546001600160a01b03163381146107f2576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005b60098160ff1610156108e1576001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820189905260ff84166044830152600092169063ca1695f0906064016020604051808303816000875af1158015610898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bc9190613718565b90506001600160a01b038116156108d8576108d8818785612d0e565b50600101610816565b5060019695505050505050565b600060ff871660041461095d576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064016103b4565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820188905260ff8a166044830152600092169063ca1695f0906064016020604051808303816000875af11580156109d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f79190613718565b90506000819050876001600160a01b0316816001600160a01b03166376d5de856040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190613718565b6001600160a01b031614610adc576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b86816001600160a01b031663e184c9be6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190613735565b1115610ba9576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d6174757269747900000000000000000000000000000000000000000000000060448201526064016103b4565b610bb588333089612c19565b610bbe86612ce9565b6001600160a01b03891660009081526006602052604081208054909190610be690849061377d565b90915550506040805160028082526060820183526000926020830190803683370190505090508881600081518110610c2057610c2061393c565b60200260200101906001600160a01b031690816001600160a01b0316815250508281600181518110610c5457610c5461393c565b6001600160a01b039283166020918202929092010152600354600091166338ed1739610c7f8a612ce9565b610c89908b613795565b8985308b6040518663ffffffff1660e01b8152600401610cad95949392919061396b565b6000604051808303816000875af1158015610ccc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d129190810190613a55565b600081518110610d2457610d2461393c565b602002602001015190506000610d3a8b8b612dce565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015610da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc79190613b09565b506040805160ff8e168152602081018490528b916001600160a01b038e16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509a9950505050505050505050565b600080546001600160a01b0316338114610e66576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03808416600090815260066020526040812080549082905590548592610e969184911683612e6d565b506001949350505050565b600080546001600160a01b0316338114610ee7576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84838114610f51576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6172726179206c656e677468000000000000000000000000000000000000000060448201526064016103b4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005b82811015610fe2576000898983818110610f9157610f9161393c565b9050602002016020810190610fa69190613292565b9050610fd981898985818110610fbe57610fbe61393c565b9050602002016020810190610fd39190613292565b85612d0e565b50600101610f75565b50600198975050505050505050565b600080546001600160a01b0316338114611037576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600555600190565b600060ff88166006146110b0576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064016103b4565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820189905260ff8b166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114a9190613718565b9050876001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba9190613718565b6001600160a01b03161461122a576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b86846001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af115801561126b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128f9190613735565b11156112f7576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d6174757269747900000000000000000000000000000000000000000000000060448201526064016103b4565b6000611314876fffffffffffffffffffffffffffffffff16612ce9565b6001600160a01b038a1660009081526006602052604081208054929350839290919061134190849061377d565b9091555060009050611365826fffffffffffffffffffffffffffffffff8a16613795565b90506113858a33308b6fffffffffffffffffffffffffffffffff16612c19565b6040517f8f1f30f00000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018b9052604482018390526064820189905260009190881690638f1f30f0906084016020604051808303816000875af11580156113ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114239190613735565b905060006114318c8c612dce565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af115801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be9190613b09565b506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600080546001600160a01b031633811461155e576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546001600160a01b0316156115b0576001546040517fcda981d50000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201526024016103b4565b600180546001600160a01b0385167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116178155915050919050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820185905260ff87166044830152600092839291169063ca1695f0906064016020604051808303816000875af1158015611666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168a9190613718565b905061169881333086612c19565b6116a28585612dce565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b0391909116906340c10f19906044016020604051808303816000875af115801561170a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172e9190613b09565b506040805160ff881681526020810185905285916001600160a01b038816917f309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6910160405180910390a350600195945050505050565b600060ff89166005146117f3576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064016103b4565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d9190613718565b9050886001600160a01b0316816001600160a01b0316632d81f8386040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fb9190613718565b6001600160a01b03161461196b576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b87816001600160a01b0316634e8bfdaa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ce9190613735565b1115611a36576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d6174757269747900000000000000000000000000000000000000000000000060448201526064016103b4565b88611a438133308b612c19565b611a4c88612ce9565b6001600160a01b038b1660009081526006602052604081208054909190611a7490849061377d565b9091555060009050611a868b8b612dce565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038316906370a08231906024016020604051808303816000875af1158015611aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0f9190613735565b6004546001600160a01b0316634f255a1f888a611b2b8f612ce9565b8f611b369190613795565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039384166004820152929091166024830152604482015260016064820152608481018d905260a481018c905260c4016020604051808303816000875af1158015611bb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bdb9190613735565b611be59190613795565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018290529091506001600160a01b038316906340c10f19906044015b6020604051808303816000875af1158015611c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c739190613b09565b506040805160ff8f168152602081018390528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d99101610794565b600060ff8516600814611d29576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064016103b4565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820186905260ff88166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc39190613718565b905060008190506000816001600160a01b031663ee719bc86040518163ffffffff1660e01b81526004016040805180830381865afa158015611e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2d9190613b26565b509050866001600160a01b0316816001600160a01b031614611eab576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b85826001600160a01b031663e16695b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611eea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0e9190613b54565b64ffffffffff161115611f7d576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d6174757269747900000000000000000000000000000000000000000000000060448201526064016103b4565b611f8987333088612c19565b6000611f9486612ce9565b6001600160a01b038916600090815260066020526040812080549293508392909190611fc190849061377d565b90915550600090506001600160a01b038416636e553f65611fe2848a613795565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091523060248201526044016020604051808303816000875af115801561203e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120629190613735565b905060006120708a8a612dce565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af11580156120d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fd9190613b09565b506040805160ff8d168152602081018490528a916001600160a01b038d16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509998505050505050505050565b600060ff89166007146121c4576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064016103b4565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af115801561223a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225e9190613718565b9050886001600160a01b0316816001600160a01b031663c6ec27bf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122cc9190613718565b6001600160a01b03161461233c576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b6123488933308a612c19565b600061235388612ce9565b6001600160a01b038b1660009081526006602052604081208054929350839290919061238090849061377d565b9091555060009050612392828a613795565b6040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b038d8116600483015260248201839052306044830152600060648301529192509087169063e8eda9df90608401600060405180830381600087803b15801561240657600080fd5b505af115801561241a573d6000803e3d6000fd5b50506040517f5dde4ba6000000000000000000000000000000000000000000000000000000008152600481018890526001602482015260448101849052600060648201819052608482018c90523060a483015292506001600160a01b038a169150635dde4ba69060c4016020604051808303816000875af11580156124a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c79190613735565b90506124d38c8c612dce565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f1990604401611c30565b600060ff8b16600114612590576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064016103b4565b60008080805b878110156127715760008989838181106125b2576125b261393c565b905061012002018036038101906125c99190613b86565b90508e6001600160a01b031681604001516001600160a01b03161461264a576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b8d8160e0015111156126b8576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d6174757269747900000000000000000000000000000000000000000000000060448201526064016103b4565b60006126db8e8e858181106126cf576126cf61393c565b90506020020135612ce9565b90506126e7818561377d565b9350808e8e858181106126fc576126fc61393c565b9050602002013561270d9190613795565b612717908761377d565b95508160a001518260c0015161272d9190613c1d565b818f8f868181106127405761274061393c565b905060200201356127519190613795565b61275b9190613c58565b612765908661377d565b94505050600101612596565b506001600160a01b038d166000908152600660205260408120805483929061279a90849061377d565b909155506127ac90508d333086612c19565b600260009054906101000a90046001600160a01b03166001600160a01b031663d2144f5889898e8e8b8b6040518763ffffffff1660e01b81526004016127f796959493929190613d39565b6020604051808303816000875af1158015612816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283a9190613b09565b506128468d8a84612f27565b50506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600060ff8616158015906128b9575060ff8616600214155b15612920576040517f53a2556c00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f7072696e636970616c000000000000000000000000000000000000000000000060448201526064016103b4565b6000829050856001600160a01b0316816001600160a01b0316635001f3b56040518163ffffffff1660e01b81526004016020604051808303816000875af115801561296f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129939190613718565b6001600160a01b031614612a03576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e670000000000000000000000000000000000000000000060448201526064016103b4565b84816001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015612a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a689190613e28565b63ffffffff161115612ad6576040517f18a2a0ad00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d6174757269747900000000000000000000000000000000000000000000000060448201526064016103b4565b612ae286333087612c19565b6000612b018785612af288612ce9565b612afc9089613795565b612f27565b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff891601612bc557612b378787612dce565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f19906044016020604051808303816000875af1158015612b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bc39190613b09565b505b6040805160ff8a1681526020810183905287916001600160a01b038a16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3979650505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af1915050612c7c816130a2565b612ce2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f7472616e736665722066726f6d206661696c656400000000000000000000000060448201526064016103b4565b5050505050565b60008060055411612cfb576000612d08565b600554612d089083613c1d565b92915050565b60006040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af1915050612d62816130a2565b612dc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016103b4565b50505050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905260006044830181905292169063ca1695f0906064016020604051808303816000875af1158015612e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e669190613718565b9392505050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af1915050612ec1816130a2565b612dc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103b4565b600080836001600160a01b03166313e7bc8c612f42856130ec565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526fffffffffffffffffffffffffffffffff90911660048201526024016020604051808303816000875af1158015612fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fcd9190613e4e565b9050612fec8585836fffffffffffffffffffffffffffffffff16612e6d565b6040517fbcc1694f0000000000000000000000000000000000000000000000000000000081523060048201526fffffffffffffffffffffffffffffffff821660248201526001600160a01b0385169063bcc1694f906044016020604051808303816000875af1158015613063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130879190613e4e565b506fffffffffffffffffffffffffffffffff16949350505050565b6000803d836130b557806000803e806000fd5b80602081146130cd5780156130de57600092506130e3565b816000803e600051151592506130e3565b600192505b50909392505050565b60006fffffffffffffffffffffffffffffffff821115613142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600060248201526044016103b4565b5090565b803560ff8116811461315757600080fd5b919050565b6001600160a01b038116811461317157600080fd5b50565b80356131578161315c565b600080600080600080600080610100898b03121561319c57600080fd5b6131a589613146565b975060208901356131b58161315c565b965060408901359550606089013594506080890135935060a0890135925060c08901356131e18161315c565b8092505060e089013590509295985092959890939650565b60008060006060848603121561320e57600080fd5b83356132198161315c565b92506020840135915060408401356132308161315c565b809150509250925092565b60008060008060008060c0878903121561325457600080fd5b61325d87613146565b9550602087013561326d8161315c565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000602082840312156132a457600080fd5b8135612e668161315c565b60008083601f8401126132c157600080fd5b50813567ffffffffffffffff8111156132d957600080fd5b6020830191508360208260051b85010111156132f457600080fd5b9250929050565b6000806000806040858703121561331157600080fd5b843567ffffffffffffffff8082111561332957600080fd5b613335888389016132af565b9096509450602087013591508082111561334e57600080fd5b5061335b878288016132af565b95989497509550505050565b60006020828403121561337957600080fd5b5035919050565b6fffffffffffffffffffffffffffffffff8116811461317157600080fd5b600080600080600080600060e0888a0312156133b957600080fd5b6133c288613146565b965060208801356133d28161315c565b95506040880135945060608801356133e981613380565b93506080880135925060a08801356134008161315c565b915060c08801356134108161315c565b8091505092959891949750929550565b6000806000806080858703121561343657600080fd5b61343f85613146565b9350602085013561344f8161315c565b93969395505050506040820135916060013590565b600080600080600080600080610100898b03121561348157600080fd5b61348a89613146565b9750602089013561349a8161315c565b965060408901359550606089013594506080890135935060a0890135925060c08901356134c68161315c565b915060e08901356134d68161315c565b809150509295985092959890939650565b600080600080600080600080610100898b03121561350457600080fd5b61350d89613146565b9750602089013561351d8161315c565b965060408901359550606089013594506080890135935060a08901356135428161315c565b925060c08901356131e18161315c565b60008083601f84011261356457600080fd5b50813567ffffffffffffffff81111561357c57600080fd5b602083019150836020610120830285010111156132f457600080fd5b60008083601f8401126135aa57600080fd5b50813567ffffffffffffffff8111156135c257600080fd5b6020830191508360206060830285010111156132f457600080fd5b60008060008060008060008060008060e08b8d0312156135fc57600080fd5b6136058b613146565b995060208b01356136158161315c565b985060408b0135975060608b013567ffffffffffffffff8082111561363957600080fd5b6136458e838f016132af565b909950975060808d0135915061365a8261315c565b90955060a08c0135908082111561367057600080fd5b61367c8e838f01613552565b909650945060c08d013591508082111561369557600080fd5b506136a28d828e01613598565b915080935050809150509295989b9194979a5092959850565b600080600080600060a086880312156136d357600080fd5b6136dc86613146565b945060208601356136ec8161315c565b93506040860135925060608601359150608086013561370a8161315c565b809150509295509295909350565b60006020828403121561372a57600080fd5b8151612e668161315c565b60006020828403121561374757600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156137905761379061374e565b500190565b6000828210156137a7576137a761374e565b500390565b600281106137e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60e081526000855160c060e08401528051806101a085015260005b818110156138205760208184018101516101c0878401015201613802565b818111156138335760006101c083870101525b50602088015161010085015260408801516101208501526060880151915061385f6101408501836137ac565b60808801516001600160a01b038116610160860152915060a08801516001600160a01b0381166101808601529150601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683016101c00191506138fb905060208301866001600160a01b03808251168352806020830151166020840152506040810151151560408301526060810151151560608301525050565b60a082019390935260c0015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156139bb5784516001600160a01b031683529383019391830191600101613996565b50506001600160a01b03969096166060850152505050608001529392505050565b604051610120810167ffffffffffffffff81118282101715613a0057613a0061390d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613a4d57613a4d61390d565b604052919050565b60006020808385031215613a6857600080fd5b825167ffffffffffffffff80821115613a8057600080fd5b818501915085601f830112613a9457600080fd5b815181811115613aa657613aa661390d565b8060051b9150613ab7848301613a06565b8181529183018401918481019088841115613ad157600080fd5b938501935b83851015613aef57845182529385019390850190613ad6565b98975050505050505050565b801515811461317157600080fd5b600060208284031215613b1b57600080fd5b8151612e6681613afb565b60008060408385031215613b3957600080fd5b8251613b448161315c565b6020939093015192949293505050565b600060208284031215613b6657600080fd5b815164ffffffffff81168114612e6657600080fd5b803561315781613afb565b60006101208284031215613b9957600080fd5b613ba16139dc565b82358152613bb160208401613174565b6020820152613bc260408401613174565b6040820152613bd360608401613b7b565b6060820152613be460808401613b7b565b608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152508091505092915050565b600082613c53577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613c9057613c9061374e565b500290565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613cc757600080fd5b8260051b8083602087013760009401602001938452509192915050565b8183526000602080850194508260005b85811015613d2e5760ff613d0783613146565b16875281830135838801526040808301359088015260609687019690910190600101613cf4565b509495945050505050565b606080825281810187905260009060808084018a845b8b811015613def5781358352602080830135613d6a8161315c565b6001600160a01b0316908401526040613d84838201613174565b6001600160a01b031690840152613d9c828601613b7b565b151585840152613dad828501613b7b565b15158484015260a0828101359084015260c0808301359084015260e0808301359084015261010080830135908401526101209283019290910190600101613d4f565b50508481036020860152613e0481898b613c95565b925050508281036040840152613e1b818587613ce4565b9998505050505050505050565b600060208284031215613e3a57600080fd5b815163ffffffff81168114612e6657600080fd5b600060208284031215613e6057600080fd5b8151612e668161338056fe30783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030a26469706673582212205f27c4e3ebaa6ab32e3ace4660d8addabfaf759dfc68cd56c3b98abef7ec9ec864736f6c634300080d0033",
}

// LenderABI is the input ABI used to generate the binding from.
// Deprecated: Use LenderMetaData.ABI instead.
var LenderABI = LenderMetaData.ABI

// LenderBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use LenderMetaData.Bin instead.
var LenderBin = LenderMetaData.Bin

// DeployLender deploys a new Ethereum contract, binding an instance of Lender to it.
func DeployLender(auth *bind.TransactOpts, backend bind.ContractBackend, s common.Address, p common.Address, t common.Address) (common.Address, *types.Transaction, *Lender, error) {
	parsed, err := LenderMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(LenderBin), backend, s, p, t)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// Lender is an auto generated Go binding around an Ethereum contract.
type Lender struct {
	LenderCaller     // Read-only binding to the contract
	LenderTransactor // Write-only binding to the contract
	LenderFilterer   // Log filterer for contract events
}

// LenderCaller is an auto generated read-only Go binding around an Ethereum contract.
type LenderCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LenderTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type LenderFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LenderSession struct {
	Contract     *Lender           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LenderCallerSession struct {
	Contract *LenderCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// LenderTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LenderTransactorSession struct {
	Contract     *LenderTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderRaw is an auto generated low-level Go binding around an Ethereum contract.
type LenderRaw struct {
	Contract *Lender // Generic contract binding to access the raw methods on
}

// LenderCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LenderCallerRaw struct {
	Contract *LenderCaller // Generic read-only contract binding to access the raw methods on
}

// LenderTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LenderTransactorRaw struct {
	Contract *LenderTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLender creates a new instance of Lender, bound to a specific deployed contract.
func NewLender(address common.Address, backend bind.ContractBackend) (*Lender, error) {
	contract, err := bindLender(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// NewLenderCaller creates a new read-only instance of Lender, bound to a specific deployed contract.
func NewLenderCaller(address common.Address, caller bind.ContractCaller) (*LenderCaller, error) {
	contract, err := bindLender(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &LenderCaller{contract: contract}, nil
}

// NewLenderTransactor creates a new write-only instance of Lender, bound to a specific deployed contract.
func NewLenderTransactor(address common.Address, transactor bind.ContractTransactor) (*LenderTransactor, error) {
	contract, err := bindLender(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &LenderTransactor{contract: contract}, nil
}

// NewLenderFilterer creates a new log filterer instance of Lender, bound to a specific deployed contract.
func NewLenderFilterer(address common.Address, filterer bind.ContractFilterer) (*LenderFilterer, error) {
	contract, err := bindLender(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &LenderFilterer{contract: contract}, nil
}

// bindLender binds a generic wrapper to an already deployed contract.
func bindLender(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.LenderCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCallerSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCaller) Feenominator(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "feenominator")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCallerSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCaller) Fees(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "fees", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCallerSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCallerSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCaller) PendleAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "pendleAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCallerSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCaller) SwivelAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "swivelAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCallerSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCaller) TempusAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "tempusAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCallerSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x1271f09a.
//
// Solidity: function approve(address u, uint256 m, address r) returns(bool)
func (_Lender *LenderTransactor) Approve(opts *bind.TransactOpts, u common.Address, m *big.Int, r common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "approve", u, m, r)
}

// Approve is a paid mutator transaction binding the contract method 0x1271f09a.
//
// Solidity: function approve(address u, uint256 m, address r) returns(bool)
func (_Lender *LenderSession) Approve(u common.Address, m *big.Int, r common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, m, r)
}

// Approve is a paid mutator transaction binding the contract method 0x1271f09a.
//
// Solidity: function approve(address u, uint256 m, address r) returns(bool)
func (_Lender *LenderTransactorSession) Approve(u common.Address, m *big.Int, r common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, m, r)
}

// Approve0 is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderTransactor) Approve0(opts *bind.TransactOpts, u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "approve0", u, a)
}

// Approve0 is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderSession) Approve0(u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve0(&_Lender.TransactOpts, u, a)
}

// Approve0 is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderTransactorSession) Approve0(u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve0(&_Lender.TransactOpts, u, a)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactor) Lend(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend", p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactor) Lend0(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend0", p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactorSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactor) Lend1(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend1", p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactor) Lend2(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend2", p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactorSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactor) Lend3(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend3", p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactorSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactor) Lend4(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend4", p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactor) Lend5(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend5", p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactor) Lend6(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend6", p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactorSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactor) Mint(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "mint", p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactorSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactor) SetFee(opts *bind.TransactOpts, f *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setFee", f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactorSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactor) SetMarketPlaceAddress(opts *bind.TransactOpts, m common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setMarketPlaceAddress", m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactorSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactor) Withdraw(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "withdraw", e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactorSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// LenderLendIterator is returned from FilterLend and is used to iterate over the raw logs and unpacked data for Lend events raised by the Lender contract.
type LenderLendIterator struct {
	Event *LenderLend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderLendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderLend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderLend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderLendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderLendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderLend represents a Lend event raised by the Lender contract.
type LenderLend struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Returned   *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterLend is a free log retrieval operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) FilterLend(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderLendIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderLendIterator{contract: _Lender.contract, event: "Lend", logs: logs, sub: sub}, nil
}

// WatchLend is a free log subscription operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) WatchLend(opts *bind.WatchOpts, sink chan<- *LenderLend, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderLend)
				if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLend is a log parse operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) ParseLend(log types.Log) (*LenderLend, error) {
	event := new(LenderLend)
	if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// LenderMintIterator is returned from FilterMint and is used to iterate over the raw logs and unpacked data for Mint events raised by the Lender contract.
type LenderMintIterator struct {
	Event *LenderMint // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderMintIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderMint)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderMint)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderMintIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderMintIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderMint represents a Mint event raised by the Lender contract.
type LenderMint struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Amount     *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterMint is a free log retrieval operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) FilterMint(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderMintIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderMintIterator{contract: _Lender.contract, event: "Mint", logs: logs, sub: sub}, nil
}

// WatchMint is a free log subscription operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) WatchMint(opts *bind.WatchOpts, sink chan<- *LenderMint, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderMint)
				if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMint is a log parse operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) ParseMint(log types.Log) (*LenderMint, error) {
	event := new(LenderMint)
	if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
