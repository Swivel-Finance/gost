// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package lender

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SwivelComponents is an auto generated low-level Go binding around an user-defined struct.
type SwivelComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelOrder is an auto generated low-level Go binding around an user-defined struct.
type SwivelOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// LenderABI is the input ABI used to generate the binding from.
const LenderABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returned\",\"type\":\"uint256\"}],\"name\":\"Lend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structSwivel.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSwivel.Components[]\",\"name\":\"s\",\"type\":\"tuple[]\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"a\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"i\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"f\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"name\":\"setMarketPlaceAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swivelAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempusAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// LenderBin is the compiled bytecode used for deploying new contracts.
var LenderBin = "0x60806040523480156200001157600080fd5b50604051620037c0380380620037c08339810160408190526200003491620000a5565b600080546001600160a01b03199081163317909155600280546001600160a01b039586169083161790556003805493851693821693909317909255600480549190931691161790556103e8600555620000ef565b80516001600160a01b0381168114620000a057600080fd5b919050565b600080600060608486031215620000bb57600080fd5b620000c68462000088565b9250620000d66020850162000088565b9150620000e66040850162000088565b90509250925092565b6136c180620000ff6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063d5907c36116100cd578063ef60356911610081578063f3cf26f311610066578063f3cf26f3146102b7578063f851a440146102ca578063faaebd21146102dd57600080fd5b8063ef60356914610291578063f1aa654e146102a457600080fd5b8063de1d3cb5116100b2578063de1d3cb514610258578063e86e5e6d1461026b578063ea08c0311461027e57600080fd5b8063d5907c3614610232578063dc4c7ca91461024557600080fd5b80635b1e5fc2116101245780637431dfed116101095780637431dfed146102035780639e6b517314610216578063cc98ef961461021f57600080fd5b80635b1e5fc2146101dd57806369fe0e2d146101f057600080fd5b80630504bbbe146101565780632e25d2a61461017c5780634135c9d1146101a757806351cff8d9146101ba575b600080fd5b610169610164366004612952565b6102fd565b6040519081526020015b60405180910390f35b60015461018f906001600160a01b031681565b6040516001600160a01b039091168152602001610173565b6101696101b53660046129c2565b610663565b6101cd6101c8366004612a19565b610b2d565b6040519015158152602001610173565b6101696101eb366004612b14565b610bc4565b6101cd6101fe366004612bf0565b610eb6565b610169610211366004612c27565b610f1c565b61016960055481565b6101cd61022d366004612a19565b61125a565b610169610240366004612c92565b611309565b6101cd610253366004612d07565b611732565b60045461018f906001600160a01b031681565b610169610279366004612d07565b6118d7565b60025461018f906001600160a01b031681565b60035461018f906001600160a01b031681565b6101696102b2366004612d4b565b611d0b565b6101696102c5366004612da4565b612062565b60005461018f906001600160a01b031681565b6101696102eb366004612a19565b60066020526000908152604090205481565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018890526000928392911690637794292e90604401610120604051808303816000875af115801561036e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103929190612ecf565b9050876001600160a01b0316818a60ff16600981106103b3576103b3612f39565b60200201516001600160a01b0316631e5f74a16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190612f68565b6001600160a01b0316146104745760405162461bcd60e51b815260206004820152601d60248201527f617077696e65207072696e6369706c6520213d207072696e6369706c6500000060448201526064015b60405180910390fd5b61048088333089612593565b600061048b87612649565b6001600160a01b038a166000908152600660205260408120805492935083929091906104b8908490612fb4565b90915550600090506104ca8289612fcc565b6040517f5dde4ba6000000000000000000000000000000000000000000000000000000008152600481018790526001602482015260448101829052600060648201819052608482018a90523060a48301529192506001600160a01b03881690635dde4ba69060c4016020604051808303816000875af1158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190612fe3565b905083600060200201516040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b03909116906340c10f19906044016020604051808303816000875af11580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190613039565b506040805160ff8e168152602081018390528b916001600160a01b038e16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a39b9a5050505050505050505050565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482018790526000928392911690637794292e90604401610120604051808303816000875af11580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f89190612ecf565b90506000818960ff166009811061071157610711612f39565b602002015190506000819050886001600160a01b0316816001600160a01b03166376d5de856040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190612f68565b6001600160a01b0316146107e15760405162461bcd60e51b815260206004820152601f60248201527f70656e646c6520756e6465726c79696e6720213d20756e6465726c79696e6700604482015260640161046b565b87816001600160a01b031663e184c9be6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190612fe3565b146108935760405162461bcd60e51b815260206004820152601b60248201527f70656e646c65206d6174757269747920213d206d617475726974790000000000604482015260640161046b565b61089f8933308a612593565b6108a887612649565b6001600160a01b038a16600090815260066020526040812080549091906108d0908490612fb4565b9091555050604080516002808252606082018352600092602083019080368337019050509050898160008151811061090a5761090a612f39565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061093e5761093e612f39565b6001600160a01b039283166020918202929092010152600354600091166338ed17396109698b612649565b610973908c612fcc565b8a85308c6040518663ffffffff1660e01b8152600401610997959493929190613056565b6000604051808303816000875af11580156109b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109fc91908101906130c7565b600081518110610a0e57610a0e612f39565b6020026020010151905060008560006008811115610a2e57610a2e612ffc565b60ff1660098110610a4157610a41612f39565b60200201516040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015610aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad39190613039565b506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600080546001600160a01b0316338114610b895760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a656400000000000000604482015260640161046b565b6001600160a01b03808416600090815260066020526040812080549082905590548592610bb9918491168361266e565b506001949350505050565b60008060008060005b89811015610d7e5760008b8b83818110610be957610be9612f39565b90506101200201803603810190610c009190613178565b90508d8160e0015114610c555760405162461bcd60e51b815260206004820152601b60248201527f73776976656c206d6174757269747920213d206d617475726974790000000000604482015260640161046b565b8e6001600160a01b031681604001516001600160a01b031614610cba5760405162461bcd60e51b815260206004820152601f60248201527f73776976656c20756e6465726c79696e6720213d20756e6465726c79696e6700604482015260640161046b565b6000610cdd8b8b85818110610cd157610cd1612f39565b90506020020135612649565b9050610ce98185612fb4565b9350808b8b85818110610cfe57610cfe612f39565b90506020020135610d0f9190612fcc565b610d199087612fb4565b95508160a001518260c00151610d2f919061320f565b818c8c86818110610d4257610d42612f39565b90506020020135610d539190612fcc565b610d5d919061324a565b610d679086612fb4565b945050508080610d7690613287565b915050610bcd565b506001600160a01b038d1660009081526006602052604081208054839290610da7908490612fb4565b90915550610db990508d333086612593565b6002546040517fd2144f580000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063d2144f5890610e0c908d908d908d908d908d908d90600401613363565b6020604051808303816000875af1158015610e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4f9190613039565b50610e5b8d8c84612714565b50506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600080546001600160a01b0316338114610f125760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a656400000000000000604482015260640161046b565b5050600555600190565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018890526000928392911690637794292e90604401610120604051808303816000875af1158015610f8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb19190612ecf565b8960ff1660098110610fc557610fc5612f39565b60200201519050876001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611016573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103a9190612f68565b6001600160a01b0316146110905760405162461bcd60e51b815260206004820152601e60248201527f73656e736520756e6465726c79696e6720213d20756e6465726c79696e670000604482015260640161046b565b60006110ad856fffffffffffffffffffffffffffffffff16612649565b6001600160a01b038a166000908152600660205260408120805492935083929091906110da908490612fb4565b90915550600090506110fe826fffffffffffffffffffffffffffffffff8816612fcc565b905061111e8a3330896fffffffffffffffffffffffffffffffff16612593565b6040517f8f1f30f00000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018b90526044820183905260648201879052600091908a1690638f1f30f0906084016020604051808303816000875af1158015611198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bc9190612fe3565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038e81166004830152602482018e905292935060009290911690637794292e90604401610120604051808303816000875af115801561122f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112539190612ecf565b6000610a41565b600080546001600160a01b03163381146112b65760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a656400000000000000604482015260640161046b565b6001546001600160a01b0316156112cc57600080fd5b600180546001600160a01b0385167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116178155915050919050565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038981166004830152602482018990526000928392911690637794292e90604401610120604051808303816000875af115801561137a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139e9190612ecf565b8a60ff16600981106113b2576113b2612f39565b60200201519050886001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114279190612f68565b6001600160a01b0316146114575760405162461bcd60e51b8152602060048201526000602482015260440161046b565b87816001600160a01b031663aa082a9d6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bc9190612fe3565b146114e35760405162461bcd60e51b8152602060048201526000602482015260440161046b565b6114ef89333088612593565b6114f885612649565b6001600160a01b038a1660009081526006602052604081208054909190611520908490612fb4565b90915550506040805160808101825230808252602082015260008183018190526060820181905282516101208101845260c0810184815292939192909182919061364c60e0840139815260200189815260200161157c89612649565b611586908a612fcc565b8152600060208201526001600160a01b03808e16604080840182905260015490517f7794292e0000000000000000000000000000000000000000000000000000000081526004810192909252602482018f905260609093019290911690637794292e90604401610120604051808303816000875af115801561160c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116309190612ecf565b8e60ff166009811061164457611644612f39565b60200201516001600160a01b031681525090506000896001600160a01b03166369bbd8cd83858a8a6040518563ffffffff1660e01b815260040161168b949392919061348d565b6020604051808303816000875af11580156116aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ce9190612fe3565b90508a8c6001600160a01b03167f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d98f8460405161171a92919060ff929092168252602082015260400190565b60405180910390a39c9b505050505050505050505050565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018590526000928392911690637794292e90604401610120604051808303816000875af11580156117a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c79190612ecf565b90506117ee818760ff16600981106117e1576117e1612f39565b6020020151333086612593565b80600060200201516040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b03909116906340c10f19906044016020604051808303816000875af115801561185d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118819190613039565b506040805160ff881681526020810185905285916001600160a01b038816917f309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6910160405180910390a350600195945050505050565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018590526000928392911690637794292e90604401610120604051808303816000875af1158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196c9190612ecf565b90506000818760ff166009811061198557611985612f39565b60200201519050600081905085816001600160a01b031663e16695b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f491906135b3565b64ffffffffff1614611a485760405162461bcd60e51b815260206004820152601d60248201527f6e6f74696f6e616c206d6174757269747920213d206d61747572697479000000604482015260640161046b565b6000816001600160a01b031663ee719bc86040518163ffffffff1660e01b81526004016040805180830381865afa158015611a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aab91906135da565b509050876001600160a01b0316816001600160a01b031614611b355760405162461bcd60e51b815260206004820152602160248201527f6e6f74696f6e616c20756e6465726c79696e6720213d20756e6465726c79696e60448201527f6700000000000000000000000000000000000000000000000000000000000000606482015260840161046b565b611b4188333089612593565b6000611b4c87612649565b6001600160a01b038a16600090815260066020526040812080549293508392909190611b79908490612fb4565b90915550600090506001600160a01b038416636e553f65611b9a848b612fcc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091523060248201526044016020604051808303816000875af1158015611bf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1a9190612fe3565b90506000868160200201516040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015611c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb29190613039565b506040805160ff8e168152602081018490528b916001600160a01b038e16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509a9950505050505050505050565b600080839050856001600160a01b0316816001600160a01b0316635001f3b56040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7f9190612f68565b6001600160a01b031614611dd55760405162461bcd60e51b815260206004820152601860248201527f7969656c64206261736520213d20756e6465726c79696e670000000000000000604482015260640161046b565b84816001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3a9190613608565b63ffffffff1614611e8d5760405162461bcd60e51b815260206004820152601a60248201527f7969656c64206d6174757269747920213d206d61747572697479000000000000604482015260640161046b565b611e9986333086612593565b6000611eb88786611ea987612649565b611eb39088612fcc565b612714565b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff89160161200e576001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038981166004830152602482018990526000921690637794292e90604401610120604051808303816000875af1158015611f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f769190612ecf565b905080600060200201516040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490526001600160a01b03909116906340c10f19906044016020604051808303816000875af1158015611fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200b9190613039565b50505b6040805160ff8a1681526020810183905287916001600160a01b038a16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3979650505050505050565b6001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038981166004830152602482018990526000928392911690637794292e90604401610120604051808303816000875af11580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f79190612ecf565b8a60ff166009811061210b5761210b612f39565b60200201519050886001600160a01b0316816001600160a01b0316632d81f8386040518163ffffffff1660e01b8152600401602060405180830381865afa15801561215a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217e9190612f68565b6001600160a01b0316146121d45760405162461bcd60e51b815260206004820152601f60248201527f74656d70757320756e6465726c79696e6720213d20756e6465726c79696e6700604482015260640161046b565b87816001600160a01b0316634e8bfdaa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122379190612fe3565b146122845760405162461bcd60e51b815260206004820152601b60248201527f74656d707573206d6174757269747920213d206d617475726974790000000000604482015260640161046b565b886122918133308b612593565b61229a88612649565b6001600160a01b038b16600090815260066020526040812080549091906122c2908490612fb4565b90915550506001546040517f7794292e0000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152602482018c90526000921690637794292e90604401610120604051808303816000875af1158015612335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123599190612ecf565b600060200201516040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038316906370a08231906024016020604051808303816000875af11580156123c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e99190612fe3565b6004546001600160a01b0316634f255a1f8a8a6124058f612649565b8f6124109190612fcc565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039384166004820152929091166024830152604482015260016064820152608481018d905260a481018a905260c4016020604051808303816000875af1158015612491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124b59190612fe3565b6124bf9190612fcc565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018290529091506001600160a01b038316906340c10f19906044016020604051808303816000875af1158015612528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061254c9190613039565b506040805160ff8f168152602081018390528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910161171a565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af19150506125f68161288f565b6126425760405162461bcd60e51b815260206004820152601460248201527f7472616e736665722066726f6d206661696c6564000000000000000000000000604482015260640161046b565b5050505050565b6000806005541161265b576000612668565b600554612668908361320f565b92915050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af19150506126c28161288f565b61270e5760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161046b565b50505050565b600080836001600160a01b03166313e7bc8c61272f856128d9565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526fffffffffffffffffffffffffffffffff90911660048201526024016020604051808303816000875af1158015612796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ba919061362e565b90506127d98585836fffffffffffffffffffffffffffffffff1661266e565b6040517fbcc1694f0000000000000000000000000000000000000000000000000000000081523060048201526fffffffffffffffffffffffffffffffff821660248201526001600160a01b0385169063bcc1694f906044016020604051808303816000875af1158015612850573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612874919061362e565b506fffffffffffffffffffffffffffffffff16949350505050565b6000803d836128a257806000803e806000fd5b80602081146128ba5780156128cb57600092506128d0565b816000803e600051151592506128d0565b600192505b50909392505050565b60006fffffffffffffffffffffffffffffffff8211156129155760405162461bcd60e51b8152602060048201526000602482015260440161046b565b5090565b803560ff8116811461292a57600080fd5b919050565b6001600160a01b038116811461294457600080fd5b50565b803561292a8161292f565b600080600080600080600060e0888a03121561296d57600080fd5b61297688612919565b965060208801356129868161292f565b955060408801359450606088013593506080880135925060a08801356129ab8161292f565b8092505060c0880135905092959891949750929550565b60008060008060008060c087890312156129db57600080fd5b6129e487612919565b955060208701356129f48161292f565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060208284031215612a2b57600080fd5b8135612a368161292f565b9392505050565b60008083601f840112612a4f57600080fd5b50813567ffffffffffffffff811115612a6757600080fd5b60208301915083602061012083028501011115612a8357600080fd5b9250929050565b60008083601f840112612a9c57600080fd5b50813567ffffffffffffffff811115612ab457600080fd5b6020830191508360208260051b8501011115612a8357600080fd5b60008083601f840112612ae157600080fd5b50813567ffffffffffffffff811115612af957600080fd5b602083019150836020606083028501011115612a8357600080fd5b60008060008060008060008060008060e08b8d031215612b3357600080fd5b612b3c8b612919565b995060208b0135612b4c8161292f565b985060408b0135975060608b0135612b638161292f565b965060808b013567ffffffffffffffff80821115612b8057600080fd5b612b8c8e838f01612a3d565b909850965060a08d0135915080821115612ba557600080fd5b612bb18e838f01612a8a565b909650945060c08d0135915080821115612bca57600080fd5b50612bd78d828e01612acf565b915080935050809150509295989b9194979a5092959850565b600060208284031215612c0257600080fd5b5035919050565b6fffffffffffffffffffffffffffffffff8116811461294457600080fd5b600080600080600080600060e0888a031215612c4257600080fd5b612c4b88612919565b96506020880135612c5b8161292f565b9550604088013594506060880135612c728161292f565b93506080880135612c828161292f565b925060a08801356129ab81612c09565b600080600080600080600080610100898b031215612caf57600080fd5b612cb889612919565b97506020890135612cc88161292f565b9650604089013595506060890135612cdf8161292f565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b60008060008060808587031215612d1d57600080fd5b612d2685612919565b93506020850135612d368161292f565b93969395505050506040820135916060013590565b600080600080600060a08688031215612d6357600080fd5b612d6c86612919565b94506020860135612d7c8161292f565b9350604086013592506060860135612d938161292f565b949793965091946080013592915050565b600080600080600080600080610100898b031215612dc157600080fd5b612dca89612919565b97506020890135612dda8161292f565b965060408901359550606089013594506080890135935060a0890135612dff8161292f565b925060c0890135612e0f8161292f565b8092505060e089013590509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715612e7a57612e7a612e27565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612ec757612ec7612e27565b604052919050565b6000610120808385031215612ee357600080fd5b83601f840112612ef257600080fd5b612efa612e56565b908301908085831115612f0c57600080fd5b845b83811015612f2f578051612f218161292f565b835260209283019201612f0e565b5095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612f7a57600080fd5b8151612a368161292f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115612fc757612fc7612f85565b500190565b600082821015612fde57612fde612f85565b500390565b600060208284031215612ff557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b801515811461294457600080fd5b60006020828403121561304b57600080fd5b8151612a368161302b565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156130a65784516001600160a01b031683529383019391830191600101613081565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156130da57600080fd5b825167ffffffffffffffff808211156130f257600080fd5b818501915085601f83011261310657600080fd5b81518181111561311857613118612e27565b8060051b9150613129848301612e80565b818152918301840191848101908884111561314357600080fd5b938501935b8385101561316157845182529385019390850190613148565b98975050505050505050565b803561292a8161302b565b6000610120828403121561318b57600080fd5b613193612e56565b823581526131a360208401612947565b60208201526131b460408401612947565b60408201526131c56060840161316d565b60608201526131d66080840161316d565b608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152508091505092915050565b600082613245577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561328257613282612f85565b500290565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036132b8576132b8612f85565b5060010190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156132f157600080fd5b8260051b8083602087013760009401602001938452509192915050565b8183526000602080850194508260005b858110156133585760ff61333183612919565b1687528183013583880152604080830135908801526060968701969091019060010161331e565b509495945050505050565b606080825281810187905260009060808084018a845b8b81101561341957813583526020808301356133948161292f565b6001600160a01b03169084015260406133ae838201612947565b6001600160a01b0316908401526133c682860161316d565b1515858401526133d782850161316d565b15158484015260a0828101359084015260c0808301359084015260e0808301359084015261010080830135908401526101209283019290910190600101613379565b5050848103602086015261342e81898b6132bf565b92505050828103604084015261344581858761330e565b9998505050505050505050565b60028110613489577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60e081526000855160c060e08401528051806101a085015260005b818110156134c65760208184018101516101c08784010152016134a8565b818111156134d95760006101c083870101525b506020880151610100850152604088015161012085015260608801519150613505610140850183613452565b60808801516001600160a01b038116610160860152915060a08801516001600160a01b0381166101808601529150601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683016101c00191506135a1905060208301866001600160a01b03808251168352806020830151166020840152506040810151151560408301526060810151151560608301525050565b60a082019390935260c0015292915050565b6000602082840312156135c557600080fd5b815164ffffffffff81168114612a3657600080fd5b600080604083850312156135ed57600080fd5b82516135f88161292f565b6020939093015192949293505050565b60006020828403121561361a57600080fd5b815163ffffffff81168114612a3657600080fd5b60006020828403121561364057600080fd5b8151612a3681612c0956fe30783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030a26469706673582212200b6e0bac7578a71d278194068a962e097939b280be4fa8b02cc2c090d8d86f1964736f6c634300080d0033"

// DeployLender deploys a new Ethereum contract, binding an instance of Lender to it.
func DeployLender(auth *bind.TransactOpts, backend bind.ContractBackend, s common.Address, p common.Address, t common.Address) (common.Address, *types.Transaction, *Lender, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(LenderBin), backend, s, p, t)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// Lender is an auto generated Go binding around an Ethereum contract.
type Lender struct {
	LenderCaller     // Read-only binding to the contract
	LenderTransactor // Write-only binding to the contract
	LenderFilterer   // Log filterer for contract events
}

// LenderCaller is an auto generated read-only Go binding around an Ethereum contract.
type LenderCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LenderTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type LenderFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LenderSession struct {
	Contract     *Lender           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LenderCallerSession struct {
	Contract *LenderCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// LenderTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LenderTransactorSession struct {
	Contract     *LenderTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderRaw is an auto generated low-level Go binding around an Ethereum contract.
type LenderRaw struct {
	Contract *Lender // Generic contract binding to access the raw methods on
}

// LenderCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LenderCallerRaw struct {
	Contract *LenderCaller // Generic read-only contract binding to access the raw methods on
}

// LenderTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LenderTransactorRaw struct {
	Contract *LenderTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLender creates a new instance of Lender, bound to a specific deployed contract.
func NewLender(address common.Address, backend bind.ContractBackend) (*Lender, error) {
	contract, err := bindLender(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// NewLenderCaller creates a new read-only instance of Lender, bound to a specific deployed contract.
func NewLenderCaller(address common.Address, caller bind.ContractCaller) (*LenderCaller, error) {
	contract, err := bindLender(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &LenderCaller{contract: contract}, nil
}

// NewLenderTransactor creates a new write-only instance of Lender, bound to a specific deployed contract.
func NewLenderTransactor(address common.Address, transactor bind.ContractTransactor) (*LenderTransactor, error) {
	contract, err := bindLender(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &LenderTransactor{contract: contract}, nil
}

// NewLenderFilterer creates a new log filterer instance of Lender, bound to a specific deployed contract.
func NewLenderFilterer(address common.Address, filterer bind.ContractFilterer) (*LenderFilterer, error) {
	contract, err := bindLender(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &LenderFilterer{contract: contract}, nil
}

// bindLender binds a generic wrapper to an already deployed contract.
func bindLender(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.LenderCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCallerSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCaller) Feenominator(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "feenominator")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCallerSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCaller) Fees(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "fees", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCallerSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCallerSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCaller) PendleAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "pendleAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCallerSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCaller) SwivelAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "swivelAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCallerSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCaller) TempusAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "tempusAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCallerSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// Lend is a paid mutator transaction binding the contract method 0x0504bbbe.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, uint256 i) returns(uint256)
func (_Lender *LenderTransactor) Lend(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend", p, u, m, a, r, pool, i)
}

// Lend is a paid mutator transaction binding the contract method 0x0504bbbe.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, uint256 i) returns(uint256)
func (_Lender *LenderSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, pool, i)
}

// Lend is a paid mutator transaction binding the contract method 0x0504bbbe.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, uint256 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, pool, i)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactor) Lend0(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend0", p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactorSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend1 is a paid mutator transaction binding the contract method 0x5b1e5fc2.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactor) Lend1(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, y common.Address, o []SwivelOrder, a []*big.Int, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend1", p, u, m, y, o, a, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0x5b1e5fc2.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderSession) Lend1(p uint8, u common.Address, m *big.Int, y common.Address, o []SwivelOrder, a []*big.Int, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, y, o, a, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0x5b1e5fc2.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend1(p uint8, u common.Address, m *big.Int, y common.Address, o []SwivelOrder, a []*big.Int, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, y, o, a, s)
}

// Lend2 is a paid mutator transaction binding the contract method 0x7431dfed.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address x, address s, uint128 a, uint256 r) returns(uint256)
func (_Lender *LenderTransactor) Lend2(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, x common.Address, s common.Address, a *big.Int, r *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend2", p, u, m, x, s, a, r)
}

// Lend2 is a paid mutator transaction binding the contract method 0x7431dfed.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address x, address s, uint128 a, uint256 r) returns(uint256)
func (_Lender *LenderSession) Lend2(p uint8, u common.Address, m *big.Int, x common.Address, s common.Address, a *big.Int, r *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, x, s, a, r)
}

// Lend2 is a paid mutator transaction binding the contract method 0x7431dfed.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address x, address s, uint128 a, uint256 r) returns(uint256)
func (_Lender *LenderTransactorSession) Lend2(p uint8, u common.Address, m *big.Int, x common.Address, s common.Address, a *big.Int, r *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, x, s, a, r)
}

// Lend3 is a paid mutator transaction binding the contract method 0xd5907c36.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address e, bytes32 i, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactor) Lend3(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, e common.Address, i [32]byte, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend3", p, u, m, e, i, a, r, d)
}

// Lend3 is a paid mutator transaction binding the contract method 0xd5907c36.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address e, bytes32 i, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderSession) Lend3(p uint8, u common.Address, m *big.Int, e common.Address, i [32]byte, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, e, i, a, r, d)
}

// Lend3 is a paid mutator transaction binding the contract method 0xd5907c36.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address e, bytes32 i, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactorSession) Lend3(p uint8, u common.Address, m *big.Int, e common.Address, i [32]byte, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, e, i, a, r, d)
}

// Lend4 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactor) Lend4(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend4", p, u, m, a)
}

// Lend4 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a)
}

// Lend4 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactorSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf1aa654e.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address y, uint256 a) returns(uint256)
func (_Lender *LenderTransactor) Lend5(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, y common.Address, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend5", p, u, m, y, a)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf1aa654e.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address y, uint256 a) returns(uint256)
func (_Lender *LenderSession) Lend5(p uint8, u common.Address, m *big.Int, y common.Address, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, y, a)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf1aa654e.
//
// Solidity: function lend(uint8 p, address u, uint256 m, address y, uint256 a) returns(uint256)
func (_Lender *LenderTransactorSession) Lend5(p uint8, u common.Address, m *big.Int, y common.Address, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, y, a)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address x, address t, uint256 d) returns(uint256)
func (_Lender *LenderTransactor) Lend6(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, t common.Address, d *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend6", p, u, m, a, r, x, t, d)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address x, address t, uint256 d) returns(uint256)
func (_Lender *LenderSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, t common.Address, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, r, x, t, d)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address x, address t, uint256 d) returns(uint256)
func (_Lender *LenderTransactorSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, t common.Address, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, r, x, t, d)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactor) Mint(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "mint", p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactorSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactor) SetFee(opts *bind.TransactOpts, f *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setFee", f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactorSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactor) SetMarketPlaceAddress(opts *bind.TransactOpts, m common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setMarketPlaceAddress", m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactorSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactor) Withdraw(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "withdraw", e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactorSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// LenderLendIterator is returned from FilterLend and is used to iterate over the raw logs and unpacked data for Lend events raised by the Lender contract.
type LenderLendIterator struct {
	Event *LenderLend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderLendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderLend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderLend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderLendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderLendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderLend represents a Lend event raised by the Lender contract.
type LenderLend struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Returned   *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterLend is a free log retrieval operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) FilterLend(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderLendIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderLendIterator{contract: _Lender.contract, event: "Lend", logs: logs, sub: sub}, nil
}

// WatchLend is a free log subscription operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) WatchLend(opts *bind.WatchOpts, sink chan<- *LenderLend, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderLend)
				if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLend is a log parse operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) ParseLend(log types.Log) (*LenderLend, error) {
	event := new(LenderLend)
	if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// LenderMintIterator is returned from FilterMint and is used to iterate over the raw logs and unpacked data for Mint events raised by the Lender contract.
type LenderMintIterator struct {
	Event *LenderMint // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderMintIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderMint)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderMint)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderMintIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderMintIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderMint represents a Mint event raised by the Lender contract.
type LenderMint struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Amount     *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterMint is a free log retrieval operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) FilterMint(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderMintIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderMintIterator{contract: _Lender.contract, event: "Mint", logs: logs, sub: sub}, nil
}

// WatchMint is a free log subscription operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) WatchMint(opts *bind.WatchOpts, sink chan<- *LenderMint, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderMint)
				if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMint is a log parse operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) ParseMint(log types.Log) (*LenderMint, error) {
	event := new(LenderMint)
	if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
