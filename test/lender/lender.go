// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package lender

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SwivelComponents is an auto generated low-level Go binding around an user-defined struct.
type SwivelComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelOrder is an auto generated low-level Go binding around an user-defined struct.
type SwivelOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// LenderABI is the input ABI used to generate the binding from.
const LenderABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returned\",\"type\":\"uint256\"}],\"name\":\"Lend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"u\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"a\",\"type\":\"address[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"i\",\"type\":\"bytes32\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"a\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aave\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structSwivel.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSwivel.Components[]\",\"name\":\"s\",\"type\":\"tuple[]\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"f\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"name\":\"setMarketPlaceAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swivelAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempusAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// LenderBin is the compiled bytecode used for deploying new contracts.
var LenderBin = "0x60806040523480156200001157600080fd5b506040516200398c3803806200398c8339810160408190526200003491620000a5565b600080546001600160a01b03199081163317909155600280546001600160a01b039586169083161790556003805493851693821693909317909255600480549190931691161790556103e8600555620000ef565b80516001600160a01b0381168114620000a057600080fd5b919050565b600080600060608486031215620000bb57600080fd5b620000c68462000088565b9250620000d66020850162000088565b9150620000e66040850162000088565b90509250925092565b61388d80620000ff6000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063de1d3cb5116100cd578063f3cf26f311610081578063f851a44011610066578063f851a440146102e5578063f9a17fcb146102f8578063faaebd211461030b57600080fd5b8063f3cf26f3146102bf578063f7302e7c146102d257600080fd5b8063e86e5e6d116100b2578063e86e5e6d14610286578063ea08c03114610299578063ef603569146102ac57600080fd5b8063de1d3cb514610260578063e448b4581461027357600080fd5b806369fe0e2d11610124578063c1a7abfd11610109578063c1a7abfd14610227578063cc98ef961461023a578063dc4c7ca91461024d57600080fd5b806369fe0e2d1461020b5780639e6b51731461021e57600080fd5b80634135c9d1116101555780634135c9d1146101c257806351cff8d9146101d557806365dff1e1146101f857600080fd5b806303799f87146101715780632e25d2a614610197575b600080fd5b61018461017f366004612b6d565b61032b565b6040519081526020015b60405180910390f35b6001546101aa906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b6101846101d0366004612be7565b6106fd565b6101e86101e3366004612c3e565b610b9e565b604051901515815260200161018e565b6101e8610206366004612ca7565b610c35565b6101e8610219366004612d13565b610d81565b61018460055481565b610184610235366004612d4a565b610de7565b6101e8610248366004612c3e565b61122d565b6101e861025b366004612dcc565b6112dc565b6004546101aa906001600160a01b031681565b610184610281366004612e10565b611473565b610184610294366004612dcc565b611918565b6002546101aa906001600160a01b031681565b6003546101aa906001600160a01b031681565b6101846102cd366004612e93565b611d48565b6101846102e0366004612f89565b61209d565b6000546101aa906001600160a01b031681565b610184610306366004613067565b61238c565b610184610319366004612c3e565b60066020526000908152604090205481565b600060ff891660031461033d57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d791906130c4565b9050886001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610423573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044791906130c4565b6001600160a01b0316146104a25760405162461bcd60e51b815260206004820181905260248201527f656c656d656e7420756e6465726c79696e6720213d20756e6465726c79696e6760448201526064015b60405180910390fd5b87816001600160a01b031663aa082a9d6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050791906130e1565b11156105555760405162461bcd60e51b815260206004820152601c60248201527f656c656d656e74206d6174757269747920213d206d61747572697479000000006044820152606401610499565b6105618933308a61266f565b61056a87612725565b6001600160a01b038a1660009081526006602052604081208054909190610592908490613129565b90915550506040805160808101825230808252602082015260008183018190526060820181905282516101208101845260c0810184815292939192909182919061381860e084013981526020018681526020016105ee8b612725565b6105f8908c613141565b8152602001600081526020018c6001600160a01b03168152602001846001600160a01b031681525090506000866001600160a01b03166369bbd8cd83858c8c6040518563ffffffff1660e01b81526004016106569493929190613193565b6020604051808303816000875af1158015610675573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069991906130e1565b90508a8c6001600160a01b03167f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d98f846040516106e592919060ff929092168252602082015260400190565b60405180910390a39c9b505050505050505050505050565b600060ff871660041461070f57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820188905260ff8a166044830152600092169063ca1695f0906064016020604051808303816000875af1158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a991906130c4565b90506000819050876001600160a01b0316816001600160a01b03166376d5de856040518163ffffffff1660e01b81526004016020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e91906130c4565b6001600160a01b0316146108745760405162461bcd60e51b815260206004820152601f60248201527f70656e646c6520756e6465726c79696e6720213d20756e6465726c79696e67006044820152606401610499565b86816001600160a01b031663e184c9be6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d991906130e1565b11156109275760405162461bcd60e51b815260206004820152601b60248201527f70656e646c65206d6174757269747920213d206d6174757269747900000000006044820152606401610499565b6109338833308961266f565b61093c86612725565b6001600160a01b03891660009081526006602052604081208054909190610964908490613129565b9091555050604080516002808252606082018352600092602083019080368337019050509050888160008151811061099e5761099e6132e8565b60200260200101906001600160a01b031690816001600160a01b03168152505082816001815181106109d2576109d26132e8565b6001600160a01b039283166020918202929092010152600354600091166338ed17396109fd8a612725565b610a07908b613141565b8985308b6040518663ffffffff1660e01b8152600401610a2b959493929190613317565b6000604051808303816000875af1158015610a4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a909190810190613401565b600081518110610aa257610aa26132e8565b602002602001015190506000610ab88b8b61274a565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4591906134b5565b506040805160ff8e168152602081018490528b916001600160a01b038e16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509a9950505050505050505050565b600080546001600160a01b0316338114610bfa5760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b6001600160a01b03808416600090815260066020526040812080549082905590548592610c2a91849116836127e9565b506001949350505050565b600080546001600160a01b0316338114610c915760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b84838114610ce15760405162461bcd60e51b815260206004820152601560248201527f6172726179206c656e677468206d69736d6174636800000000000000000000006044820152606401610499565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005b82811015610d72576000898983818110610d2157610d216132e8565b9050602002016020810190610d369190612c3e565b9050610d6981898985818110610d4e57610d4e6132e8565b9050602002016020810190610d639190612c3e565b8561288f565b50600101610d05565b50600198975050505050505050565b600080546001600160a01b0316338114610ddd5760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b5050600555600190565b600060ff8816600614610df957600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820189905260ff8b166044830152600092169063ca1695f0906064016020604051808303816000875af1158015610e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9391906130c4565b9050876001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0391906130c4565b6001600160a01b031614610f595760405162461bcd60e51b815260206004820152601e60248201527f73656e736520756e6465726c79696e6720213d20756e6465726c79696e6700006044820152606401610499565b86846001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbe91906130e1565b111561100c5760405162461bcd60e51b815260206004820152601a60248201527f73656e7365206d6174757269747920213d206d617475726974790000000000006044820152606401610499565b6000611029876fffffffffffffffffffffffffffffffff16612725565b6001600160a01b038a16600090815260066020526040812080549293508392909190611056908490613129565b909155506000905061107a826fffffffffffffffffffffffffffffffff8a16613141565b905061109a8a33308b6fffffffffffffffffffffffffffffffff1661266f565b6040517f8f1f30f00000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018b9052604482018390526064820189905260009190881690638f1f30f0906084016020604051808303816000875af1158015611114573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113891906130e1565b905060006111468c8c61274a565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af11580156111af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d391906134b5565b506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600080546001600160a01b03163381146112895760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d75737420626520617574686f72697a6564000000000000006044820152606401610499565b6001546001600160a01b03161561129f57600080fd5b600180546001600160a01b0385167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116178155915050919050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820185905260ff87166044830152600092839291169063ca1695f0906064016020604051808303816000875af1158015611355573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137991906130c4565b90506113878133308661266f565b611391858561274a565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b0391909116906340c10f19906044016020604051808303816000875af11580156113f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141d91906134b5565b506040805160ff881681526020810185905285916001600160a01b038816917f309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6910160405180910390a350600195945050505050565b600060ff891660051461148557600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af11580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151f91906130c4565b9050886001600160a01b0316816001600160a01b0316632d81f8386040518163ffffffff1660e01b8152600401602060405180830381865afa158015611569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158d91906130c4565b6001600160a01b0316146115e35760405162461bcd60e51b815260206004820152601f60248201527f74656d70757320756e6465726c79696e6720213d20756e6465726c79696e67006044820152606401610499565b87816001600160a01b0316634e8bfdaa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611622573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164691906130e1565b11156116945760405162461bcd60e51b815260206004820152601b60248201527f74656d707573206d6174757269747920213d206d6174757269747900000000006044820152606401610499565b886116a18133308b61266f565b6116aa88612725565b6001600160a01b038b16600090815260066020526040812080549091906116d2908490613129565b90915550600090506116e48b8b61274a565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038316906370a08231906024016020604051808303816000875af1158015611749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176d91906130e1565b6004546001600160a01b0316634f255a1f888a6117898f612725565b8f6117949190613141565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039384166004820152929091166024830152604482015260016064820152608481018d905260a481018c905260c4016020604051808303816000875af1158015611815573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183991906130e1565b6118439190613141565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018290529091506001600160a01b038316906340c10f19906044015b6020604051808303816000875af11580156118ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d191906134b5565b506040805160ff8f168152602081018390528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d991016106e5565b600060ff851660081461192a57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820186905260ff88166044830152600092169063ca1695f0906064016020604051808303816000875af11580156119a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c491906130c4565b905060008190506000816001600160a01b031663ee719bc86040518163ffffffff1660e01b81526004016040805180830381865afa158015611a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2e91906134d2565b509050866001600160a01b0316816001600160a01b031614611ab85760405162461bcd60e51b815260206004820152602160248201527f6e6f74696f6e616c20756e6465726c79696e6720213d20756e6465726c79696e60448201527f67000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b85826001600160a01b031663e16695b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1b9190613500565b64ffffffffff161115611b705760405162461bcd60e51b815260206004820152601d60248201527f6e6f74696f6e616c206d6174757269747920213d206d617475726974790000006044820152606401610499565b611b7c8733308861266f565b6000611b8786612725565b6001600160a01b038916600090815260066020526040812080549293508392909190611bb4908490613129565b90915550600090506001600160a01b038416636e553f65611bd5848a613141565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091523060248201526044016020604051808303816000875af1158015611c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5591906130e1565b90506000611c638a8a61274a565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015611ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf091906134b5565b506040805160ff8d168152602081018490528a916001600160a01b038d16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509998505050505050505050565b600060ff8916600714611d5a57600080fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df491906130c4565b9050886001600160a01b0316816001600160a01b031663c6ec27bf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6291906130c4565b6001600160a01b031614611eb85760405162461bcd60e51b815260206004820152601d60248201527f617077696e65207072696e6369706c6520213d207072696e6369706c650000006044820152606401610499565b611ec48933308a61266f565b6000611ecf88612725565b6001600160a01b038b16600090815260066020526040812080549293508392909190611efc908490613129565b9091555060009050611f0e828a613141565b6040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b038d8116600483015260248201839052306044830152600060648301529192509087169063e8eda9df90608401600060405180830381600087803b158015611f8257600080fd5b505af1158015611f96573d6000803e3d6000fd5b50506040517f5dde4ba6000000000000000000000000000000000000000000000000000000008152600481018890526001602482015260448101849052600060648201819052608482018c90523060a483015292506001600160a01b038a169150635dde4ba69060c4016020604051808303816000875af115801561201f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204391906130e1565b905061204f8c8c61274a565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f199060440161188e565b600060ff8b166001146120af57600080fd5b60008080805b8781101561225c5760008989838181106120d1576120d16132e8565b905061012002018036038101906120e89190613532565b90508e6001600160a01b031681604001516001600160a01b03161461214f5760405162461bcd60e51b815260206004820152601f60248201527f73776976656c20756e6465726c79696e6720213d20756e6465726c79696e67006044820152606401610499565b8d8160e0015111156121a35760405162461bcd60e51b815260206004820152601b60248201527f73776976656c206d6174757269747920213d206d6174757269747900000000006044820152606401610499565b60006121c68e8e858181106121ba576121ba6132e8565b90506020020135612725565b90506121d28185613129565b9350808e8e858181106121e7576121e76132e8565b905060200201356121f89190613141565b6122029087613129565b95508160a001518260c0015161221891906135c9565b818f8f8681811061222b5761222b6132e8565b9050602002013561223c9190613141565b6122469190613604565b6122509086613129565b945050506001016120b5565b506001600160a01b038d1660009081526006602052604081208054839290612285908490613129565b9091555061229790508d33308661266f565b600260009054906101000a90046001600160a01b03166001600160a01b031663d2144f5889898e8e8b8b6040518763ffffffff1660e01b81526004016122e2969594939291906136e5565b6020604051808303816000875af1158015612301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232591906134b5565b506123318d8a8461292f565b50506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600060ff861615806123a1575060ff86166002145b6123aa57600080fd5b6000829050856001600160a01b0316816001600160a01b0316635001f3b56040518163ffffffff1660e01b81526004016020604051808303816000875af11580156123f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241d91906130c4565b6001600160a01b0316146124735760405162461bcd60e51b815260206004820152601860248201527f7969656c64206261736520213d20756e6465726c79696e6700000000000000006044820152606401610499565b84816001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af11580156124b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d891906137d4565b63ffffffff16111561252c5760405162461bcd60e51b815260206004820152601a60248201527f7969656c64206d6174757269747920213d206d617475726974790000000000006044820152606401610499565b6125388633308761266f565b6000612557878561254888612725565b6125529089613141565b61292f565b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff89160161261b5761258d878761274a565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f19906044016020604051808303816000875af11580156125f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261991906134b5565b505b6040805160ff8a1681526020810183905287916001600160a01b038a16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3979650505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af19150506126d281612aaa565b61271e5760405162461bcd60e51b815260206004820152601460248201527f7472616e736665722066726f6d206661696c65640000000000000000000000006044820152606401610499565b5050505050565b60008060055411612737576000612744565b60055461274490836135c9565b92915050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905260006044830181905292169063ca1695f0906064016020604051808303816000875af11580156127be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e291906130c4565b9392505050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af191505061283d81612aaa565b6128895760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401610499565b50505050565b60006040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af19150506128e381612aaa565b6128895760405162461bcd60e51b815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610499565b600080836001600160a01b03166313e7bc8c61294a85612af4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526fffffffffffffffffffffffffffffffff90911660048201526024016020604051808303816000875af11580156129b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d591906137fa565b90506129f48585836fffffffffffffffffffffffffffffffff166127e9565b6040517fbcc1694f0000000000000000000000000000000000000000000000000000000081523060048201526fffffffffffffffffffffffffffffffff821660248201526001600160a01b0385169063bcc1694f906044016020604051808303816000875af1158015612a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8f91906137fa565b506fffffffffffffffffffffffffffffffff16949350505050565b6000803d83612abd57806000803e806000fd5b8060208114612ad5578015612ae65760009250612aeb565b816000803e60005115159250612aeb565b600192505b50909392505050565b60006fffffffffffffffffffffffffffffffff821115612b305760405162461bcd60e51b81526020600482015260006024820152604401610499565b5090565b803560ff81168114612b4557600080fd5b919050565b6001600160a01b0381168114612b5f57600080fd5b50565b8035612b4581612b4a565b600080600080600080600080610100898b031215612b8a57600080fd5b612b9389612b34565b97506020890135612ba381612b4a565b965060408901359550606089013594506080890135935060a0890135925060c0890135612bcf81612b4a565b8092505060e089013590509295985092959890939650565b60008060008060008060c08789031215612c0057600080fd5b612c0987612b34565b95506020870135612c1981612b4a565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060208284031215612c5057600080fd5b81356127e281612b4a565b60008083601f840112612c6d57600080fd5b50813567ffffffffffffffff811115612c8557600080fd5b6020830191508360208260051b8501011115612ca057600080fd5b9250929050565b60008060008060408587031215612cbd57600080fd5b843567ffffffffffffffff80821115612cd557600080fd5b612ce188838901612c5b565b90965094506020870135915080821115612cfa57600080fd5b50612d0787828801612c5b565b95989497509550505050565b600060208284031215612d2557600080fd5b5035919050565b6fffffffffffffffffffffffffffffffff81168114612b5f57600080fd5b600080600080600080600060e0888a031215612d6557600080fd5b612d6e88612b34565b96506020880135612d7e81612b4a565b9550604088013594506060880135612d9581612d2c565b93506080880135925060a0880135612dac81612b4a565b915060c0880135612dbc81612b4a565b8091505092959891949750929550565b60008060008060808587031215612de257600080fd5b612deb85612b34565b93506020850135612dfb81612b4a565b93969395505050506040820135916060013590565b600080600080600080600080610100898b031215612e2d57600080fd5b612e3689612b34565b97506020890135612e4681612b4a565b965060408901359550606089013594506080890135935060a0890135925060c0890135612e7281612b4a565b915060e0890135612e8281612b4a565b809150509295985092959890939650565b600080600080600080600080610100898b031215612eb057600080fd5b612eb989612b34565b97506020890135612ec981612b4a565b965060408901359550606089013594506080890135935060a0890135612eee81612b4a565b925060c0890135612bcf81612b4a565b60008083601f840112612f1057600080fd5b50813567ffffffffffffffff811115612f2857600080fd5b60208301915083602061012083028501011115612ca057600080fd5b60008083601f840112612f5657600080fd5b50813567ffffffffffffffff811115612f6e57600080fd5b602083019150836020606083028501011115612ca057600080fd5b60008060008060008060008060008060e08b8d031215612fa857600080fd5b612fb18b612b34565b995060208b0135612fc181612b4a565b985060408b0135975060608b013567ffffffffffffffff80821115612fe557600080fd5b612ff18e838f01612c5b565b909950975060808d0135915061300682612b4a565b90955060a08c0135908082111561301c57600080fd5b6130288e838f01612efe565b909650945060c08d013591508082111561304157600080fd5b5061304e8d828e01612f44565b915080935050809150509295989b9194979a5092959850565b600080600080600060a0868803121561307f57600080fd5b61308886612b34565b9450602086013561309881612b4a565b9350604086013592506060860135915060808601356130b681612b4a565b809150509295509295909350565b6000602082840312156130d657600080fd5b81516127e281612b4a565b6000602082840312156130f357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561313c5761313c6130fa565b500190565b600082821015613153576131536130fa565b500390565b6002811061318f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60e081526000855160c060e08401528051806101a085015260005b818110156131cc5760208184018101516101c08784010152016131ae565b818111156131df5760006101c083870101525b50602088015161010085015260408801516101208501526060880151915061320b610140850183613158565b60808801516001600160a01b038116610160860152915060a08801516001600160a01b0381166101808601529150601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683016101c00191506132a7905060208301866001600160a01b03808251168352806020830151166020840152506040810151151560408301526060810151151560608301525050565b60a082019390935260c0015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156133675784516001600160a01b031683529383019391830191600101613342565b50506001600160a01b03969096166060850152505050608001529392505050565b604051610120810167ffffffffffffffff811182821017156133ac576133ac6132b9565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156133f9576133f96132b9565b604052919050565b6000602080838503121561341457600080fd5b825167ffffffffffffffff8082111561342c57600080fd5b818501915085601f83011261344057600080fd5b815181811115613452576134526132b9565b8060051b91506134638483016133b2565b818152918301840191848101908884111561347d57600080fd5b938501935b8385101561349b57845182529385019390850190613482565b98975050505050505050565b8015158114612b5f57600080fd5b6000602082840312156134c757600080fd5b81516127e2816134a7565b600080604083850312156134e557600080fd5b82516134f081612b4a565b6020939093015192949293505050565b60006020828403121561351257600080fd5b815164ffffffffff811681146127e257600080fd5b8035612b45816134a7565b6000610120828403121561354557600080fd5b61354d613388565b8235815261355d60208401612b62565b602082015261356e60408401612b62565b604082015261357f60608401613527565b606082015261359060808401613527565b608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152508091505092915050565b6000826135ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561363c5761363c6130fa565b500290565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561367357600080fd5b8260051b8083602087013760009401602001938452509192915050565b8183526000602080850194508260005b858110156136da5760ff6136b383612b34565b168752818301358388015260408083013590880152606096870196909101906001016136a0565b509495945050505050565b606080825281810187905260009060808084018a845b8b81101561379b578135835260208083013561371681612b4a565b6001600160a01b0316908401526040613730838201612b62565b6001600160a01b031690840152613748828601613527565b151585840152613759828501613527565b15158484015260a0828101359084015260c0808301359084015260e08083013590840152610100808301359084015261012092830192909101906001016136fb565b505084810360208601526137b081898b613641565b9250505082810360408401526137c7818587613690565b9998505050505050505050565b6000602082840312156137e657600080fd5b815163ffffffff811681146127e257600080fd5b60006020828403121561380c57600080fd5b81516127e281612d2c56fe30783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030a26469706673582212205cd7cdf52130e4f86d6dc20c55080fb66e5f34bf06b13da8c860d9f4d9b5296664736f6c634300080d0033"

// DeployLender deploys a new Ethereum contract, binding an instance of Lender to it.
func DeployLender(auth *bind.TransactOpts, backend bind.ContractBackend, s common.Address, p common.Address, t common.Address) (common.Address, *types.Transaction, *Lender, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(LenderBin), backend, s, p, t)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// Lender is an auto generated Go binding around an Ethereum contract.
type Lender struct {
	LenderCaller     // Read-only binding to the contract
	LenderTransactor // Write-only binding to the contract
	LenderFilterer   // Log filterer for contract events
}

// LenderCaller is an auto generated read-only Go binding around an Ethereum contract.
type LenderCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LenderTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type LenderFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LenderSession struct {
	Contract     *Lender           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LenderCallerSession struct {
	Contract *LenderCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// LenderTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LenderTransactorSession struct {
	Contract     *LenderTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderRaw is an auto generated low-level Go binding around an Ethereum contract.
type LenderRaw struct {
	Contract *Lender // Generic contract binding to access the raw methods on
}

// LenderCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LenderCallerRaw struct {
	Contract *LenderCaller // Generic read-only contract binding to access the raw methods on
}

// LenderTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LenderTransactorRaw struct {
	Contract *LenderTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLender creates a new instance of Lender, bound to a specific deployed contract.
func NewLender(address common.Address, backend bind.ContractBackend) (*Lender, error) {
	contract, err := bindLender(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// NewLenderCaller creates a new read-only instance of Lender, bound to a specific deployed contract.
func NewLenderCaller(address common.Address, caller bind.ContractCaller) (*LenderCaller, error) {
	contract, err := bindLender(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &LenderCaller{contract: contract}, nil
}

// NewLenderTransactor creates a new write-only instance of Lender, bound to a specific deployed contract.
func NewLenderTransactor(address common.Address, transactor bind.ContractTransactor) (*LenderTransactor, error) {
	contract, err := bindLender(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &LenderTransactor{contract: contract}, nil
}

// NewLenderFilterer creates a new log filterer instance of Lender, bound to a specific deployed contract.
func NewLenderFilterer(address common.Address, filterer bind.ContractFilterer) (*LenderFilterer, error) {
	contract, err := bindLender(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &LenderFilterer{contract: contract}, nil
}

// bindLender binds a generic wrapper to an already deployed contract.
func bindLender(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.LenderCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCallerSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCaller) Feenominator(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "feenominator")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCallerSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCaller) Fees(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "fees", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCallerSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCallerSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCaller) PendleAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "pendleAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCallerSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCaller) SwivelAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "swivelAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCallerSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCaller) TempusAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "tempusAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCallerSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderTransactor) Approve(opts *bind.TransactOpts, u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "approve", u, a)
}

// Approve is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderSession) Approve(u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, a)
}

// Approve is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderTransactorSession) Approve(u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, a)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactor) Lend(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend", p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactor) Lend0(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend0", p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactorSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactor) Lend1(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend1", p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactor) Lend2(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend2", p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactorSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactor) Lend3(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend3", p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactorSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactor) Lend4(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend4", p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactor) Lend5(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend5", p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactor) Lend6(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend6", p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactorSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactor) Mint(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "mint", p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactorSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactor) SetFee(opts *bind.TransactOpts, f *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setFee", f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactorSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactor) SetMarketPlaceAddress(opts *bind.TransactOpts, m common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setMarketPlaceAddress", m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactorSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactor) Withdraw(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "withdraw", e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactorSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// LenderLendIterator is returned from FilterLend and is used to iterate over the raw logs and unpacked data for Lend events raised by the Lender contract.
type LenderLendIterator struct {
	Event *LenderLend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderLendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderLend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderLend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderLendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderLendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderLend represents a Lend event raised by the Lender contract.
type LenderLend struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Returned   *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterLend is a free log retrieval operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) FilterLend(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderLendIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderLendIterator{contract: _Lender.contract, event: "Lend", logs: logs, sub: sub}, nil
}

// WatchLend is a free log subscription operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) WatchLend(opts *bind.WatchOpts, sink chan<- *LenderLend, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderLend)
				if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLend is a log parse operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) ParseLend(log types.Log) (*LenderLend, error) {
	event := new(LenderLend)
	if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// LenderMintIterator is returned from FilterMint and is used to iterate over the raw logs and unpacked data for Mint events raised by the Lender contract.
type LenderMintIterator struct {
	Event *LenderMint // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderMintIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderMint)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderMint)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderMintIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderMintIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderMint represents a Mint event raised by the Lender contract.
type LenderMint struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Amount     *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterMint is a free log retrieval operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) FilterMint(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderMintIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderMintIterator{contract: _Lender.contract, event: "Mint", logs: logs, sub: sub}, nil
}

// WatchMint is a free log subscription operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) WatchMint(opts *bind.WatchOpts, sink chan<- *LenderMint, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderMint)
				if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMint is a log parse operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) ParseMint(log types.Log) (*LenderMint, error) {
	event := new(LenderMint)
	if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
