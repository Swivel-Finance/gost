// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package lender

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SwivelComponents is an auto generated low-level Go binding around an user-defined struct.
type SwivelComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelOrder is an auto generated low-level Go binding around an user-defined struct.
type SwivelOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// LenderMetaData contains all meta data concerning the Lender contract.
var LenderMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"p\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"InvalidPrincipal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MarketAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"MarketMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returned\",\"type\":\"uint256\"}],\"name\":\"Lend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"principal\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"u\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"a\",\"type\":\"address[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"i\",\"type\":\"bytes32\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"a\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aave\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structSwivel.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSwivel.Components[]\",\"name\":\"s\",\"type\":\"tuple[]\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"}],\"name\":\"lend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"p\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendleAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"f\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"name\":\"setMarketPlaceAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swivelAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tempusAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b5060405162003e5838038062003e588339810160408190526200003491620000a5565b600080546001600160a01b03199081163317909155600280546001600160a01b039586169083161790556003805493851693821693909317909255600480549190931691161790556103e8600555620000ef565b80516001600160a01b0381168114620000a057600080fd5b919050565b600080600060608486031215620000bb57600080fd5b620000c68462000088565b9250620000d66020850162000088565b9150620000e66040850162000088565b90509250925092565b613d5980620000ff6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c8063dc4c7ca9116100d8578063ef6035691161008c578063f851a44011610066578063f851a44014610303578063f9a17fcb14610316578063faaebd211461032957600080fd5b8063ef603569146102ca578063f3cf26f3146102dd578063f7302e7c146102f057600080fd5b8063e448b458116100bd578063e448b45814610291578063e86e5e6d146102a4578063ea08c031146102b757600080fd5b8063dc4c7ca91461026b578063de1d3cb51461027e57600080fd5b806365dff1e11161012f5780639e6b5173116101145780639e6b51731461023c578063c1a7abfd14610245578063cc98ef961461025857600080fd5b806365dff1e11461021657806369fe0e2d1461022957600080fd5b80632e25d2a6116101605780632e25d2a6146101c55780634135c9d1146101f057806351cff8d91461020357600080fd5b806303799f871461017c5780631271f09a146101a2575b600080fd5b61018f61018a366004612ff7565b610349565b6040519081526020015b60405180910390f35b6101b56101b0366004613071565b610781565b6040519015158152602001610199565b6001546101d8906001600160a01b031681565b6040516001600160a01b039091168152602001610199565b61018f6101fe3660046130b3565b6108c3565b6101b561021136600461310a565b610dca565b6101b5610224366004613173565b610e4b565b6101b56102373660046131df565b610f6b565b61018f60055481565b61018f610253366004613216565b610fbb565b6101b561026636600461310a565b611467565b6101b5610279366004613298565b61153c565b6004546101d8906001600160a01b031681565b61018f61029f3660046132dc565b6116d3565b61018f6102b2366004613298565b611bde565b6002546101d8906001600160a01b031681565b6003546101d8906001600160a01b031681565b61018f6102eb36600461335f565b61204e565b61018f6102fe366004613455565b6123ef565b6000546101d8906001600160a01b031681565b61018f610324366004613533565b612744565b61018f61033736600461310a565b60066020526000908152604090205481565b600060ff8916600314610392576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff8a1660048201526024015b60405180910390fd5b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af1158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190613590565b9050886001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049c9190613590565b6001600160a01b03161461050c576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b87816001600160a01b031663aa082a9d6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561054d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057191906135ad565b11156105d9576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d617475726974790000000000000000000000000000000000000000000000006044820152606401610389565b6105e58933308a612a91565b6105ee87612b61565b6001600160a01b038a16600090815260066020526040812080549091906106169084906135f5565b90915550506040805160808101825230808252602082015260008183018190526060820181905282516101208101845260c08101848152929391929091829190613ce460e084013981526020018681526020016106728b612b61565b61067c908c61360d565b8152602001600081526020018c6001600160a01b03168152602001846001600160a01b031681525090506000866001600160a01b03166369bbd8cd83858c8c6040518563ffffffff1660e01b81526004016106da949392919061365f565b6020604051808303816000875af11580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d91906135ad565b90508a8c6001600160a01b03167f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d98f8460405161076992919060ff929092168252602082015260400190565b60405180910390a39c9b505050505050505050505050565b600080546001600160a01b03163381146107c7576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005b60098160ff1610156108b6576001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820189905260ff84166044830152600092169063ca1695f0906064016020604051808303816000875af115801561086d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108919190613590565b90506001600160a01b038116156108ad576108ad818785612b86565b506001016107eb565b5060019695505050505050565b600060ff8716600414610907576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff88166004820152602401610389565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820188905260ff8a166044830152600092169063ca1695f0906064016020604051808303816000875af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a19190613590565b90506000819050876001600160a01b0316816001600160a01b03166376d5de856040518163ffffffff1660e01b81526004016020604051808303816000875af11580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190613590565b6001600160a01b031614610a86576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b86816001600160a01b031663e184c9be6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb91906135ad565b1115610b53576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d617475726974790000000000000000000000000000000000000000000000006044820152606401610389565b610b5f88333089612a91565b610b6886612b61565b6001600160a01b03891660009081526006602052604081208054909190610b909084906135f5565b90915550506040805160028082526060820183526000926020830190803683370190505090508881600081518110610bca57610bca6137b4565b60200260200101906001600160a01b031690816001600160a01b0316815250508281600181518110610bfe57610bfe6137b4565b6001600160a01b039283166020918202929092010152600354600091166338ed1739610c298a612b61565b610c33908b61360d565b8985308b6040518663ffffffff1660e01b8152600401610c579594939291906137e3565b6000604051808303816000875af1158015610c76573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cbc91908101906138cd565b600081518110610cce57610cce6137b4565b602002602001015190506000610ce48b8b612c46565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015610d4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d719190613981565b506040805160ff8e168152602081018490528b916001600160a01b038e16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509a9950505050505050505050565b600080546001600160a01b0316338114610e10576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03808416600090815260066020526040812080549082905590548592610e409184911683612ce5565b506001949350505050565b600080546001600160a01b0316338114610e91576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84838114610ecb576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005b82811015610f5c576000898983818110610f0b57610f0b6137b4565b9050602002016020810190610f20919061310a565b9050610f5381898985818110610f3857610f386137b4565b9050602002016020810190610f4d919061310a565b85612b86565b50600101610eef565b50600198975050505050505050565b600080546001600160a01b0316338114610fb1576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600555600190565b600060ff8816600614610fff576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff89166004820152602401610389565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820189905260ff8b166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110999190613590565b9050876001600160a01b0316816001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303816000875af11580156110e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111099190613590565b6001600160a01b031614611179576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b86846001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af11580156111ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111de91906135ad565b1115611246576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d617475726974790000000000000000000000000000000000000000000000006044820152606401610389565b6000611263876fffffffffffffffffffffffffffffffff16612b61565b6001600160a01b038a166000908152600660205260408120805492935083929091906112909084906135f5565b90915550600090506112b4826fffffffffffffffffffffffffffffffff8a1661360d565b90506112d48a33308b6fffffffffffffffffffffffffffffffff16612a91565b6040517f8f1f30f00000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018b9052604482018390526064820189905260009190881690638f1f30f0906084016020604051808303816000875af115801561134e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137291906135ad565b905060006113808c8c612c46565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af11580156113e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140d9190613981565b506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600080546001600160a01b03163381146114ad576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546001600160a01b0316156114ff576001546040517f599ad35b0000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152602401610389565b600180546001600160a01b0385167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116178155915050919050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820185905260ff87166044830152600092839291169063ca1695f0906064016020604051808303816000875af11580156115b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d99190613590565b90506115e781333086612a91565b6115f18585612c46565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b0391909116906340c10f19906044016020604051808303816000875af1158015611659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167d9190613981565b506040805160ff881681526020810185905285916001600160a01b038816917f309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6910160405180910390a350600195945050505050565b600060ff8916600514611717576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff8a166004820152602401610389565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af115801561178d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b19190613590565b9050886001600160a01b0316816001600160a01b0316632d81f8386040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181f9190613590565b6001600160a01b03161461188f576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b87816001600160a01b0316634e8bfdaa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f291906135ad565b111561195a576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d617475726974790000000000000000000000000000000000000000000000006044820152606401610389565b886119678133308b612a91565b61197088612b61565b6001600160a01b038b16600090815260066020526040812080549091906119989084906135f5565b90915550600090506119aa8b8b612c46565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038316906370a08231906024016020604051808303816000875af1158015611a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3391906135ad565b6004546001600160a01b0316634f255a1f888a611a4f8f612b61565b8f611a5a919061360d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039384166004820152929091166024830152604482015260016064820152608481018d905260a481018c905260c4016020604051808303816000875af1158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff91906135ad565b611b09919061360d565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018290529091506001600160a01b038316906340c10f19906044015b6020604051808303816000875af1158015611b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b979190613981565b506040805160ff8f168152602081018390528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d99101610769565b600060ff8516600814611c22576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff86166004820152602401610389565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820186905260ff88166044830152600092169063ca1695f0906064016020604051808303816000875af1158015611c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbc9190613590565b905060008190506000816001600160a01b031663ee719bc86040518163ffffffff1660e01b81526004016040805180830381865afa158015611d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d26919061399e565b509050866001600160a01b0316816001600160a01b031614611da4576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b85826001600160a01b031663e16695b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0791906139cc565b64ffffffffff161115611e76576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d617475726974790000000000000000000000000000000000000000000000006044820152606401610389565b611e8287333088612a91565b6000611e8d86612b61565b6001600160a01b038916600090815260066020526040812080549293508392909190611eba9084906135f5565b90915550600090506001600160a01b038416636e553f65611edb848a61360d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091523060248201526044016020604051808303816000875af1158015611f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5b91906135ad565b90506000611f698a8a612c46565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b038216906340c10f19906044016020604051808303816000875af1158015611fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff69190613981565b506040805160ff8d168152602081018490528a916001600160a01b038d16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509998505050505050505050565b600060ff8916600714612092576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff8a166004820152602401610389565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b038a81166004830152602482018a905260ff8c166044830152600092169063ca1695f0906064016020604051808303816000875af1158015612108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212c9190613590565b9050886001600160a01b0316816001600160a01b031663c6ec27bf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219a9190613590565b6001600160a01b03161461220a576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b6122168933308a612a91565b600061222188612b61565b6001600160a01b038b1660009081526006602052604081208054929350839290919061224e9084906135f5565b9091555060009050612260828a61360d565b6040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b038d8116600483015260248201839052306044830152600060648301529192509087169063e8eda9df90608401600060405180830381600087803b1580156122d457600080fd5b505af11580156122e8573d6000803e3d6000fd5b50506040517f5dde4ba6000000000000000000000000000000000000000000000000000000008152600481018890526001602482015260448101849052600060648201819052608482018c90523060a483015292506001600160a01b038a169150635dde4ba69060c4016020604051808303816000875af1158015612371573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239591906135ad565b90506123a18c8c612c46565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f1990604401611b54565b600060ff8b16600114612433576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff8c166004820152602401610389565b60008080805b87811015612614576000898983818110612455576124556137b4565b9050610120020180360381019061246c91906139fe565b90508e6001600160a01b031681604001516001600160a01b0316146124ed576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b8d8160e00151111561255b576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d617475726974790000000000000000000000000000000000000000000000006044820152606401610389565b600061257e8e8e85818110612572576125726137b4565b90506020020135612b61565b905061258a81856135f5565b9350808e8e8581811061259f5761259f6137b4565b905060200201356125b0919061360d565b6125ba90876135f5565b95508160a001518260c001516125d09190613a95565b818f8f868181106125e3576125e36137b4565b905060200201356125f4919061360d565b6125fe9190613ad0565b61260890866135f5565b94505050600101612439565b506001600160a01b038d166000908152600660205260408120805483929061263d9084906135f5565b9091555061264f90508d333086612a91565b600260009054906101000a90046001600160a01b03166001600160a01b031663d2144f5889898e8e8b8b6040518763ffffffff1660e01b815260040161269a96959493929190613bb1565b6020604051808303816000875af11580156126b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126dd9190613981565b506126e98d8a84612d9f565b50506040805160ff8f168152602081018490528c916001600160a01b038f16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3509b9a5050505050505050505050565b600060ff86161580159061275c575060ff8616600214155b15612798576040517f6dc1157300000000000000000000000000000000000000000000000000000000815260ff87166004820152602401610389565b6000829050856001600160a01b0316816001600160a01b0316635001f3b56040518163ffffffff1660e01b81526004016020604051808303816000875af11580156127e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280b9190613590565b6001600160a01b03161461287b576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f756e6465726c79696e67000000000000000000000000000000000000000000006044820152606401610389565b84816001600160a01b031663204f83f96040518163ffffffff1660e01b81526004016020604051808303816000875af11580156128bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e09190613ca0565b63ffffffff16111561294e576040517f8fe67ba800000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6d617475726974790000000000000000000000000000000000000000000000006044820152606401610389565b61295a86333087612a91565b6000612979878561296a88612b61565b612974908961360d565b612d9f565b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60ff891601612a3d576129af8787612c46565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b0391909116906340c10f19906044016020604051808303816000875af1158015612a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3b9190613981565b505b6040805160ff8a1681526020810183905287916001600160a01b038a16917f26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9910160405180910390a3979650505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af1915050612af481612f1a565b612b5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f7472616e736665722066726f6d206661696c65640000000000000000000000006044820152606401610389565b5050505050565b60008060055411612b73576000612b80565b600554612b809083613a95565b92915050565b60006040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af1915050612bda81612f1a565b612c40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610389565b50505050565b6001546040517fca1695f00000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905260006044830181905292169063ca1695f0906064016020604051808303816000875af1158015612cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cde9190613590565b9392505050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af1915050612d3981612f1a565b612c40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401610389565b600080836001600160a01b03166313e7bc8c612dba85612f64565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526fffffffffffffffffffffffffffffffff90911660048201526024016020604051808303816000875af1158015612e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e459190613cc6565b9050612e648585836fffffffffffffffffffffffffffffffff16612ce5565b6040517fbcc1694f0000000000000000000000000000000000000000000000000000000081523060048201526fffffffffffffffffffffffffffffffff821660248201526001600160a01b0385169063bcc1694f906044016020604051808303816000875af1158015612edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eff9190613cc6565b506fffffffffffffffffffffffffffffffff16949350505050565b6000803d83612f2d57806000803e806000fd5b8060208114612f45578015612f565760009250612f5b565b816000803e60005115159250612f5b565b600192505b50909392505050565b60006fffffffffffffffffffffffffffffffff821115612fba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260006024820152604401610389565b5090565b803560ff81168114612fcf57600080fd5b919050565b6001600160a01b0381168114612fe957600080fd5b50565b8035612fcf81612fd4565b600080600080600080600080610100898b03121561301457600080fd5b61301d89612fbe565b9750602089013561302d81612fd4565b965060408901359550606089013594506080890135935060a0890135925060c089013561305981612fd4565b8092505060e089013590509295985092959890939650565b60008060006060848603121561308657600080fd5b833561309181612fd4565b92506020840135915060408401356130a881612fd4565b809150509250925092565b60008060008060008060c087890312156130cc57600080fd5b6130d587612fbe565b955060208701356130e581612fd4565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60006020828403121561311c57600080fd5b8135612cde81612fd4565b60008083601f84011261313957600080fd5b50813567ffffffffffffffff81111561315157600080fd5b6020830191508360208260051b850101111561316c57600080fd5b9250929050565b6000806000806040858703121561318957600080fd5b843567ffffffffffffffff808211156131a157600080fd5b6131ad88838901613127565b909650945060208701359150808211156131c657600080fd5b506131d387828801613127565b95989497509550505050565b6000602082840312156131f157600080fd5b5035919050565b6fffffffffffffffffffffffffffffffff81168114612fe957600080fd5b600080600080600080600060e0888a03121561323157600080fd5b61323a88612fbe565b9650602088013561324a81612fd4565b9550604088013594506060880135613261816131f8565b93506080880135925060a088013561327881612fd4565b915060c088013561328881612fd4565b8091505092959891949750929550565b600080600080608085870312156132ae57600080fd5b6132b785612fbe565b935060208501356132c781612fd4565b93969395505050506040820135916060013590565b600080600080600080600080610100898b0312156132f957600080fd5b61330289612fbe565b9750602089013561331281612fd4565b965060408901359550606089013594506080890135935060a0890135925060c089013561333e81612fd4565b915060e089013561334e81612fd4565b809150509295985092959890939650565b600080600080600080600080610100898b03121561337c57600080fd5b61338589612fbe565b9750602089013561339581612fd4565b965060408901359550606089013594506080890135935060a08901356133ba81612fd4565b925060c089013561305981612fd4565b60008083601f8401126133dc57600080fd5b50813567ffffffffffffffff8111156133f457600080fd5b6020830191508360206101208302850101111561316c57600080fd5b60008083601f84011261342257600080fd5b50813567ffffffffffffffff81111561343a57600080fd5b60208301915083602060608302850101111561316c57600080fd5b60008060008060008060008060008060e08b8d03121561347457600080fd5b61347d8b612fbe565b995060208b013561348d81612fd4565b985060408b0135975060608b013567ffffffffffffffff808211156134b157600080fd5b6134bd8e838f01613127565b909950975060808d013591506134d282612fd4565b90955060a08c013590808211156134e857600080fd5b6134f48e838f016133ca565b909650945060c08d013591508082111561350d57600080fd5b5061351a8d828e01613410565b915080935050809150509295989b9194979a5092959850565b600080600080600060a0868803121561354b57600080fd5b61355486612fbe565b9450602086013561356481612fd4565b93506040860135925060608601359150608086013561358281612fd4565b809150509295509295909350565b6000602082840312156135a257600080fd5b8151612cde81612fd4565b6000602082840312156135bf57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115613608576136086135c6565b500190565b60008282101561361f5761361f6135c6565b500390565b6002811061365b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60e081526000855160c060e08401528051806101a085015260005b818110156136985760208184018101516101c087840101520161367a565b818111156136ab5760006101c083870101525b5060208801516101008501526040880151610120850152606088015191506136d7610140850183613624565b60808801516001600160a01b038116610160860152915060a08801516001600160a01b0381166101808601529150601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683016101c0019150613773905060208301866001600160a01b03808251168352806020830151166020840152506040810151151560408301526060810151151560608301525050565b60a082019390935260c0015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156138335784516001600160a01b03168352938301939183019160010161380e565b50506001600160a01b03969096166060850152505050608001529392505050565b604051610120810167ffffffffffffffff8111828210171561387857613878613785565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156138c5576138c5613785565b604052919050565b600060208083850312156138e057600080fd5b825167ffffffffffffffff808211156138f857600080fd5b818501915085601f83011261390c57600080fd5b81518181111561391e5761391e613785565b8060051b915061392f84830161387e565b818152918301840191848101908884111561394957600080fd5b938501935b838510156139675784518252938501939085019061394e565b98975050505050505050565b8015158114612fe957600080fd5b60006020828403121561399357600080fd5b8151612cde81613973565b600080604083850312156139b157600080fd5b82516139bc81612fd4565b6020939093015192949293505050565b6000602082840312156139de57600080fd5b815164ffffffffff81168114612cde57600080fd5b8035612fcf81613973565b60006101208284031215613a1157600080fd5b613a19613854565b82358152613a2960208401612fec565b6020820152613a3a60408401612fec565b6040820152613a4b606084016139f3565b6060820152613a5c608084016139f3565b608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013581830152508091505092915050565b600082613acb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b0857613b086135c6565b500290565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613b3f57600080fd5b8260051b8083602087013760009401602001938452509192915050565b8183526000602080850194508260005b85811015613ba65760ff613b7f83612fbe565b16875281830135838801526040808301359088015260609687019690910190600101613b6c565b509495945050505050565b606080825281810187905260009060808084018a845b8b811015613c675781358352602080830135613be281612fd4565b6001600160a01b0316908401526040613bfc838201612fec565b6001600160a01b031690840152613c148286016139f3565b151585840152613c258285016139f3565b15158484015260a0828101359084015260c0808301359084015260e0808301359084015261010080830135908401526101209283019290910190600101613bc7565b50508481036020860152613c7c81898b613b0d565b925050508281036040840152613c93818587613b5c565b9998505050505050505050565b600060208284031215613cb257600080fd5b815163ffffffff81168114612cde57600080fd5b600060208284031215613cd857600080fd5b8151612cde816131f856fe30783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030a26469706673582212202270919ea0f59b273c41dafc7ba5399a5efdb54f57e62360bc85ba7104dfccd364736f6c634300080d0033",
}

// LenderABI is the input ABI used to generate the binding from.
// Deprecated: Use LenderMetaData.ABI instead.
var LenderABI = LenderMetaData.ABI

// LenderBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use LenderMetaData.Bin instead.
var LenderBin = LenderMetaData.Bin

// DeployLender deploys a new Ethereum contract, binding an instance of Lender to it.
func DeployLender(auth *bind.TransactOpts, backend bind.ContractBackend, s common.Address, p common.Address, t common.Address) (common.Address, *types.Transaction, *Lender, error) {
	parsed, err := LenderMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(LenderBin), backend, s, p, t)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// Lender is an auto generated Go binding around an Ethereum contract.
type Lender struct {
	LenderCaller     // Read-only binding to the contract
	LenderTransactor // Write-only binding to the contract
	LenderFilterer   // Log filterer for contract events
}

// LenderCaller is an auto generated read-only Go binding around an Ethereum contract.
type LenderCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LenderTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type LenderFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LenderSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LenderSession struct {
	Contract     *Lender           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LenderCallerSession struct {
	Contract *LenderCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// LenderTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LenderTransactorSession struct {
	Contract     *LenderTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LenderRaw is an auto generated low-level Go binding around an Ethereum contract.
type LenderRaw struct {
	Contract *Lender // Generic contract binding to access the raw methods on
}

// LenderCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LenderCallerRaw struct {
	Contract *LenderCaller // Generic read-only contract binding to access the raw methods on
}

// LenderTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LenderTransactorRaw struct {
	Contract *LenderTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLender creates a new instance of Lender, bound to a specific deployed contract.
func NewLender(address common.Address, backend bind.ContractBackend) (*Lender, error) {
	contract, err := bindLender(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Lender{LenderCaller: LenderCaller{contract: contract}, LenderTransactor: LenderTransactor{contract: contract}, LenderFilterer: LenderFilterer{contract: contract}}, nil
}

// NewLenderCaller creates a new read-only instance of Lender, bound to a specific deployed contract.
func NewLenderCaller(address common.Address, caller bind.ContractCaller) (*LenderCaller, error) {
	contract, err := bindLender(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &LenderCaller{contract: contract}, nil
}

// NewLenderTransactor creates a new write-only instance of Lender, bound to a specific deployed contract.
func NewLenderTransactor(address common.Address, transactor bind.ContractTransactor) (*LenderTransactor, error) {
	contract, err := bindLender(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &LenderTransactor{contract: contract}, nil
}

// NewLenderFilterer creates a new log filterer instance of Lender, bound to a specific deployed contract.
func NewLenderFilterer(address common.Address, filterer bind.ContractFilterer) (*LenderFilterer, error) {
	contract, err := bindLender(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &LenderFilterer{contract: contract}, nil
}

// bindLender binds a generic wrapper to an already deployed contract.
func bindLender(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(LenderABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.LenderCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.LenderTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Lender *LenderCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Lender.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Lender *LenderTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Lender *LenderTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Lender.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Lender *LenderCallerSession) Admin() (common.Address, error) {
	return _Lender.Contract.Admin(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCaller) Feenominator(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "feenominator")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Feenominator is a free data retrieval call binding the contract method 0x9e6b5173.
//
// Solidity: function feenominator() view returns(uint256)
func (_Lender *LenderCallerSession) Feenominator() (*big.Int, error) {
	return _Lender.Contract.Feenominator(&_Lender.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCaller) Fees(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "fees", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// Fees is a free data retrieval call binding the contract method 0xfaaebd21.
//
// Solidity: function fees(address ) view returns(uint256)
func (_Lender *LenderCallerSession) Fees(arg0 common.Address) (*big.Int, error) {
	return _Lender.Contract.Fees(&_Lender.CallOpts, arg0)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Lender *LenderCallerSession) MarketPlace() (common.Address, error) {
	return _Lender.Contract.MarketPlace(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCaller) PendleAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "pendleAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// PendleAddr is a free data retrieval call binding the contract method 0xef603569.
//
// Solidity: function pendleAddr() view returns(address)
func (_Lender *LenderCallerSession) PendleAddr() (common.Address, error) {
	return _Lender.Contract.PendleAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCaller) SwivelAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "swivelAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// SwivelAddr is a free data retrieval call binding the contract method 0xea08c031.
//
// Solidity: function swivelAddr() view returns(address)
func (_Lender *LenderCallerSession) SwivelAddr() (common.Address, error) {
	return _Lender.Contract.SwivelAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCaller) TempusAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Lender.contract.Call(opts, &out, "tempusAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// TempusAddr is a free data retrieval call binding the contract method 0xde1d3cb5.
//
// Solidity: function tempusAddr() view returns(address)
func (_Lender *LenderCallerSession) TempusAddr() (common.Address, error) {
	return _Lender.Contract.TempusAddr(&_Lender.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x1271f09a.
//
// Solidity: function approve(address u, uint256 m, address r) returns(bool)
func (_Lender *LenderTransactor) Approve(opts *bind.TransactOpts, u common.Address, m *big.Int, r common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "approve", u, m, r)
}

// Approve is a paid mutator transaction binding the contract method 0x1271f09a.
//
// Solidity: function approve(address u, uint256 m, address r) returns(bool)
func (_Lender *LenderSession) Approve(u common.Address, m *big.Int, r common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, m, r)
}

// Approve is a paid mutator transaction binding the contract method 0x1271f09a.
//
// Solidity: function approve(address u, uint256 m, address r) returns(bool)
func (_Lender *LenderTransactorSession) Approve(u common.Address, m *big.Int, r common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve(&_Lender.TransactOpts, u, m, r)
}

// Approve0 is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderTransactor) Approve0(opts *bind.TransactOpts, u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "approve0", u, a)
}

// Approve0 is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderSession) Approve0(u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve0(&_Lender.TransactOpts, u, a)
}

// Approve0 is a paid mutator transaction binding the contract method 0x65dff1e1.
//
// Solidity: function approve(address[] u, address[] a) returns(bool)
func (_Lender *LenderTransactorSession) Approve0(u []common.Address, a []common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Approve0(&_Lender.TransactOpts, u, a)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactor) Lend(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend", p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend is a paid mutator transaction binding the contract method 0x03799f87.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address e, bytes32 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, e common.Address, i [32]byte) (*types.Transaction, error) {
	return _Lender.Contract.Lend(&_Lender.TransactOpts, p, u, m, a, r, d, e, i)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactor) Lend0(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend0", p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend0 is a paid mutator transaction binding the contract method 0x4135c9d1.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d) returns(uint256)
func (_Lender *LenderTransactorSession) Lend0(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend0(&_Lender.TransactOpts, p, u, m, a, r, d)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactor) Lend1(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend1", p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend1 is a paid mutator transaction binding the contract method 0xc1a7abfd.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint128 a, uint256 r, address x, address s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend1(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, x common.Address, s common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend1(&_Lender.TransactOpts, p, u, m, a, r, x, s)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactor) Lend2(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend2", p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend2 is a paid mutator transaction binding the contract method 0xe448b458.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, uint256 d, address t, address x) returns(uint256)
func (_Lender *LenderTransactorSession) Lend2(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, d *big.Int, t common.Address, x common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend2(&_Lender.TransactOpts, p, u, m, a, r, d, t, x)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactor) Lend3(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend3", p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend3 is a paid mutator transaction binding the contract method 0xe86e5e6d.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a) returns(uint256)
func (_Lender *LenderTransactorSession) Lend3(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend3(&_Lender.TransactOpts, p, u, m, a)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactor) Lend4(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend4", p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend4 is a paid mutator transaction binding the contract method 0xf3cf26f3.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, uint256 r, address pool, address aave, uint256 i) returns(uint256)
func (_Lender *LenderTransactorSession) Lend4(p uint8, u common.Address, m *big.Int, a *big.Int, r *big.Int, pool common.Address, aave common.Address, i *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Lend4(&_Lender.TransactOpts, p, u, m, a, r, pool, aave, i)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactor) Lend5(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend5", p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend5 is a paid mutator transaction binding the contract method 0xf7302e7c.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256[] a, address y, (bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, (uint8,bytes32,bytes32)[] s) returns(uint256)
func (_Lender *LenderTransactorSession) Lend5(p uint8, u common.Address, m *big.Int, a []*big.Int, y common.Address, o []SwivelOrder, s []SwivelComponents) (*types.Transaction, error) {
	return _Lender.Contract.Lend5(&_Lender.TransactOpts, p, u, m, a, y, o, s)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactor) Lend6(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "lend6", p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Lend6 is a paid mutator transaction binding the contract method 0xf9a17fcb.
//
// Solidity: function lend(uint8 p, address u, uint256 m, uint256 a, address y) returns(uint256)
func (_Lender *LenderTransactorSession) Lend6(p uint8, u common.Address, m *big.Int, a *big.Int, y common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Lend6(&_Lender.TransactOpts, p, u, m, a, y)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactor) Mint(opts *bind.TransactOpts, p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "mint", p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// Mint is a paid mutator transaction binding the contract method 0xdc4c7ca9.
//
// Solidity: function mint(uint8 p, address u, uint256 m, uint256 a) returns(bool)
func (_Lender *LenderTransactorSession) Mint(p uint8, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.Mint(&_Lender.TransactOpts, p, u, m, a)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactor) SetFee(opts *bind.TransactOpts, f *big.Int) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setFee", f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetFee is a paid mutator transaction binding the contract method 0x69fe0e2d.
//
// Solidity: function setFee(uint256 f) returns(bool)
func (_Lender *LenderTransactorSession) SetFee(f *big.Int) (*types.Transaction, error) {
	return _Lender.Contract.SetFee(&_Lender.TransactOpts, f)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactor) SetMarketPlaceAddress(opts *bind.TransactOpts, m common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "setMarketPlaceAddress", m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// SetMarketPlaceAddress is a paid mutator transaction binding the contract method 0xcc98ef96.
//
// Solidity: function setMarketPlaceAddress(address m) returns(bool)
func (_Lender *LenderTransactorSession) SetMarketPlaceAddress(m common.Address) (*types.Transaction, error) {
	return _Lender.Contract.SetMarketPlaceAddress(&_Lender.TransactOpts, m)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactor) Withdraw(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Lender.contract.Transact(opts, "withdraw", e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns(bool)
func (_Lender *LenderTransactorSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Lender.Contract.Withdraw(&_Lender.TransactOpts, e)
}

// LenderLendIterator is returned from FilterLend and is used to iterate over the raw logs and unpacked data for Lend events raised by the Lender contract.
type LenderLendIterator struct {
	Event *LenderLend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderLendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderLend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderLend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderLendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderLendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderLend represents a Lend event raised by the Lender contract.
type LenderLend struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Returned   *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterLend is a free log retrieval operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) FilterLend(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderLendIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderLendIterator{contract: _Lender.contract, event: "Lend", logs: logs, sub: sub}, nil
}

// WatchLend is a free log subscription operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) WatchLend(opts *bind.WatchOpts, sink chan<- *LenderLend, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Lend", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderLend)
				if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLend is a log parse operation binding the contract event 0x26e45da718e624ee4c0a2c979b1436c3b050d3ef1197fdb210e20002900457d9.
//
// Solidity: event Lend(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 returned)
func (_Lender *LenderFilterer) ParseLend(log types.Log) (*LenderLend, error) {
	event := new(LenderLend)
	if err := _Lender.contract.UnpackLog(event, "Lend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// LenderMintIterator is returned from FilterMint and is used to iterate over the raw logs and unpacked data for Mint events raised by the Lender contract.
type LenderMintIterator struct {
	Event *LenderMint // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *LenderMintIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(LenderMint)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(LenderMint)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *LenderMintIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *LenderMintIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// LenderMint represents a Mint event raised by the Lender contract.
type LenderMint struct {
	Principal  uint8
	Underlying common.Address
	Maturity   *big.Int
	Amount     *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterMint is a free log retrieval operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) FilterMint(opts *bind.FilterOpts, underlying []common.Address, maturity []*big.Int) (*LenderMintIterator, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.FilterLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return &LenderMintIterator{contract: _Lender.contract, event: "Mint", logs: logs, sub: sub}, nil
}

// WatchMint is a free log subscription operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) WatchMint(opts *bind.WatchOpts, sink chan<- *LenderMint, underlying []common.Address, maturity []*big.Int) (event.Subscription, error) {

	var underlyingRule []interface{}
	for _, underlyingItem := range underlying {
		underlyingRule = append(underlyingRule, underlyingItem)
	}
	var maturityRule []interface{}
	for _, maturityItem := range maturity {
		maturityRule = append(maturityRule, maturityItem)
	}

	logs, sub, err := _Lender.contract.WatchLogs(opts, "Mint", underlyingRule, maturityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(LenderMint)
				if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMint is a log parse operation binding the contract event 0x309b03ba657e17f1beadbc6eb3c06ba79b38084eb8d0e5452cc222462a17f1f6.
//
// Solidity: event Mint(uint8 principal, address indexed underlying, uint256 indexed maturity, uint256 amount)
func (_Lender *LenderFilterer) ParseMint(log types.Log) (*LenderMint, error) {
	event := new(LenderMint)
	if err := _Lender.contract.UnpackLog(event, "Mint", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
