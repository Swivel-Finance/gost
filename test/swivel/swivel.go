// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package swivel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashOrder is an auto generated low-level Go binding around an user-defined struct.
type HashOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// SigComponents is an auto generated low-level Go binding around an user-defined struct.
type SigComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelABI is the input ABI used to generate the binding from.
const SwivelABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"initiate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlaceAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// SwivelBin is the compiled bytecode used for deploying new contracts.
var SwivelBin = "0x60806040523480156200001157600080fd5b5060405162004151380380620041518339818101604052810190620000379190620001bf565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000fb6040518060400160405280600e81526020017f53776976656c2046696e616e63650000000000000000000000000000000000008152506040518060400160405280600581526020017f322e302e3000000000000000000000000000000000000000000000000000000081525046306200014960201b62000d701760201c565b60008190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000239565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b600081519050620001b9816200021f565b92915050565b600060208284031215620001d257600080fd5b6000620001e284828501620001a8565b91505092915050565b6000620001f882620001ff565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200022a81620001eb565b81146200023657600080fd5b50565b613f0880620002496000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a3f4df7e11610066578063a3f4df7e1461016f578063aba287011461018d578063d2144f58146101bd578063f851a440146101ed578063ffa1ad741461020b5761009e565b8063288cdc91146100a35780632ac12622146100d35780633e1608b41461010357806352a9674b1461013357806373342d7914610151575b600080fd5b6100bd60048036038101906100b891906132bf565b610229565b6040516100ca9190613bc9565b60405180910390f35b6100ed60048036038101906100e891906132bf565b610241565b6040516100fa91906138b0565b60405180910390f35b61011d600480360381019061011891906132e8565b610261565b60405161012a91906138b0565b60405180910390f35b61013b61036a565b60405161014891906138cb565b60405180910390f35b610159610370565b60405161016691906137e2565b60405180910390f35b610177610396565b60405161018491906139c7565b60405180910390f35b6101a760048036038101906101a291906131c9565b6103cf565b6040516101b491906138b0565b60405180910390f35b6101d760048036038101906101d291906131c9565b610870565b6040516101e491906138b0565b60405180910390f35b6101f5610d11565b60405161020291906137e2565b60405180910390f35b610213610d37565b60405161022091906139c7565b60405180910390f35b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900460ff1681565b600061028061027a60005461027586610dcf565b610e91565b83610ed2565b73ffffffffffffffffffffffffffffffffffffffff168360200160208101906102a99190613177565b73ffffffffffffffffffffffffffffffffffffffff16146102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f6906139e9565b60405180910390fd5b6001600360008560000135815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001357fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a60405160405180910390a26001905092915050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600e81526020017f53776976656c2046696e616e636500000000000000000000000000000000000081525081565b600080600090505b87879050811015610861576000151588888381811061041f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002016080016020810190610438919061326d565b15151415610649576000151588888381811061047d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002016060016020810190610496919061326d565b15151415610573576105658888838181106104da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020187878481811061051a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013586868581811061055a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611027565b61056e57600080fd5b610644565b61063a8888838181106105af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002018787848181106105ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013586868581811061062f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611451565b61064357600080fd5b5b61084e565b60001515888883818110610686577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201606001602081019061069f919061326d565b1515141561077c5761076e8888838181106106e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610723577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610763577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050606002016115b1565b61077757600080fd5b61084d565b6108438888838181106107b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002018787848181106107f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610838577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611711565b61084c57600080fd5b5b5b808061085990613da7565b9150506103d7565b50600190509695505050505050565b600080600090505b87879050811015610d0257600015158888838181106108c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020160800160208101906108d9919061326d565b15151415610aea576000151588888381811061091e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002016060016020810190610937919061326d565b15151415610a1457610a0688888381811061097b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002018787848181106109bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358686858181106109fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611871565b610a0f57600080fd5b610ae5565b610adb888883818110610a50577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610a90577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610ad0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611fed565b610ae457600080fd5b5b610cef565b60001515888883818110610b27577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002016060016020810190610b40919061326d565b15151415610c1d57610c0f888883818110610b84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610bc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201612719565b610c1857600080fd5b610cee565b610ce4888883818110610c59577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610c99577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610cd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201612b79565b610ced57600080fd5b5b5b8080610cfa90613da7565b915050610878565b50600190509695505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f322e302e3000000000000000000000000000000000000000000000000000000081525081565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b60007f7ddd38ab5ed1c16b61ca90eeb9579e29da1ba821cf42d8cdef8f30a31a6a414660001b8260000135836020016020810190610e0d9190613177565b846040016020810190610e209190613177565b856060016020810190610e33919061326d565b866080016020810190610e46919061326d565b8760a001358860c001358960e001358a6101000135604051602001610e749a999897969594939291906138e6565b604051602081830303815290604052805190602001209050919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0826040013560001c1115610f3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3590613b89565b60405180910390fd5b601b826000016020810190610f53919061334f565b60ff161480610f775750601c826000016020810190610f72919061334f565b60ff16145b610fb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fad90613aa9565b60405180910390fd5b600183836000016020810190610fcc919061334f565b8460200135856040013560405160008152602001604052604051610ff39493929190613982565b6020604051602081039080840390855afa158015611015573d6000803e3d6000fd5b50505060206040510351905092915050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108d90613a49565b60405180910390fd5b4282610100013510156110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590613a09565b60405180910390fd5b6110fb6110f56000546110f085610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906111249190613177565b73ffffffffffffffffffffffffffffffffffffffff161461117a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611171906139e9565b60405180910390fd5b6004600087600001358152602001908152602001600020548660c001356111a19190613ce1565b8511156111ad57600080fd5b6000670de0b6b3a76400008760a001358860c00135670de0b6b3a7640000896111d69190613c87565b6111e09190613c56565b6111ea9190613c87565b6111f49190613c56565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c129a1c28860400160208101906112479190613177565b8960e001358a602001602081019061125f9190613177565b33866040518663ffffffff1660e01b815260040161128195949392919061385d565b602060405180830381600087803b15801561129b57600080fd5b505af11580156112af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d39190613296565b611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130990613a29565b60405180910390fd5b60008760400160208101906113279190613177565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8960200160208101906113589190613177565b338a866113659190613ce1565b6040518463ffffffff1660e01b8152600401611383939291906137fd565b602060405180830381600087803b15801561139d57600080fd5b505af11580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190613296565b611414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140b90613b09565b60405180910390fd5b86600460008a600001358152602001908152602001600020600082825461143b9190613c00565b9250508190555060019450505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff161515146114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b790613a49565b60405180910390fd5b428261010001351015611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff90613a09565b60405180910390fd5b61152561151f60005461151a85610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff1682602001602081019061154e9190613177565b73ffffffffffffffffffffffffffffffffffffffff16146115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b906139e9565b60405180910390fd5b6001925050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514611620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161790613a49565b60405180910390fd5b428261010001351015611668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165f90613a09565b60405180910390fd5b61168561167f60005461167a85610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906116ae9190613177565b73ffffffffffffffffffffffffffffffffffffffff1614611704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fb906139e9565b60405180910390fd5b6001925050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514611780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177790613a49565b60405180910390fd5b4282610100013510156117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90613a09565b60405180910390fd5b6117e56117df6000546117da85610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff1682602001602081019061180e9190613177565b73ffffffffffffffffffffffffffffffffffffffff1614611864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185b906139e9565b60405180910390fd5b6001925050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff161515146118e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d790613a49565b60405180910390fd5b428261010001351015611928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191f90613a09565b60405180910390fd5b61194561193f60005461193a85610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff1682602001602081019061196e9190613177565b73ffffffffffffffffffffffffffffffffffffffff16146119c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119bb906139e9565b60405180910390fd5b6004600087600001358152602001908152602001600020548660c001356119eb9190613ce1565b851115611a2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2490613a69565b60405180910390fd5b6000670de0b6b3a76400008760a001358860c00135670de0b6b3a764000089611a569190613c87565b611a609190613c56565b611a6a9190613c87565b611a749190613c56565b90506000876040016020810190611a8b9190613177565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd338a6020016020810190611abd9190613177565b8a6040518463ffffffff1660e01b8152600401611adc939291906137fd565b602060405180830381600087803b158015611af657600080fd5b505af1158015611b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2e9190613296565b611b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6490613b09565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd896020016020810190611b9c9190613177565b30856040518463ffffffff1660e01b8152600401611bbc939291906137fd565b602060405180830381600087803b158015611bd657600080fd5b505af1158015611bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0e9190613296565b611c4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4490613b29565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166305e1dc258b6040016020810190611ca59190613177565b8c60e001356040518363ffffffff1660e01b8152600401611cc7929190613834565b602060405180830381600087803b158015611ce157600080fd5b505af1158015611cf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1991906131a0565b90508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b382866040518363ffffffff1660e01b8152600401611d56929190613834565b602060405180830381600087803b158015611d7057600080fd5b505af1158015611d84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da89190613296565b611de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dde90613b49565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663a0712d68866040518263ffffffff1660e01b8152600401611e229190613bc9565b602060405180830381600087803b158015611e3c57600080fd5b505af1158015611e50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e749190613326565b14611eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eab90613ae9565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663f3d9b9848b6040016020810190611ee39190613177565b8c60e001358d6020016020810190611efb9190613177565b33896040518663ffffffff1660e01b8152600401611f1d95949392919061385d565b602060405180830381600087803b158015611f3757600080fd5b505af1158015611f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6f9190613296565b611fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa590613ac9565b60405180910390fd5b88600460008c6000013581526020019081526020016000206000828254611fd59190613c00565b92505081905550600196505050505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff1615151461205c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205390613a49565b60405180910390fd5b4282610100013510156120a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209b90613a09565b60405180910390fd5b6120c16120bb6000546120b685610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906120ea9190613177565b73ffffffffffffffffffffffffffffffffffffffff1614612140576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612137906139e9565b60405180910390fd5b6004600087600001358152602001908152602001600020548660a001356121679190613ce1565b8511156121a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121a090613a69565b60405180910390fd5b6000670de0b6b3a76400008760c001358860a00135670de0b6b3a7640000896121d29190613c87565b6121dc9190613c56565b6121e69190613c87565b6121f09190613c56565b905060008760400160208101906122079190613177565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8960200160208101906122389190613177565b33856040518463ffffffff1660e01b8152600401612258939291906137fd565b602060405180830381600087803b15801561227257600080fd5b505af1158015612286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122aa9190613296565b6122e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122e090613b69565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401612326939291906137fd565b602060405180830381600087803b15801561234057600080fd5b505af1158015612354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123789190613296565b6123b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123ae90613b29565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166305e1dc258b604001602081019061240f9190613177565b8c60e001356040518363ffffffff1660e01b8152600401612431929190613834565b602060405180830381600087803b15801561244b57600080fd5b505af115801561245f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061248391906131a0565b90508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3828b6040518363ffffffff1660e01b81526004016124c0929190613834565b602060405180830381600087803b1580156124da57600080fd5b505af11580156124ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125129190613296565b5060008173ffffffffffffffffffffffffffffffffffffffff1663a0712d688b6040518263ffffffff1660e01b815260040161254e9190613bc9565b602060405180830381600087803b15801561256857600080fd5b505af115801561257c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a09190613326565b146125e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125d790613ba9565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663f3d9b9848b604001602081019061260f9190613177565b8c60e001358d60200160208101906126279190613177565b338e6040518663ffffffff1660e01b815260040161264995949392919061385d565b602060405180830381600087803b15801561266357600080fd5b505af1158015612677573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269b9190613296565b6126da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d190613ac9565b60405180910390fd5b88600460008c60000135815260200190815260200160002060008282546127019190613c00565b92505081905550600196505050505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514612788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161277f90613a49565b60405180910390fd5b4282610100013510156127d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127c790613a09565b60405180910390fd5b6127ed6127e76000546127e285610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906128169190613177565b73ffffffffffffffffffffffffffffffffffffffff161461286c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612863906139e9565b60405180910390fd5b6004600087600001358152602001908152602001600020548660a001356128939190613ce1565b8511156128d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128cc90613a69565b60405180910390fd5b6000670de0b6b3a76400008760c001358860a00135670de0b6b3a7640000896128fe9190613c87565b6129089190613c56565b6129129190613c87565b61291c9190613c56565b905060008760400160208101906129339190613177565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd338a60200160208101906129659190613177565b858b6129719190613ce1565b6040518463ffffffff1660e01b815260040161298f939291906137fd565b602060405180830381600087803b1580156129a957600080fd5b505af11580156129bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e19190613296565b612a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a1790613b29565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c129a1c2896040016020810190612a719190613177565b8a60e001358b6020016020810190612a899190613177565b338c6040518663ffffffff1660e01b8152600401612aab95949392919061385d565b602060405180830381600087803b158015612ac557600080fd5b505af1158015612ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612afd9190613296565b612b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b3390613a29565b60405180910390fd5b86600460008a6000013581526020019081526020016000206000828254612b639190613c00565b9250508190555060019450505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514612be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bdf90613a49565b60405180910390fd5b428261010001351015612c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c2790613a09565b60405180910390fd5b612c4d612c47600054612c4285610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff16826020016020810190612c769190613177565b73ffffffffffffffffffffffffffffffffffffffff1614612ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cc3906139e9565b60405180910390fd5b6004600087600001358152602001908152602001600020548660c00135612cf39190613ce1565b851115612d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d2c90613a69565b60405180910390fd5b6000670de0b6b3a76400008760a001358860c00135670de0b6b3a764000089612d5e9190613c87565b612d689190613c56565b612d729190613c87565b612d7c9190613c56565b90506000876040016020810190612d939190613177565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd338a6020016020810190612dc59190613177565b8a6040518463ffffffff1660e01b8152600401612de4939291906137fd565b602060405180830381600087803b158015612dfe57600080fd5b505af1158015612e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e369190613296565b612e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e6c90613b09565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb1a0f58896040016020810190612ec69190613177565b8a60e001358b6020016020810190612ede9190613177565b33876040518663ffffffff1660e01b8152600401612f0095949392919061385d565b602060405180830381600087803b158015612f1a57600080fd5b505af1158015612f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f529190613296565b612f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f8890613a89565b60405180910390fd5b86600460008a6000013581526020019081526020016000206000828254612fb89190613c00565b9250508190555060019450505050509392505050565b600081359050612fdd81613e5f565b92915050565b600081519050612ff281613e5f565b92915050565b60008083601f84011261300a57600080fd5b8235905067ffffffffffffffff81111561302357600080fd5b60208301915083606082028301111561303b57600080fd5b9250929050565b60008083601f84011261305457600080fd5b8235905067ffffffffffffffff81111561306d57600080fd5b6020830191508361012082028301111561308657600080fd5b9250929050565b60008083601f84011261309f57600080fd5b8235905067ffffffffffffffff8111156130b857600080fd5b6020830191508360208202830111156130d057600080fd5b9250929050565b6000813590506130e681613e76565b92915050565b6000815190506130fb81613e76565b92915050565b60008135905061311081613e8d565b92915050565b60006060828403121561312857600080fd5b81905092915050565b6000610120828403121561314457600080fd5b81905092915050565b60008151905061315c81613ea4565b92915050565b60008135905061317181613ebb565b92915050565b60006020828403121561318957600080fd5b600061319784828501612fce565b91505092915050565b6000602082840312156131b257600080fd5b60006131c084828501612fe3565b91505092915050565b600080600080600080606087890312156131e257600080fd5b600087013567ffffffffffffffff8111156131fc57600080fd5b61320889828a01613042565b9650965050602087013567ffffffffffffffff81111561322757600080fd5b61323389828a0161308d565b9450945050604087013567ffffffffffffffff81111561325257600080fd5b61325e89828a01612ff8565b92509250509295509295509295565b60006020828403121561327f57600080fd5b600061328d848285016130d7565b91505092915050565b6000602082840312156132a857600080fd5b60006132b6848285016130ec565b91505092915050565b6000602082840312156132d157600080fd5b60006132df84828501613101565b91505092915050565b60008061018083850312156132fc57600080fd5b600061330a85828601613131565b92505061012061331c85828601613116565b9150509250929050565b60006020828403121561333857600080fd5b60006133468482850161314d565b91505092915050565b60006020828403121561336157600080fd5b600061336f84828501613162565b91505092915050565b61338181613d15565b82525050565b61339081613d27565b82525050565b61339f81613d33565b82525050565b60006133b082613be4565b6133ba8185613bef565b93506133ca818560208601613d74565b6133d381613e4e565b840191505092915050565b60006133eb601183613bef565b91507f696e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b600061342b600d83613bef565b91507f6f726465722065787069726564000000000000000000000000000000000000006000830152602082019050919050565b600061346b601783613bef565b91507f5a43546f6b656e207472616e73666572206661696c65640000000000000000006000830152602082019050919050565b60006134ab600f83613bef565b91507f6f726465722063616e63656c6c656400000000000000000000000000000000006000830152602082019050919050565b60006134eb601f83613bef565b91507f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006000830152602082019050919050565b600061352b601883613bef565b91507f6e6f74696f6e616c207472616e73666572206661696c656400000000000000006000830152602082019050919050565b600061356b601b83613bef565b91507f696e76616c6964207369676e6174757265202276222076616c756500000000006000830152602082019050919050565b60006135ab601683613bef565b91507f6d696e74696e67205a43546f6b656e206661696c6564000000000000000000006000830152602082019050919050565b60006135eb601583613bef565b91507f6d696e74696e672043546f6b656e206661696c656400000000000000000000006000830152602082019050919050565b600061362b601783613bef565b91507f7072656d69756d207472616e73666572206661696c65640000000000000000006000830152602082019050919050565b600061366b601983613bef565b91507f7072696e636970616c207472616e73666572206661696c6564000000000000006000830152602082019050919050565b60006136ab602483613bef565b91507f756e6465726c79696e6720617070726f76616c2061742043546f6b656e20666160008301527f696c6564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613711601883613bef565b91507f696e746572657374207472616e73666572206661696c656400000000000000006000830152602082019050919050565b6000613751601b83613bef565b91507f696e76616c6964207369676e6174757265202273222076616c756500000000006000830152602082019050919050565b6000613791601583613bef565b91507f6d696e74696e672043546f6b656e204661696c656400000000000000000000006000830152602082019050919050565b6137cd81613d5d565b82525050565b6137dc81613d67565b82525050565b60006020820190506137f76000830184613378565b92915050565b60006060820190506138126000830186613378565b61381f6020830185613378565b61382c60408301846137c4565b949350505050565b60006040820190506138496000830185613378565b61385660208301846137c4565b9392505050565b600060a0820190506138726000830188613378565b61387f60208301876137c4565b61388c6040830186613378565b6138996060830185613378565b6138a660808301846137c4565b9695505050505050565b60006020820190506138c56000830184613387565b92915050565b60006020820190506138e06000830184613396565b92915050565b6000610140820190506138fc600083018d613396565b613909602083018c613396565b613916604083018b613378565b613923606083018a613378565b6139306080830189613387565b61393d60a0830188613387565b61394a60c08301876137c4565b61395760e08301866137c4565b6139656101008301856137c4565b6139736101208301846137c4565b9b9a5050505050505050505050565b60006080820190506139976000830187613396565b6139a460208301866137d3565b6139b16040830185613396565b6139be6060830184613396565b95945050505050565b600060208201905081810360008301526139e181846133a5565b905092915050565b60006020820190508181036000830152613a02816133de565b9050919050565b60006020820190508181036000830152613a228161341e565b9050919050565b60006020820190508181036000830152613a428161345e565b9050919050565b60006020820190508181036000830152613a628161349e565b9050919050565b60006020820190508181036000830152613a82816134de565b9050919050565b60006020820190508181036000830152613aa28161351e565b9050919050565b60006020820190508181036000830152613ac28161355e565b9050919050565b60006020820190508181036000830152613ae28161359e565b9050919050565b60006020820190508181036000830152613b02816135de565b9050919050565b60006020820190508181036000830152613b228161361e565b9050919050565b60006020820190508181036000830152613b428161365e565b9050919050565b60006020820190508181036000830152613b628161369e565b9050919050565b60006020820190508181036000830152613b8281613704565b9050919050565b60006020820190508181036000830152613ba281613744565b9050919050565b60006020820190508181036000830152613bc281613784565b9050919050565b6000602082019050613bde60008301846137c4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000613c0b82613d5d565b9150613c1683613d5d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c4b57613c4a613df0565b5b828201905092915050565b6000613c6182613d5d565b9150613c6c83613d5d565b925082613c7c57613c7b613e1f565b5b828204905092915050565b6000613c9282613d5d565b9150613c9d83613d5d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613cd657613cd5613df0565b5b828202905092915050565b6000613cec82613d5d565b9150613cf783613d5d565b925082821015613d0a57613d09613df0565b5b828203905092915050565b6000613d2082613d3d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015613d92578082015181840152602081019050613d77565b83811115613da1576000848401525b50505050565b6000613db282613d5d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613de557613de4613df0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b613e6881613d15565b8114613e7357600080fd5b50565b613e7f81613d27565b8114613e8a57600080fd5b50565b613e9681613d33565b8114613ea157600080fd5b50565b613ead81613d5d565b8114613eb857600080fd5b50565b613ec481613d67565b8114613ecf57600080fd5b5056fea264697066735822122043f12e30196840b2143b44264d659d5e528a491e04a0eda1ec1d36365acc2e3364736f6c63430008000033"

// DeploySwivel deploys a new Ethereum contract, binding an instance of Swivel to it.
func DeploySwivel(auth *bind.TransactOpts, backend bind.ContractBackend, m common.Address) (common.Address, *types.Transaction, *Swivel, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SwivelBin), backend, m)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// Swivel is an auto generated Go binding around an Ethereum contract.
type Swivel struct {
	SwivelCaller     // Read-only binding to the contract
	SwivelTransactor // Write-only binding to the contract
	SwivelFilterer   // Log filterer for contract events
}

// SwivelCaller is an auto generated read-only Go binding around an Ethereum contract.
type SwivelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SwivelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwivelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwivelSession struct {
	Contract     *Swivel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwivelCallerSession struct {
	Contract *SwivelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SwivelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwivelTransactorSession struct {
	Contract     *SwivelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelRaw is an auto generated low-level Go binding around an Ethereum contract.
type SwivelRaw struct {
	Contract *Swivel // Generic contract binding to access the raw methods on
}

// SwivelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwivelCallerRaw struct {
	Contract *SwivelCaller // Generic read-only contract binding to access the raw methods on
}

// SwivelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwivelTransactorRaw struct {
	Contract *SwivelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSwivel creates a new instance of Swivel, bound to a specific deployed contract.
func NewSwivel(address common.Address, backend bind.ContractBackend) (*Swivel, error) {
	contract, err := bindSwivel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// NewSwivelCaller creates a new read-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelCaller(address common.Address, caller bind.ContractCaller) (*SwivelCaller, error) {
	contract, err := bindSwivel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelCaller{contract: contract}, nil
}

// NewSwivelTransactor creates a new write-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelTransactor(address common.Address, transactor bind.ContractTransactor) (*SwivelTransactor, error) {
	contract, err := bindSwivel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelTransactor{contract: contract}, nil
}

// NewSwivelFilterer creates a new log filterer instance of Swivel, bound to a specific deployed contract.
func NewSwivelFilterer(address common.Address, filterer bind.ContractFilterer) (*SwivelFilterer, error) {
	contract, err := bindSwivel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwivelFilterer{contract: contract}, nil
}

// bindSwivel binds a generic wrapper to an already deployed contract.
func bindSwivel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.SwivelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transact(opts, method, params...)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCaller) DOMAIN(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "DOMAIN")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCallerSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCaller) NAME(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "NAME")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCallerSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCallerSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCallerSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCaller) Cancelled(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "cancelled", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCallerSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCaller) Filled(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "filled", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// MarketPlaceAddr is a free data retrieval call binding the contract method 0x73342d79.
//
// Solidity: function marketPlaceAddr() view returns(address)
func (_Swivel *SwivelCaller) MarketPlaceAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "marketPlaceAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlaceAddr is a free data retrieval call binding the contract method 0x73342d79.
//
// Solidity: function marketPlaceAddr() view returns(address)
func (_Swivel *SwivelSession) MarketPlaceAddr() (common.Address, error) {
	return _Swivel.Contract.MarketPlaceAddr(&_Swivel.CallOpts)
}

// MarketPlaceAddr is a free data retrieval call binding the contract method 0x73342d79.
//
// Solidity: function marketPlaceAddr() view returns(address)
func (_Swivel *SwivelCallerSession) MarketPlaceAddr() (common.Address, error) {
	return _Swivel.Contract.MarketPlaceAddr(&_Swivel.CallOpts)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) Cancel(opts *bind.TransactOpts, o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "cancel", o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Exit(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "exit", o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Initiate(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "initiate", o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// SwivelCancelIterator is returned from FilterCancel and is used to iterate over the raw logs and unpacked data for Cancel events raised by the Swivel contract.
type SwivelCancelIterator struct {
	Event *SwivelCancel // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelCancelIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelCancel)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelCancel)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelCancelIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelCancelIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelCancel represents a Cancel event raised by the Swivel contract.
type SwivelCancel struct {
	Key [32]byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterCancel is a free log retrieval operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) FilterCancel(opts *bind.FilterOpts, key [][32]byte) (*SwivelCancelIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelCancelIterator{contract: _Swivel.contract, event: "Cancel", logs: logs, sub: sub}, nil
}

// WatchCancel is a free log subscription operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) WatchCancel(opts *bind.WatchOpts, sink chan<- *SwivelCancel, key [][32]byte) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelCancel)
				if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCancel is a log parse operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) ParseCancel(log types.Log) (*SwivelCancel, error) {
	event := new(SwivelCancel)
	if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
