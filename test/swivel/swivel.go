// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package swivel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashOrder is an auto generated low-level Go binding around an user-defined struct.
type HashOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// SigComponents is an auto generated low-level Go binding around an user-defined struct.
type SigComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelABI is the input ABI used to generate the binding from.
const SwivelABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"initiate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlaceAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// SwivelBin is the compiled bytecode used for deploying new contracts.
var SwivelBin = "0x60806040523480156200001157600080fd5b506040516200447c3803806200447c8339818101604052810190620000379190620001bf565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000fb6040518060400160405280600e81526020017f53776976656c2046696e616e63650000000000000000000000000000000000008152506040518060400160405280600581526020017f322e302e3000000000000000000000000000000000000000000000000000000081525046306200014960201b62000d701760201c565b60008190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000239565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b600081519050620001b9816200021f565b92915050565b600060208284031215620001d257600080fd5b6000620001e284828501620001a8565b91505092915050565b6000620001f882620001ff565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200022a81620001eb565b81146200023657600080fd5b50565b61423380620002496000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a3f4df7e11610066578063a3f4df7e1461016f578063aba287011461018d578063d2144f58146101bd578063f851a440146101ed578063ffa1ad741461020b5761009e565b8063288cdc91146100a35780632ac12622146100d35780633e1608b41461010357806352a9674b1461013357806373342d7914610151575b600080fd5b6100bd60048036038101906100b891906135ea565b610229565b6040516100ca9190613ef4565b60405180910390f35b6100ed60048036038101906100e891906135ea565b610241565b6040516100fa9190613bdb565b60405180910390f35b61011d60048036038101906101189190613613565b610261565b60405161012a9190613bdb565b60405180910390f35b61013b61036a565b6040516101489190613bf6565b60405180910390f35b610159610370565b6040516101669190613b0d565b60405180910390f35b610177610396565b6040516101849190613cf2565b60405180910390f35b6101a760048036038101906101a291906134f4565b6103cf565b6040516101b49190613bdb565b60405180910390f35b6101d760048036038101906101d291906134f4565b610870565b6040516101e49190613bdb565b60405180910390f35b6101f5610d11565b6040516102029190613b0d565b60405180910390f35b610213610d37565b6040516102209190613cf2565b60405180910390f35b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900460ff1681565b600061028061027a60005461027586610dcf565b610e91565b83610ed2565b73ffffffffffffffffffffffffffffffffffffffff168360200160208101906102a991906134a2565b73ffffffffffffffffffffffffffffffffffffffff16146102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f690613d14565b60405180910390fd5b6001600360008560000135815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001357fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a60405160405180910390a26001905092915050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600e81526020017f53776976656c2046696e616e636500000000000000000000000000000000000081525081565b600080600090505b87879050811015610861576000151588888381811061041f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020160800160208101906104389190613598565b15151415610649576000151588888381811061047d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020160600160208101906104969190613598565b15151415610573576105658888838181106104da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020187878481811061051a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013586868581811061055a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611027565b61056e57600080fd5b610644565b61063a8888838181106105af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002018787848181106105ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013586868581811061062f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611487565b61064357600080fd5b5b61084e565b60001515888883818110610686577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201606001602081019061069f9190613598565b1515141561077c5761076e8888838181106106e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610723577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610763577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050606002016118dc565b61077757600080fd5b61084d565b6108438888838181106107b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002018787848181106107f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610838577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611a3c565b61084c57600080fd5b5b5b8080610859906140d2565b9150506103d7565b50600190509695505050505050565b600080600090505b87879050811015610d0257600015158888838181106108c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020160800160208101906108d99190613598565b15151415610aea576000151588888381811061091e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050610120020160600160208101906109379190613598565b15151415610a1457610a0688888381811061097b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002018787848181106109bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358686858181106109fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201611b9c565b610a0f57600080fd5b610ae5565b610adb888883818110610a50577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610a90577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610ad0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201612318565b610ae457600080fd5b5b610cef565b60001515888883818110610b27577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061012002016060016020810190610b409190613598565b15151415610c1d57610c0f888883818110610b84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610bc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201612a44565b610c1857600080fd5b610cee565b610ce4888883818110610c59577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101200201878784818110610c99577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135868685818110610cd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201612ea4565b610ced57600080fd5b5b5b8080610cfa906140d2565b915050610878565b50600190509695505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f322e302e3000000000000000000000000000000000000000000000000000000081525081565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b60007f7ddd38ab5ed1c16b61ca90eeb9579e29da1ba821cf42d8cdef8f30a31a6a414660001b8260000135836020016020810190610e0d91906134a2565b846040016020810190610e2091906134a2565b856060016020810190610e339190613598565b866080016020810190610e469190613598565b8760a001358860c001358960e001358a6101000135604051602001610e749a99989796959493929190613c11565b604051602081830303815290604052805190602001209050919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0826040013560001c1115610f3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3590613eb4565b60405180910390fd5b601b826000016020810190610f53919061367a565b60ff161480610f775750601c826000016020810190610f72919061367a565b60ff16145b610fb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fad90613dd4565b60405180910390fd5b600183836000016020810190610fcc919061367a565b8460200135856040013560405160008152602001604052604051610ff39493929190613cad565b6020604051602081039080840390855afa158015611015573d6000803e3d6000fd5b50505060206040510351905092915050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108d90613d74565b60405180910390fd5b4282610100013510156110de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d590613d34565b60405180910390fd5b6110fb6110f56000546110f085610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff1682602001602081019061112491906134a2565b73ffffffffffffffffffffffffffffffffffffffff161461117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117190613d14565b60405180910390fd5b6004600087600001358152602001908152602001600020548660c001356111a1919061400c565b8511156111e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111da90613d94565b60405180910390fd5b6000670de0b6b3a76400008760a001358860c00135670de0b6b3a76400008961120c9190613fb2565b6112169190613f81565b6112209190613fb2565b61122a9190613f81565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c129a1c288604001602081019061127d91906134a2565b8960e001358a602001602081019061129591906134a2565b33866040518663ffffffff1660e01b81526004016112b7959493929190613b88565b602060405180830381600087803b1580156112d157600080fd5b505af11580156112e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130991906135c1565b611348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133f90613d54565b60405180910390fd5b600087604001602081019061135d91906134a2565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd89602001602081019061138e91906134a2565b338a8661139b919061400c565b6040518463ffffffff1660e01b81526004016113b993929190613b28565b602060405180830381600087803b1580156113d357600080fd5b505af11580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b91906135c1565b61144a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144190613e34565b60405180910390fd5b86600460008a60000135815260200190815260200160002060008282546114719190613f2b565b9250508190555060019450505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff161515146114f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ed90613d74565b60405180910390fd5b42826101000135101561153e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153590613d34565b60405180910390fd5b61155b61155560005461155085610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff1682602001602081019061158491906134a2565b73ffffffffffffffffffffffffffffffffffffffff16146115da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d190613d14565b60405180910390fd5b6004600087600001358152602001908152602001600020548660a00135611601919061400c565b851115611643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163a90613d94565b60405180910390fd5b6000670de0b6b3a76400008760c001358860a00135670de0b6b3a76400008961166c9190613fb2565b6116769190613f81565b6116809190613fb2565b61168a9190613f81565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb1a0f588860400160208101906116dd91906134a2565b8960e001358a60200160208101906116f591906134a2565b338b6040518663ffffffff1660e01b8152600401611717959493929190613b88565b602060405180830381600087803b15801561173157600080fd5b505af1158015611745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176991906135c1565b6117a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179f90613db4565b60405180910390fd5b60008760400160208101906117bd91906134a2565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8960200160208101906117ee91906134a2565b33856040518463ffffffff1660e01b815260040161180e93929190613b28565b602060405180830381600087803b15801561182857600080fd5b505af115801561183c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186091906135c1565b61189f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189690613e54565b60405180910390fd5b86600460008a60000135815260200190815260200160002060008282546118c69190613f2b565b9250508190555060019450505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff1615151461194b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194290613d74565b60405180910390fd5b428261010001351015611993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198a90613d34565b60405180910390fd5b6119b06119aa6000546119a585610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906119d991906134a2565b73ffffffffffffffffffffffffffffffffffffffff1614611a2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2690613d14565b60405180910390fd5b6001925050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514611aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa290613d74565b60405180910390fd5b428261010001351015611af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aea90613d34565b60405180910390fd5b611b10611b0a600054611b0585610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff16826020016020810190611b3991906134a2565b73ffffffffffffffffffffffffffffffffffffffff1614611b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8690613d14565b60405180910390fd5b6001925050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514611c0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0290613d74565b60405180910390fd5b428261010001351015611c53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4a90613d34565b60405180910390fd5b611c70611c6a600054611c6585610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff16826020016020810190611c9991906134a2565b73ffffffffffffffffffffffffffffffffffffffff1614611cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce690613d14565b60405180910390fd5b6004600087600001358152602001908152602001600020548660c00135611d16919061400c565b851115611d58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4f90613d94565b60405180910390fd5b6000670de0b6b3a76400008760a001358860c00135670de0b6b3a764000089611d819190613fb2565b611d8b9190613f81565b611d959190613fb2565b611d9f9190613f81565b90506000876040016020810190611db691906134a2565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd338a6020016020810190611de891906134a2565b8a6040518463ffffffff1660e01b8152600401611e0793929190613b28565b602060405180830381600087803b158015611e2157600080fd5b505af1158015611e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5991906135c1565b611e98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8f90613e34565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd896020016020810190611ec791906134a2565b30856040518463ffffffff1660e01b8152600401611ee793929190613b28565b602060405180830381600087803b158015611f0157600080fd5b505af1158015611f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3991906135c1565b611f78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6f90613e54565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166305e1dc258b6040016020810190611fd091906134a2565b8c60e001356040518363ffffffff1660e01b8152600401611ff2929190613b5f565b602060405180830381600087803b15801561200c57600080fd5b505af1158015612020573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204491906134cb565b90508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b382866040518363ffffffff1660e01b8152600401612081929190613b5f565b602060405180830381600087803b15801561209b57600080fd5b505af11580156120af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d391906135c1565b612112576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210990613e74565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663a0712d68866040518263ffffffff1660e01b815260040161214d9190613ef4565b602060405180830381600087803b15801561216757600080fd5b505af115801561217b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219f9190613651565b146121df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d690613e14565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663f3d9b9848b604001602081019061220e91906134a2565b8c60e001358d602001602081019061222691906134a2565b33896040518663ffffffff1660e01b8152600401612248959493929190613b88565b602060405180830381600087803b15801561226257600080fd5b505af1158015612276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229a91906135c1565b6122d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d090613df4565b60405180910390fd5b88600460008c60000135815260200190815260200160002060008282546123009190613f2b565b92505081905550600196505050505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514612387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237e90613d74565b60405180910390fd5b4282610100013510156123cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c690613d34565b60405180910390fd5b6123ec6123e66000546123e185610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff1682602001602081019061241591906134a2565b73ffffffffffffffffffffffffffffffffffffffff161461246b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246290613d14565b60405180910390fd5b6004600087600001358152602001908152602001600020548660a00135612492919061400c565b8511156124d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124cb90613d94565b60405180910390fd5b6000670de0b6b3a76400008760c001358860a00135670de0b6b3a7640000896124fd9190613fb2565b6125079190613f81565b6125119190613fb2565b61251b9190613f81565b9050600087604001602081019061253291906134a2565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd89602001602081019061256391906134a2565b33856040518463ffffffff1660e01b815260040161258393929190613b28565b602060405180830381600087803b15801561259d57600080fd5b505af11580156125b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d591906135c1565b612614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161260b90613e94565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b815260040161265193929190613b28565b602060405180830381600087803b15801561266b57600080fd5b505af115801561267f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a391906135c1565b6126e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d990613e54565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166305e1dc258b604001602081019061273a91906134a2565b8c60e001356040518363ffffffff1660e01b815260040161275c929190613b5f565b602060405180830381600087803b15801561277657600080fd5b505af115801561278a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ae91906134cb565b90508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3828b6040518363ffffffff1660e01b81526004016127eb929190613b5f565b602060405180830381600087803b15801561280557600080fd5b505af1158015612819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283d91906135c1565b5060008173ffffffffffffffffffffffffffffffffffffffff1663a0712d688b6040518263ffffffff1660e01b81526004016128799190613ef4565b602060405180830381600087803b15801561289357600080fd5b505af11580156128a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128cb9190613651565b1461290b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161290290613ed4565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663f3d9b9848b604001602081019061293a91906134a2565b8c60e001358d602001602081019061295291906134a2565b338e6040518663ffffffff1660e01b8152600401612974959493929190613b88565b602060405180830381600087803b15801561298e57600080fd5b505af11580156129a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c691906135c1565b612a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129fc90613df4565b60405180910390fd5b88600460008c6000013581526020019081526020016000206000828254612a2c9190613f2b565b92505081905550600196505050505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514612ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aaa90613d74565b60405180910390fd5b428261010001351015612afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612af290613d34565b60405180910390fd5b612b18612b12600054612b0d85610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff16826020016020810190612b4191906134a2565b73ffffffffffffffffffffffffffffffffffffffff1614612b97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b8e90613d14565b60405180910390fd5b6004600087600001358152602001908152602001600020548660a00135612bbe919061400c565b851115612c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bf790613d94565b60405180910390fd5b6000670de0b6b3a76400008760c001358860a00135670de0b6b3a764000089612c299190613fb2565b612c339190613f81565b612c3d9190613fb2565b612c479190613f81565b90506000876040016020810190612c5e91906134a2565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd338a6020016020810190612c9091906134a2565b858b612c9c919061400c565b6040518463ffffffff1660e01b8152600401612cba93929190613b28565b602060405180830381600087803b158015612cd457600080fd5b505af1158015612ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d0c91906135c1565b612d4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d4290613e54565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c129a1c2896040016020810190612d9c91906134a2565b8a60e001358b6020016020810190612db491906134a2565b338c6040518663ffffffff1660e01b8152600401612dd6959493929190613b88565b602060405180830381600087803b158015612df057600080fd5b505af1158015612e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e2891906135c1565b612e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e5e90613d54565b60405180910390fd5b86600460008a6000013581526020019081526020016000206000828254612e8e9190613f2b565b9250508190555060019450505050509392505050565b6000838260001515600360008460000135815260200190815260200160002060009054906101000a900460ff16151514612f13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f0a90613d74565b60405180910390fd5b428261010001351015612f5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f5290613d34565b60405180910390fd5b612f78612f72600054612f6d85610dcf565b610e91565b82610ed2565b73ffffffffffffffffffffffffffffffffffffffff16826020016020810190612fa191906134a2565b73ffffffffffffffffffffffffffffffffffffffff1614612ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fee90613d14565b60405180910390fd5b6004600087600001358152602001908152602001600020548660c0013561301e919061400c565b851115613060576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161305790613d94565b60405180910390fd5b6000670de0b6b3a76400008760a001358860c00135670de0b6b3a7640000896130899190613fb2565b6130939190613f81565b61309d9190613fb2565b6130a79190613f81565b905060008760400160208101906130be91906134a2565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd338a60200160208101906130f091906134a2565b8a6040518463ffffffff1660e01b815260040161310f93929190613b28565b602060405180830381600087803b15801561312957600080fd5b505af115801561313d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061316191906135c1565b6131a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161319790613e34565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb1a0f588960400160208101906131f191906134a2565b8a60e001358b602001602081019061320991906134a2565b33876040518663ffffffff1660e01b815260040161322b959493929190613b88565b602060405180830381600087803b15801561324557600080fd5b505af1158015613259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061327d91906135c1565b6132bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132b390613db4565b60405180910390fd5b86600460008a60000135815260200190815260200160002060008282546132e39190613f2b565b9250508190555060019450505050509392505050565b6000813590506133088161418a565b92915050565b60008151905061331d8161418a565b92915050565b60008083601f84011261333557600080fd5b8235905067ffffffffffffffff81111561334e57600080fd5b60208301915083606082028301111561336657600080fd5b9250929050565b60008083601f84011261337f57600080fd5b8235905067ffffffffffffffff81111561339857600080fd5b602083019150836101208202830111156133b157600080fd5b9250929050565b60008083601f8401126133ca57600080fd5b8235905067ffffffffffffffff8111156133e357600080fd5b6020830191508360208202830111156133fb57600080fd5b9250929050565b600081359050613411816141a1565b92915050565b600081519050613426816141a1565b92915050565b60008135905061343b816141b8565b92915050565b60006060828403121561345357600080fd5b81905092915050565b6000610120828403121561346f57600080fd5b81905092915050565b600081519050613487816141cf565b92915050565b60008135905061349c816141e6565b92915050565b6000602082840312156134b457600080fd5b60006134c2848285016132f9565b91505092915050565b6000602082840312156134dd57600080fd5b60006134eb8482850161330e565b91505092915050565b6000806000806000806060878903121561350d57600080fd5b600087013567ffffffffffffffff81111561352757600080fd5b61353389828a0161336d565b9650965050602087013567ffffffffffffffff81111561355257600080fd5b61355e89828a016133b8565b9450945050604087013567ffffffffffffffff81111561357d57600080fd5b61358989828a01613323565b92509250509295509295509295565b6000602082840312156135aa57600080fd5b60006135b884828501613402565b91505092915050565b6000602082840312156135d357600080fd5b60006135e184828501613417565b91505092915050565b6000602082840312156135fc57600080fd5b600061360a8482850161342c565b91505092915050565b600080610180838503121561362757600080fd5b60006136358582860161345c565b92505061012061364785828601613441565b9150509250929050565b60006020828403121561366357600080fd5b600061367184828501613478565b91505092915050565b60006020828403121561368c57600080fd5b600061369a8482850161348d565b91505092915050565b6136ac81614040565b82525050565b6136bb81614052565b82525050565b6136ca8161405e565b82525050565b60006136db82613f0f565b6136e58185613f1a565b93506136f581856020860161409f565b6136fe81614179565b840191505092915050565b6000613716601183613f1a565b91507f696e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b6000613756600d83613f1a565b91507f6f726465722065787069726564000000000000000000000000000000000000006000830152602082019050919050565b6000613796601783613f1a565b91507f5a43546f6b656e207472616e73666572206661696c65640000000000000000006000830152602082019050919050565b60006137d6600f83613f1a565b91507f6f726465722063616e63656c6c656400000000000000000000000000000000006000830152602082019050919050565b6000613816601f83613f1a565b91507f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006000830152602082019050919050565b6000613856601883613f1a565b91507f6e6f74696f6e616c207472616e73666572206661696c656400000000000000006000830152602082019050919050565b6000613896601b83613f1a565b91507f696e76616c6964207369676e6174757265202276222076616c756500000000006000830152602082019050919050565b60006138d6601683613f1a565b91507f6d696e74696e67205a43546f6b656e206661696c6564000000000000000000006000830152602082019050919050565b6000613916601583613f1a565b91507f6d696e74696e672043546f6b656e206661696c656400000000000000000000006000830152602082019050919050565b6000613956601783613f1a565b91507f7072656d69756d207472616e73666572206661696c65640000000000000000006000830152602082019050919050565b6000613996601983613f1a565b91507f7072696e636970616c207472616e73666572206661696c6564000000000000006000830152602082019050919050565b60006139d6602483613f1a565b91507f756e6465726c79696e6720617070726f76616c2061742043546f6b656e20666160008301527f696c6564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a3c601883613f1a565b91507f696e746572657374207472616e73666572206661696c656400000000000000006000830152602082019050919050565b6000613a7c601b83613f1a565b91507f696e76616c6964207369676e6174757265202273222076616c756500000000006000830152602082019050919050565b6000613abc601583613f1a565b91507f6d696e74696e672043546f6b656e204661696c656400000000000000000000006000830152602082019050919050565b613af881614088565b82525050565b613b0781614092565b82525050565b6000602082019050613b2260008301846136a3565b92915050565b6000606082019050613b3d60008301866136a3565b613b4a60208301856136a3565b613b576040830184613aef565b949350505050565b6000604082019050613b7460008301856136a3565b613b816020830184613aef565b9392505050565b600060a082019050613b9d60008301886136a3565b613baa6020830187613aef565b613bb760408301866136a3565b613bc460608301856136a3565b613bd16080830184613aef565b9695505050505050565b6000602082019050613bf060008301846136b2565b92915050565b6000602082019050613c0b60008301846136c1565b92915050565b600061014082019050613c27600083018d6136c1565b613c34602083018c6136c1565b613c41604083018b6136a3565b613c4e606083018a6136a3565b613c5b60808301896136b2565b613c6860a08301886136b2565b613c7560c0830187613aef565b613c8260e0830186613aef565b613c90610100830185613aef565b613c9e610120830184613aef565b9b9a5050505050505050505050565b6000608082019050613cc260008301876136c1565b613ccf6020830186613afe565b613cdc60408301856136c1565b613ce960608301846136c1565b95945050505050565b60006020820190508181036000830152613d0c81846136d0565b905092915050565b60006020820190508181036000830152613d2d81613709565b9050919050565b60006020820190508181036000830152613d4d81613749565b9050919050565b60006020820190508181036000830152613d6d81613789565b9050919050565b60006020820190508181036000830152613d8d816137c9565b9050919050565b60006020820190508181036000830152613dad81613809565b9050919050565b60006020820190508181036000830152613dcd81613849565b9050919050565b60006020820190508181036000830152613ded81613889565b9050919050565b60006020820190508181036000830152613e0d816138c9565b9050919050565b60006020820190508181036000830152613e2d81613909565b9050919050565b60006020820190508181036000830152613e4d81613949565b9050919050565b60006020820190508181036000830152613e6d81613989565b9050919050565b60006020820190508181036000830152613e8d816139c9565b9050919050565b60006020820190508181036000830152613ead81613a2f565b9050919050565b60006020820190508181036000830152613ecd81613a6f565b9050919050565b60006020820190508181036000830152613eed81613aaf565b9050919050565b6000602082019050613f096000830184613aef565b92915050565b600081519050919050565b600082825260208201905092915050565b6000613f3682614088565b9150613f4183614088565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613f7657613f7561411b565b5b828201905092915050565b6000613f8c82614088565b9150613f9783614088565b925082613fa757613fa661414a565b5b828204905092915050565b6000613fbd82614088565b9150613fc883614088565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156140015761400061411b565b5b828202905092915050565b600061401782614088565b915061402283614088565b9250828210156140355761403461411b565b5b828203905092915050565b600061404b82614068565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156140bd5780820151818401526020810190506140a2565b838111156140cc576000848401525b50505050565b60006140dd82614088565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156141105761410f61411b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61419381614040565b811461419e57600080fd5b50565b6141aa81614052565b81146141b557600080fd5b50565b6141c18161405e565b81146141cc57600080fd5b50565b6141d881614088565b81146141e357600080fd5b50565b6141ef81614092565b81146141fa57600080fd5b5056fea2646970667358221220ba8483731b2b68782b852316eddad08633f5033a996e70be305acf021ab38ad464736f6c63430008000033"

// DeploySwivel deploys a new Ethereum contract, binding an instance of Swivel to it.
func DeploySwivel(auth *bind.TransactOpts, backend bind.ContractBackend, m common.Address) (common.Address, *types.Transaction, *Swivel, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SwivelBin), backend, m)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// Swivel is an auto generated Go binding around an Ethereum contract.
type Swivel struct {
	SwivelCaller     // Read-only binding to the contract
	SwivelTransactor // Write-only binding to the contract
	SwivelFilterer   // Log filterer for contract events
}

// SwivelCaller is an auto generated read-only Go binding around an Ethereum contract.
type SwivelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SwivelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwivelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwivelSession struct {
	Contract     *Swivel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwivelCallerSession struct {
	Contract *SwivelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SwivelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwivelTransactorSession struct {
	Contract     *SwivelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelRaw is an auto generated low-level Go binding around an Ethereum contract.
type SwivelRaw struct {
	Contract *Swivel // Generic contract binding to access the raw methods on
}

// SwivelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwivelCallerRaw struct {
	Contract *SwivelCaller // Generic read-only contract binding to access the raw methods on
}

// SwivelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwivelTransactorRaw struct {
	Contract *SwivelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSwivel creates a new instance of Swivel, bound to a specific deployed contract.
func NewSwivel(address common.Address, backend bind.ContractBackend) (*Swivel, error) {
	contract, err := bindSwivel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// NewSwivelCaller creates a new read-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelCaller(address common.Address, caller bind.ContractCaller) (*SwivelCaller, error) {
	contract, err := bindSwivel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelCaller{contract: contract}, nil
}

// NewSwivelTransactor creates a new write-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelTransactor(address common.Address, transactor bind.ContractTransactor) (*SwivelTransactor, error) {
	contract, err := bindSwivel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelTransactor{contract: contract}, nil
}

// NewSwivelFilterer creates a new log filterer instance of Swivel, bound to a specific deployed contract.
func NewSwivelFilterer(address common.Address, filterer bind.ContractFilterer) (*SwivelFilterer, error) {
	contract, err := bindSwivel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwivelFilterer{contract: contract}, nil
}

// bindSwivel binds a generic wrapper to an already deployed contract.
func bindSwivel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.SwivelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transact(opts, method, params...)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCaller) DOMAIN(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "DOMAIN")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCallerSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCaller) NAME(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "NAME")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCallerSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCallerSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCallerSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCaller) Cancelled(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "cancelled", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCallerSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCaller) Filled(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "filled", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// MarketPlaceAddr is a free data retrieval call binding the contract method 0x73342d79.
//
// Solidity: function marketPlaceAddr() view returns(address)
func (_Swivel *SwivelCaller) MarketPlaceAddr(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "marketPlaceAddr")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlaceAddr is a free data retrieval call binding the contract method 0x73342d79.
//
// Solidity: function marketPlaceAddr() view returns(address)
func (_Swivel *SwivelSession) MarketPlaceAddr() (common.Address, error) {
	return _Swivel.Contract.MarketPlaceAddr(&_Swivel.CallOpts)
}

// MarketPlaceAddr is a free data retrieval call binding the contract method 0x73342d79.
//
// Solidity: function marketPlaceAddr() view returns(address)
func (_Swivel *SwivelCallerSession) MarketPlaceAddr() (common.Address, error) {
	return _Swivel.Contract.MarketPlaceAddr(&_Swivel.CallOpts)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) Cancel(opts *bind.TransactOpts, o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "cancel", o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Exit(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "exit", o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Initiate(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "initiate", o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// SwivelCancelIterator is returned from FilterCancel and is used to iterate over the raw logs and unpacked data for Cancel events raised by the Swivel contract.
type SwivelCancelIterator struct {
	Event *SwivelCancel // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelCancelIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelCancel)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelCancel)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelCancelIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelCancelIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelCancel represents a Cancel event raised by the Swivel contract.
type SwivelCancel struct {
	Key [32]byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterCancel is a free log retrieval operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) FilterCancel(opts *bind.FilterOpts, key [][32]byte) (*SwivelCancelIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelCancelIterator{contract: _Swivel.contract, event: "Cancel", logs: logs, sub: sub}, nil
}

// WatchCancel is a free log subscription operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) WatchCancel(opts *bind.WatchOpts, sink chan<- *SwivelCancel, key [][32]byte) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelCancel)
				if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCancel is a log parse operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) ParseCancel(log types.Log) (*SwivelCancel, error) {
	event := new(SwivelCancel)
	if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
