// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package swivel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashOrder is an auto generated low-level Go binding around an user-defined struct.
type HashOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// SigComponents is an auto generated low-level Go binding around an user-defined struct.
type SigComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelABI is the input ABI used to generate the binding from.
const SwivelABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"}],\"name\":\"Exit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"}],\"name\":\"Initiate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hold\",\"type\":\"uint256\"}],\"name\":\"WithdrawalScheduled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"blockWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"combineTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fenominator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"initiate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"}],\"name\":\"redeemVaultInterest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"redeemZcToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"scheduleWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"t\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"d\",\"type\":\"uint16\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"splitUnderlying\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// SwivelBin is the compiled bytecode used for deploying new contracts.
var SwivelBin = "0x60e06040523480156200001157600080fd5b50604051620054a2380380620054a2833981016040819052620000349162000206565b3360601b60c052604080518082018252600e81526d53776976656c2046696e616e636560901b602080830191909152825180840190935260058352640322e302e360dc1b838201526200009592904690309062001caa620000e8821b17901c565b6080908152606082811b6001600160601b03191660a05260408051928301815260c880845261025860208501526101909184019190915290820152620000e09060039060046200013f565b505062000236565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b82805482825590600052602060002090600f01601090048101928215620001dd5791602002820160005b83821115620001ab57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000169565b8015620001db5782816101000a81549061ffff0219169055600201602081600101049283019260010302620001ab565b505b50620001eb929150620001ef565b5090565b5b80821115620001eb5760008155600101620001f0565b60006020828403121562000218578081fd5b81516001600160a01b03811681146200022f578182fd5b9392505050565b60805160a05160601c60c05160601c6151b8620002ea600039600081816103a601528181610e1b01528181610f9a015281816114b7015281816115900152611bc601526000818161020d01528181610466015281816107d301528181610b8801528181611198015281816120e3015281816125ba015281816128a901528181612f120152818161362401528181613df8015281816143ca01526147c80152600081816103620152611dec01526151b86000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806392ae3764116100d8578063c2fb26a61161008c578063f851a44011610066578063f851a440146103a1578063f8eaad35146103c8578063ffa1ad74146103db57600080fd5b8063c2fb26a61461035d578063d0886f9714610384578063d2144f581461038e57600080fd5b8063a102e384116100bd578063a102e384146102ee578063a3f4df7e14610301578063aba287011461034a57600080fd5b806392ae3764146102c857806399b64de1146102db57600080fd5b806333c810e91161012f57806340d37cdf1161011457806340d37cdf1461028057806351cff8d9146102935780637a9262a2146102a857600080fd5b806333c810e9146102475780633e1608b41461026d57600080fd5b8063288cdc9111610160578063288cdc91146101b75780632ac12622146101e55780632e25d2a61461020857600080fd5b80630908ff2d1461017c578063154e0f2e146101a4575b600080fd5b61018f61018a366004614dfe565b610417565b60405190151581526020015b60405180910390f35b61018f6101b2366004614dfe565b610784565b6101d76101c5366004614f2c565b60016020526000908152604090205481565b60405190815260200161019b565b61018f6101f3366004614f2c565b60006020819052908152604090205460ff1681565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161019b565b61025a610255366004614f2c565b610a0b565b60405161ffff909116815260200161019b565b61018f61027b366004614f44565b610a43565b61018f61028e366004614dd3565b610b40565b6102a66102a1366004614d9b565b610e19565b005b6101d76102b6366004614d9b565b60026020526000908152604090205481565b61018f6102d6366004614dfe565b6110b4565b61018f6102e9366004614fa5565b6114b3565b6102a66102fc366004614d9b565b61158e565b61033d6040518060400160405280600e81526020017f53776976656c2046696e616e636500000000000000000000000000000000000081525081565b60405161019b9190615010565b61018f610358366004614e32565b611622565b6101d77f000000000000000000000000000000000000000000000000000000000000000081565b6101d76203f48081565b61018f61039c366004614e32565b6118fa565b61022f7f000000000000000000000000000000000000000000000000000000000000000081565b6102a66103d6366004614d9b565b611bc4565b61033d6040518060400160405280600581526020017f322e302e3000000000000000000000000000000000000000000000000000000081525081565b6040517fb50a66f70000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260248201849052336044830152606482018390526000917f00000000000000000000000000000000000000000000000000000000000000009182169063b50a66f790608401602060405180830381600087803b1580156104ac57600080fd5b505af11580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190614f10565b61055b5760405162461bcd60e51b815260206004820152602560248201527f6275726e205a63546f6b656e2072656d6f76696e67204e6f74696f6e616c206660448201527f61696c656400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040517f05e1dc250000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015260248201869052600091908316906305e1dc2590604401602060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190614db7565b6040517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018690529091506001600160a01b0382169063852a12e390602401602060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190614fd7565b156106dd5760405162461bcd60e51b815260206004820152601960248201527f636f6d706f756e6420726564656d7074696f6e206572726f72000000000000006044820152606401610552565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b0387169063a9059cbb906044015b602060405180830381600087803b15801561073f57600080fd5b505af1158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107779190614f10565b5060019695505050505050565b6040517fc5ee114d0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260248201849052336044830152606482018390526000917f00000000000000000000000000000000000000000000000000000000000000009183919083169063c5ee114d90608401602060405180830381600087803b15801561081c57600080fd5b505af1158015610830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108549190614fd7565b6040517f05e1dc250000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015260248201889052919250908316906305e1dc2590604401602060405180830381600087803b1580156108bb57600080fd5b505af11580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f39190614db7565b6001600160a01b031663852a12e3826040518263ffffffff1660e01b815260040161092091815260200190565b602060405180830381600087803b15801561093a57600080fd5b505af115801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190614fd7565b156109bf5760405162461bcd60e51b815260206004820152601a60248201527f636f6d706f756e6420726564656d7074696f6e206661696c65640000000000006044820152606401610552565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290526001600160a01b0387169063a9059cbb90604401610725565b60038181548110610a1b57600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600080610a508484611d01565b9050610a626040850160208601614d9b565b6001600160a01b0316336001600160a01b031614610ac25760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d757374206265206d616b65720000000000000000000000006044820152606401610552565b6000818152602081905260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055518435907f9e5d8891dc1b047de610617bc9bc2d8ccffebbc3d63363431a546831245858a690610b2e9084815260200190565b60405180910390a25060019392505050565b6040517fa11f48560000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390523360448301526000917f00000000000000000000000000000000000000000000000000000000000000009183919083169063a11f485690606401602060405180830381600087803b158015610bd157600080fd5b505af1158015610be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c099190614fd7565b6040517f05e1dc250000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015260248201879052919250908316906305e1dc2590604401602060405180830381600087803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca89190614db7565b6001600160a01b031663852a12e3826040518263ffffffff1660e01b8152600401610cd591815260200190565b602060405180830381600087803b158015610cef57600080fd5b505af1158015610d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d279190614fd7565b15610d745760405162461bcd60e51b815260206004820152601a60248201527f636f6d706f756e6420726564656d7074696f6e206661696c65640000000000006044820152606401610552565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290526001600160a01b0386169063a9059cbb90604401602060405180830381600087803b158015610dd557600080fd5b505af1158015610de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0d9190614f10565b50600195945050505050565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610e925760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610552565b6001600160a01b03821660009081526002602052604090205480610ef85760405162461bcd60e51b815260206004820152601760248201527f6e6f207769746864726177616c207363686564756c65640000000000000000006044820152606401610552565b80421015610f485760405162461bcd60e51b815260206004820152601860248201527f7769746864726177616c207374696c6c206f6e20686f6c6400000000000000006044820152606401610552565b6001600160a01b03831660008181526002602052604080822091909155517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015284919063a9059cbb907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190602401602060405180830381600087803b158015610fdf57600080fd5b505af1158015610ff3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110179190614fd7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561107557600080fd5b505af1158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad9190614f10565b5050505050565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810182905260009084906001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111589190614f10565b506040517f05e1dc250000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000916000918316906305e1dc2590604401602060405180830381600087803b1580156111e157600080fd5b505af11580156111f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112199190614db7565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038083166004830152602482018890529192509084169063095ea7b390604401602060405180830381600087803b15801561128057600080fd5b505af1158015611294573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b89190614f10565b506040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0382169063a0712d6890602401602060405180830381600087803b15801561131457600080fd5b505af1158015611328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134c9190614fd7565b156113995760405162461bcd60e51b815260206004820152601560248201527f6d696e74696e672043546f6b656e204661696c656400000000000000000000006044820152606401610552565b6040517fef267f2c0000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018890523360448301526064820187905283169063ef267f2c90608401602060405180830381600087803b15801561140957600080fd5b505af115801561141d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114419190614f10565b6107775760405162461bcd60e51b815260206004820152602360248201527f6d696e74205a63546f6b656e20616464696e67204e6f74696f6e616c2066616960448201527f6c656400000000000000000000000000000000000000000000000000000000006064820152608401610552565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b0382161461152e5760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610552565b8260038561ffff168154811061155457634e487b7160e01b600052603260045260246000fd5b90600052602060002090601091828204019190066002026101000a81548161ffff021916908361ffff160217905550600191505092915050565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146116075760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610552565b506001600160a01b0316600090815260026020526040812055565b6000805b868110156118ec5787878281811061164e57634e487b7160e01b600052603260045260246000fd5b9050610120020160800160208101906116679190614ef4565b6117a55787878281811061168b57634e487b7160e01b600052603260045260246000fd5b9050610120020160600160208101906116a49190614ef4565b611729576117248888838181106116cb57634e487b7160e01b600052603260045260246000fd5b905061012002018787848181106116f257634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061171957634e487b7160e01b600052603260045260246000fd5b905060600201611e9b565b6118da565b61172488888381811061174c57634e487b7160e01b600052603260045260246000fd5b9050610120020187878481811061177357634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061179a57634e487b7160e01b600052603260045260246000fd5b90506060020161237e565b8787828181106117c557634e487b7160e01b600052603260045260246000fd5b9050610120020160600160208101906117de9190614ef4565b61185e5761172488888381811061180557634e487b7160e01b600052603260045260246000fd5b9050610120020187878481811061182c57634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061185357634e487b7160e01b600052603260045260246000fd5b905060600201612753565b6118da88888381811061188157634e487b7160e01b600052603260045260246000fd5b905061012002018787848181106118a857634e487b7160e01b600052603260045260246000fd5b905060200201358686858181106118cf57634e487b7160e01b600052603260045260246000fd5b905060600201612dbb565b806118e48161510d565b915050611626565b506001979650505050505050565b6000805b868110156118ec5787878281811061192657634e487b7160e01b600052603260045260246000fd5b90506101200201608001602081019061193f9190614ef4565b611a7d5787878281811061196357634e487b7160e01b600052603260045260246000fd5b90506101200201606001602081019061197c9190614ef4565b611a01576119fc8888838181106119a357634e487b7160e01b600052603260045260246000fd5b905061012002018787848181106119ca57634e487b7160e01b600052603260045260246000fd5b905060200201358686858181106119f157634e487b7160e01b600052603260045260246000fd5b90506060020161333b565b611bb2565b6119fc888883818110611a2457634e487b7160e01b600052603260045260246000fd5b90506101200201878784818110611a4b57634e487b7160e01b600052603260045260246000fd5b90506020020135868685818110611a7257634e487b7160e01b600052603260045260246000fd5b905060600201613b14565b878782818110611a9d57634e487b7160e01b600052603260045260246000fd5b905061012002016060016020810190611ab69190614ef4565b611b36576119fc888883818110611add57634e487b7160e01b600052603260045260246000fd5b90506101200201878784818110611b0457634e487b7160e01b600052603260045260246000fd5b90506020020135868685818110611b2b57634e487b7160e01b600052603260045260246000fd5b905060600201614187565b611bb2888883818110611b5957634e487b7160e01b600052603260045260246000fd5b90506101200201878784818110611b8057634e487b7160e01b600052603260045260246000fd5b90506020020135868685818110611ba757634e487b7160e01b600052603260045260246000fd5b9050606002016145a2565b80611bbc8161510d565b9150506118fe565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614611c3d5760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610552565b6000611c4c6203f48042615081565b6001600160a01b0384166000818152600260205260409081902083905551919250907fd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd390611c9d9084815260200190565b60405180910390a2505050565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b600080611d0d84614a76565b60008181526020819052604090205490915060ff1615611d6f5760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610552565b428461010001351015611dc45760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610552565b6040517f190100000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060028201526022810182905260429020611e259084614b74565b6001600160a01b0316611e3e6040860160208701614d9b565b6001600160a01b031614611e945760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610552565b9392505050565b6000611ea78483611d01565b600081815260016020526040902054909150611ec79060c08601356150f6565b831115611f165760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b60008181526001602052604081208054859290611f34908490615081565b9091555060009050670de0b6b3a764000060a086013560c0870135611f5987846150b9565b611f639190615099565b611f6d91906150b9565b611f779190615099565b90506000670de0b6b3a76400006003600181548110611fa657634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff16611fda84670de0b6b3a76400006150b9565b611fe49190615099565b611fee9190615099565b905060006120026060880160408901614d9b565b90506001600160a01b0381166323b872dd61202360408a0160208b01614d9b565b338561202f8b896150f6565b61203991906150f6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156120a057600080fd5b505af11580156120b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d89190614f10565b506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166365a963aa61211860608a0160408b01614d9b565b60e08a01353361212e60408d0160208e01614d9b565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0394851660048201526024810193909352908316604483015290911660648201526084810186905260a401602060405180830381600087803b1580156121a657600080fd5b505af11580156121ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121de9190614f10565b61222a5760405162461bcd60e51b815260206004820152601760248201527f7a63546f6b656e2065786368616e6765206661696c65640000000000000000006044820152606401610552565b6001600160a01b0381166323b872dd61224960408a0160208b01614d9b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152306024820152604481018590526064015b602060405180830381600087803b1580156122b057600080fd5b505af11580156122c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e89190614f10565b50336122fa6040890160208a01614d9b565b6001600160a01b031688357f51cad9177cf46d59109ae978bb3cf5ffed2bb3d53fb3682fa56fbd92667128348761233760808d0160608e01614ef4565b61234760a08e0160808f01614ef4565b604080519384529115156020840152151590820152606081018b90526080810188905260a00160405180910390a450505050505050565b600061238a8483611d01565b6000818152600160205260409020549091506123aa9060a08601356150f6565b8311156123f95760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b60008181526001602052604081208054859290612417908490615081565b9091555060009050670de0b6b3a764000060c086013560a087013561243c87846150b9565b6124469190615099565b61245091906150b9565b61245a9190615099565b90506000670de0b6b3a76400006003808154811061248857634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff166124bc84670de0b6b3a76400006150b9565b6124c69190615099565b6124d09190615099565b905060006124e46060880160408901614d9b565b90506001600160a01b0381166323b872dd61250560408a0160208b01614d9b565b3361251086886150f6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561257757600080fd5b505af115801561258b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125af9190614f10565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663bddbfbe46125ef60608a0160408b01614d9b565b60e08a01353361260560408d0160208e01614d9b565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0394851660048201526024810193909352908316604483015290911660648201526084810189905260a401602060405180830381600087803b15801561267d57600080fd5b505af1158015612691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b59190614f10565b6127015760405162461bcd60e51b815260206004820152601560248201527f7661756c742065786368616e6765206661696c656400000000000000000000006044820152606401610552565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b038216906323b872dd90606401612296565b600061275f8483611d01565b60008181526001602052604090205490915061277f9060a08601356150f6565b8311156127ce5760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b600081815260016020526040812080548592906127ec908490615081565b9091555060009050670de0b6b3a764000060c086013560a087013561281187846150b9565b61281b9190615099565b61282591906150b9565b61282f9190615099565b90506000670de0b6b3a76400006003808154811061285d57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff1661289184670de0b6b3a76400006150b9565b61289b9190615099565b6128a59190615099565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116638c6b9b416128e760608a0160408b01614d9b565b60e08a01356128fc60408c0160208d01614d9b565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039384166004820152602481019290925290911660448201523360648201526084810189905260a401602060405180830381600087803b15801561297257600080fd5b505af1158015612986573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129aa9190614f10565b6129f65760405162461bcd60e51b815260206004820152601560248201527f637573746f6469616c2065786974206661696c656400000000000000000000006044820152606401610552565b60006001600160a01b0382166305e1dc25612a1760608b0160408c01614d9b565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908b01356024820152604401602060405180830381600087803b158015612a7a57600080fd5b505af1158015612a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab29190614db7565b6040517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018990529091506001600160a01b0382169063852a12e390602401602060405180830381600087803b158015612b1057600080fd5b505af1158015612b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b489190614fd7565b15612b955760405162461bcd60e51b815260206004820152601960248201527f636f6d706f756e6420726564656d7074696f6e206572726f72000000000000006044820152606401610552565b6000612ba760608a0160408b01614d9b565b90506001600160a01b03811663a9059cbb612bc860408c0160208d01614d9b565b612bd2888c6150f6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015612c3057600080fd5b505af1158015612c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c689190614f10565b506001600160a01b03811663a9059cbb33612c8387896150f6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044015b602060405180830381600087803b158015612ce257600080fd5b505af1158015612cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1a9190614f10565b5033612d2c60408b0160208c01614d9b565b6001600160a01b03168a600001357f51cad9177cf46d59109ae978bb3cf5ffed2bb3d53fb3682fa56fbd9266712834898d6060016020810190612d6f9190614ef4565b8e6080016020810190612d829190614ef4565b604080519384529115156020840152151590820152606081018d9052608081018a905260a00160405180910390a4505050505050505050565b6000612dc78483611d01565b600081815260016020526040902054909150612de79060c08601356150f6565b831115612e365760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b60008181526001602052604081208054859290612e54908490615081565b9091555060009050670de0b6b3a764000060a086013560c0870135612e7987846150b9565b612e839190615099565b612e8d91906150b9565b612e979190615099565b90506000670de0b6b3a76400006003600181548110612ec657634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff16612efa84670de0b6b3a76400006150b9565b612f049190615099565b612f0e9190615099565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116638c6b9b41612f5060608a0160408b01614d9b565b60e08a013533612f6660408d0160208e01614d9b565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0394851660048201526024810193909352908316604483015290911660648201526084810186905260a401602060405180830381600087803b158015612fde57600080fd5b505af1158015612ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130169190614f10565b6130625760405162461bcd60e51b815260206004820152601560248201527f637573746f6469616c2065786974206661696c656400000000000000000000006044820152606401610552565b60006001600160a01b0382166305e1dc2561308360608b0160408c01614d9b565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908b01356024820152604401602060405180830381600087803b1580156130e657600080fd5b505af11580156130fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061311e9190614db7565b6040517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018690529091506001600160a01b0382169063852a12e390602401602060405180830381600087803b15801561317c57600080fd5b505af1158015613190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131b49190614fd7565b156132015760405162461bcd60e51b815260206004820152601960248201527f636f6d706f756e6420726564656d7074696f6e206572726f72000000000000006044820152606401610552565b600061321360608a0160408b01614d9b565b90506001600160a01b03811663a9059cbb33866132308c8a6150f6565b61323a91906150f6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561329857600080fd5b505af11580156132ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132d09190614f10565b506001600160a01b03811663a9059cbb6132f060408c0160208d01614d9b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018b9052604401612cc8565b60006133478483611d01565b6000818152600160205260409020549091506133679060c08601356150f6565b8311156133b65760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b600081815260016020526040812080548592906133d4908490615081565b9091555060009050670de0b6b3a764000060a086013560c08701356133f987846150b9565b6134039190615099565b61340d91906150b9565b6134179190615099565b90506000670de0b6b3a7640000600360028154811061344657634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff1661347a84670de0b6b3a76400006150b9565b6134849190615099565b61348e9190615099565b905060006134a26060880160408901614d9b565b90506001600160a01b0381166323b872dd336134c460408b0160208c01614d9b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0392831660048201529116602482015260448101899052606401602060405180830381600087803b15801561352b57600080fd5b505af115801561353f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135639190614f10565b506001600160a01b0381166323b872dd61358360408a0160208b01614d9b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015230602482015260448101869052606401602060405180830381600087803b1580156135e957600080fd5b505af11580156135fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136219190614f10565b507f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b0382166305e1dc2561366460608c0160408d01614d9b565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908c01356024820152604401602060405180830381600087803b1580156136c757600080fd5b505af11580156136db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136ff9190614db7565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038083166004830152602482018890529192509084169063095ea7b390604401602060405180830381600087803b15801561376657600080fd5b505af115801561377a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061379e9190614f10565b506040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0382169063a0712d6890602401602060405180830381600087803b1580156137fa57600080fd5b505af115801561380e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138329190614fd7565b1561387f5760405162461bcd60e51b815260206004820152601560248201527f6d696e74696e672043546f6b656e206661696c656400000000000000000000006044820152606401610552565b6001600160a01b03821663f8e51bcb61389e60608c0160408d01614d9b565b60e08c01356138b360408e0160208f01614d9b565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039384166004820152602481019290925290911660448201523360648201526084810188905260a401602060405180830381600087803b15801561392957600080fd5b505af115801561393d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139619190614f10565b6139ad5760405162461bcd60e51b815260206004820152601960248201527f637573746f6469616c20696e697469617465206661696c6564000000000000006044820152606401610552565b6001600160a01b038216633cf9a4e36139cc60608c0160408d01614d9b565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908c0135602482015233604482015260648101879052608401602060405180830381600087803b158015613a3c57600080fd5b505af1158015613a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a749190614f10565b613ac05760405162461bcd60e51b815260206004820152601c60248201527f6e6f74696f6e616c20666565207472616e73666572206661696c6564000000006044820152606401610552565b33613ad160408b0160208c01614d9b565b6001600160a01b03168a600001357f32bc401d77ffde781b234d480866e0c360e724770a30ea3299309f9171e400ef898d6060016020810190612d6f9190614ef4565b6000613b208483611d01565b600081815260016020526040902054909150613b409060a08601356150f6565b831115613b8f5760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b60008181526001602052604081208054859290613bad908490615081565b9091555060009050670de0b6b3a764000060c086013560a0870135613bd287846150b9565b613bdc9190615099565b613be691906150b9565b613bf09190615099565b90506000670de0b6b3a76400006003600081548110613c1f57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff16613c5384670de0b6b3a76400006150b9565b613c5d9190615099565b613c679190615099565b90506000613c7b6060880160408901614d9b565b90506001600160a01b0381166323b872dd613c9c60408a0160208b01614d9b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015233602482015260448101869052606401602060405180830381600087803b158015613d0257600080fd5b505af1158015613d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d3a9190614f10565b506001600160a01b0381166323b872dd3330613d56868b615081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015613dbd57600080fd5b505af1158015613dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613df59190614f10565b507f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b0382166305e1dc25613e3860608c0160408d01614d9b565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908c01356024820152604401602060405180830381600087803b158015613e9b57600080fd5b505af1158015613eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ed39190614db7565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038083166004830152602482018b90529192509084169063095ea7b390604401602060405180830381600087803b158015613f3a57600080fd5b505af1158015613f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f729190614f10565b506040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018990526001600160a01b0382169063a0712d6890602401602060405180830381600087803b158015613fce57600080fd5b505af1158015613fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140069190614fd7565b156140535760405162461bcd60e51b815260206004820152601560248201527f6d696e74696e672043546f6b656e204661696c656400000000000000000000006044820152606401610552565b6001600160a01b03821663f8e51bcb61407260608c0160408d01614d9b565b8b60e00135338d602001602081019061408b9190614d9b565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039485166004820152602481019390935290831660448301529091166064820152608481018b905260a401602060405180830381600087803b15801561410357600080fd5b505af1158015614117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061413b9190614f10565b613ac05760405162461bcd60e51b815260206004820152601960248201527f637573746f6469616c20696e697469617465206661696c6564000000000000006044820152606401610552565b60006141938483611d01565b6000818152600160205260409020549091506141b39060a08601356150f6565b8311156142025760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b60008181526001602052604081208054859290614220908490615081565b9091555060009050670de0b6b3a764000060c086013560a087013561424587846150b9565b61424f9190615099565b61425991906150b9565b6142639190615099565b90506000670de0b6b3a7640000600360008154811061429257634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff166142c684670de0b6b3a76400006150b9565b6142d09190615099565b6142da9190615099565b90506142ec6060870160408801614d9b565b6001600160a01b03166323b872dd3361430b60408a0160208b01614d9b565b84614316878b6150f6565b6143209190615081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561438757600080fd5b505af115801561439b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143bf9190614f10565b506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166365a963aa6143ff6060890160408a01614d9b565b60e089013561441460408b0160208c01614d9b565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039384166004820152602481019290925290911660448201523360648201526084810188905260a401602060405180830381600087803b15801561448a57600080fd5b505af115801561449e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144c29190614f10565b61450e5760405162461bcd60e51b815260206004820152601760248201527f7a63546f6b656e2065786368616e6765206661696c65640000000000000000006044820152606401610552565b3361451f6040880160208901614d9b565b6001600160a01b031687357f32bc401d77ffde781b234d480866e0c360e724770a30ea3299309f9171e400ef8661455c60808c0160608d01614ef4565b61456c60a08d0160808e01614ef4565b604080519384529115156020840152151590820152606081018a90526080810187905260a00160405180910390a4505050505050565b60006145ae8483611d01565b6000818152600160205260409020549091506145ce9060c08601356150f6565b83111561461d5760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610552565b6000818152600160205260408120805485929061463b908490615081565b9091555061465190506060850160408601614d9b565b6001600160a01b03166323b872dd336146706040880160208901614d9b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0392831660048201529116602482015260448101869052606401602060405180830381600087803b1580156146d757600080fd5b505af11580156146eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061470f9190614f10565b506000670de0b6b3a764000060a086013560c087013561472f87846150b9565b6147399190615099565b61474391906150b9565b61474d9190615099565b90506000670de0b6b3a7640000600360028154811061477c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff166147b084670de0b6b3a76400006150b9565b6147ba9190615099565b6147c49190615099565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811663bddbfbe461480660608a0160408b01614d9b565b60e08a013561481b60408c0160208d01614d9b565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039384166004820152602481019290925290911660448201523360648201526084810186905260a401602060405180830381600087803b15801561489157600080fd5b505af11580156148a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148c99190614f10565b6149155760405162461bcd60e51b815260206004820152601560248201527f7661756c742065786368616e6765206661696c656400000000000000000000006044820152606401610552565b6001600160a01b038116633cf9a4e361493460608a0160408b01614d9b565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908a0135602482015233604482015260648101859052608401602060405180830381600087803b1580156149a457600080fd5b505af11580156149b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149dc9190614f10565b614a285760405162461bcd60e51b815260206004820152601c60248201527f6e6f74696f6e616c20666565207472616e73666572206661696c6564000000006044820152606401610552565b33614a396040890160208a01614d9b565b6001600160a01b031688357f32bc401d77ffde781b234d480866e0c360e724770a30ea3299309f9171e400ef8761233760808d0160608e01614ef4565b60007f7ddd38ab5ed1c16b61ca90eeb9579e29da1ba821cf42d8cdef8f30a31a6a41468235614aab6040850160208601614d9b565b614abb6060860160408701614d9b565b614acb6080870160608801614ef4565b614adb60a0880160808901614ef4565b8760a001358860c001358960e001358a6101000135604051602001614b579a99989796959493929190998a5260208a01989098526001600160a01b0396871660408a01529490951660608801529115156080870152151560a086015260c085015260e08401919091526101008301526101208201526101400190565b604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a060408301351115614bea5760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964207369676e6174757265202273222076616c756500000000006044820152606401610552565b614bf76020830183614fef565b60ff16601b1480614c175750614c106020830183614fef565b60ff16601c145b614c635760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964207369676e6174757265202276222076616c756500000000006044820152606401610552565b600183614c736020850185614fef565b604080516000815260208181018084529490945260ff9092168282015291850135606082015290840135608082015260a0016020604051602081039080840390855afa158015614cc7573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151949350505050565b60008083601f840112614d08578182fd5b50813567ffffffffffffffff811115614d1f578182fd5b602083019150836020606083028501011115614d3a57600080fd5b9250929050565b60008083601f840112614d52578182fd5b50813567ffffffffffffffff811115614d69578182fd5b6020830191508360208260051b8501011115614d3a57600080fd5b803561ffff81168114614d9657600080fd5b919050565b600060208284031215614dac578081fd5b8135611e948161515c565b600060208284031215614dc8578081fd5b8151611e948161515c565b60008060408385031215614de5578081fd5b8235614df08161515c565b946020939093013593505050565b600080600060608486031215614e12578081fd5b8335614e1d8161515c565b95602085013595506040909401359392505050565b60008060008060008060608789031215614e4a578182fd5b863567ffffffffffffffff80821115614e61578384fd5b818901915089601f830112614e74578384fd5b813581811115614e82578485fd5b8a602061012083028501011115614e97578485fd5b602092830198509650908801359080821115614eb1578384fd5b614ebd8a838b01614d41565b90965094506040890135915080821115614ed5578384fd5b50614ee289828a01614cf7565b979a9699509497509295939492505050565b600060208284031215614f05578081fd5b8135611e9481615174565b600060208284031215614f21578081fd5b8151611e9481615174565b600060208284031215614f3d578081fd5b5035919050565b600080828403610180811215614f58578283fd5b61012080821215614f67578384fd5b84935060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee083011215614f99578283fd5b92959390920193505050565b60008060408385031215614fb7578182fd5b614fc083614d84565b9150614fce60208401614d84565b90509250929050565b600060208284031215614fe8578081fd5b5051919050565b600060208284031215615000578081fd5b813560ff81168114611e94578182fd5b6000602080835283518082850152825b8181101561503c57858101830151858201604001528201615020565b8181111561504d5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561509457615094615146565b500190565b6000826150b457634e487b7160e01b81526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156150f1576150f1615146565b500290565b60008282101561510857615108615146565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561513f5761513f615146565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461517157600080fd5b50565b801515811461517157600080fdfea264697066735822122070d502a71e0e459ff09b4f0f2fbc6ea7f365830e255db729e19d23c4be40ff4964736f6c63430008040033"

// DeploySwivel deploys a new Ethereum contract, binding an instance of Swivel to it.
func DeploySwivel(auth *bind.TransactOpts, backend bind.ContractBackend, m common.Address) (common.Address, *types.Transaction, *Swivel, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SwivelBin), backend, m)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// Swivel is an auto generated Go binding around an Ethereum contract.
type Swivel struct {
	SwivelCaller     // Read-only binding to the contract
	SwivelTransactor // Write-only binding to the contract
	SwivelFilterer   // Log filterer for contract events
}

// SwivelCaller is an auto generated read-only Go binding around an Ethereum contract.
type SwivelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SwivelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwivelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwivelSession struct {
	Contract     *Swivel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwivelCallerSession struct {
	Contract *SwivelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SwivelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwivelTransactorSession struct {
	Contract     *SwivelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelRaw is an auto generated low-level Go binding around an Ethereum contract.
type SwivelRaw struct {
	Contract *Swivel // Generic contract binding to access the raw methods on
}

// SwivelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwivelCallerRaw struct {
	Contract *SwivelCaller // Generic read-only contract binding to access the raw methods on
}

// SwivelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwivelTransactorRaw struct {
	Contract *SwivelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSwivel creates a new instance of Swivel, bound to a specific deployed contract.
func NewSwivel(address common.Address, backend bind.ContractBackend) (*Swivel, error) {
	contract, err := bindSwivel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// NewSwivelCaller creates a new read-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelCaller(address common.Address, caller bind.ContractCaller) (*SwivelCaller, error) {
	contract, err := bindSwivel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelCaller{contract: contract}, nil
}

// NewSwivelTransactor creates a new write-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelTransactor(address common.Address, transactor bind.ContractTransactor) (*SwivelTransactor, error) {
	contract, err := bindSwivel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelTransactor{contract: contract}, nil
}

// NewSwivelFilterer creates a new log filterer instance of Swivel, bound to a specific deployed contract.
func NewSwivelFilterer(address common.Address, filterer bind.ContractFilterer) (*SwivelFilterer, error) {
	contract, err := bindSwivel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwivelFilterer{contract: contract}, nil
}

// bindSwivel binds a generic wrapper to an already deployed contract.
func bindSwivel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.SwivelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transact(opts, method, params...)
}

// HOLD is a free data retrieval call binding the contract method 0xd0886f97.
//
// Solidity: function HOLD() view returns(uint256)
func (_Swivel *SwivelCaller) HOLD(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "HOLD")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// HOLD is a free data retrieval call binding the contract method 0xd0886f97.
//
// Solidity: function HOLD() view returns(uint256)
func (_Swivel *SwivelSession) HOLD() (*big.Int, error) {
	return _Swivel.Contract.HOLD(&_Swivel.CallOpts)
}

// HOLD is a free data retrieval call binding the contract method 0xd0886f97.
//
// Solidity: function HOLD() view returns(uint256)
func (_Swivel *SwivelCallerSession) HOLD() (*big.Int, error) {
	return _Swivel.Contract.HOLD(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCaller) NAME(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "NAME")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCallerSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCallerSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCallerSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCaller) Cancelled(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "cancelled", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCallerSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Domain is a free data retrieval call binding the contract method 0xc2fb26a6.
//
// Solidity: function domain() view returns(bytes32)
func (_Swivel *SwivelCaller) Domain(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "domain")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// Domain is a free data retrieval call binding the contract method 0xc2fb26a6.
//
// Solidity: function domain() view returns(bytes32)
func (_Swivel *SwivelSession) Domain() ([32]byte, error) {
	return _Swivel.Contract.Domain(&_Swivel.CallOpts)
}

// Domain is a free data retrieval call binding the contract method 0xc2fb26a6.
//
// Solidity: function domain() view returns(bytes32)
func (_Swivel *SwivelCallerSession) Domain() ([32]byte, error) {
	return _Swivel.Contract.Domain(&_Swivel.CallOpts)
}

// Fenominator is a free data retrieval call binding the contract method 0x33c810e9.
//
// Solidity: function fenominator(uint256 ) view returns(uint16)
func (_Swivel *SwivelCaller) Fenominator(opts *bind.CallOpts, arg0 *big.Int) (uint16, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "fenominator", arg0)

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// Fenominator is a free data retrieval call binding the contract method 0x33c810e9.
//
// Solidity: function fenominator(uint256 ) view returns(uint16)
func (_Swivel *SwivelSession) Fenominator(arg0 *big.Int) (uint16, error) {
	return _Swivel.Contract.Fenominator(&_Swivel.CallOpts, arg0)
}

// Fenominator is a free data retrieval call binding the contract method 0x33c810e9.
//
// Solidity: function fenominator(uint256 ) view returns(uint16)
func (_Swivel *SwivelCallerSession) Fenominator(arg0 *big.Int) (uint16, error) {
	return _Swivel.Contract.Fenominator(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCaller) Filled(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "filled", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Swivel *SwivelCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Swivel *SwivelSession) MarketPlace() (common.Address, error) {
	return _Swivel.Contract.MarketPlace(&_Swivel.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Swivel *SwivelCallerSession) MarketPlace() (common.Address, error) {
	return _Swivel.Contract.MarketPlace(&_Swivel.CallOpts)
}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(uint256)
func (_Swivel *SwivelCaller) Withdrawals(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "withdrawals", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(uint256)
func (_Swivel *SwivelSession) Withdrawals(arg0 common.Address) (*big.Int, error) {
	return _Swivel.Contract.Withdrawals(&_Swivel.CallOpts, arg0)
}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Withdrawals(arg0 common.Address) (*big.Int, error) {
	return _Swivel.Contract.Withdrawals(&_Swivel.CallOpts, arg0)
}

// BlockWithdrawal is a paid mutator transaction binding the contract method 0xa102e384.
//
// Solidity: function blockWithdrawal(address e) returns()
func (_Swivel *SwivelTransactor) BlockWithdrawal(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "blockWithdrawal", e)
}

// BlockWithdrawal is a paid mutator transaction binding the contract method 0xa102e384.
//
// Solidity: function blockWithdrawal(address e) returns()
func (_Swivel *SwivelSession) BlockWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.BlockWithdrawal(&_Swivel.TransactOpts, e)
}

// BlockWithdrawal is a paid mutator transaction binding the contract method 0xa102e384.
//
// Solidity: function blockWithdrawal(address e) returns()
func (_Swivel *SwivelTransactorSession) BlockWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.BlockWithdrawal(&_Swivel.TransactOpts, e)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) Cancel(opts *bind.TransactOpts, o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "cancel", o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// CombineTokens is a paid mutator transaction binding the contract method 0x0908ff2d.
//
// Solidity: function combineTokens(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactor) CombineTokens(opts *bind.TransactOpts, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "combineTokens", u, m, a)
}

// CombineTokens is a paid mutator transaction binding the contract method 0x0908ff2d.
//
// Solidity: function combineTokens(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelSession) CombineTokens(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.CombineTokens(&_Swivel.TransactOpts, u, m, a)
}

// CombineTokens is a paid mutator transaction binding the contract method 0x0908ff2d.
//
// Solidity: function combineTokens(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactorSession) CombineTokens(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.CombineTokens(&_Swivel.TransactOpts, u, m, a)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Exit(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "exit", o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Initiate(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "initiate", o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// RedeemVaultInterest is a paid mutator transaction binding the contract method 0x40d37cdf.
//
// Solidity: function redeemVaultInterest(address u, uint256 m) returns(bool)
func (_Swivel *SwivelTransactor) RedeemVaultInterest(opts *bind.TransactOpts, u common.Address, m *big.Int) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "redeemVaultInterest", u, m)
}

// RedeemVaultInterest is a paid mutator transaction binding the contract method 0x40d37cdf.
//
// Solidity: function redeemVaultInterest(address u, uint256 m) returns(bool)
func (_Swivel *SwivelSession) RedeemVaultInterest(u common.Address, m *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.RedeemVaultInterest(&_Swivel.TransactOpts, u, m)
}

// RedeemVaultInterest is a paid mutator transaction binding the contract method 0x40d37cdf.
//
// Solidity: function redeemVaultInterest(address u, uint256 m) returns(bool)
func (_Swivel *SwivelTransactorSession) RedeemVaultInterest(u common.Address, m *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.RedeemVaultInterest(&_Swivel.TransactOpts, u, m)
}

// RedeemZcToken is a paid mutator transaction binding the contract method 0x154e0f2e.
//
// Solidity: function redeemZcToken(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactor) RedeemZcToken(opts *bind.TransactOpts, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "redeemZcToken", u, m, a)
}

// RedeemZcToken is a paid mutator transaction binding the contract method 0x154e0f2e.
//
// Solidity: function redeemZcToken(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelSession) RedeemZcToken(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.RedeemZcToken(&_Swivel.TransactOpts, u, m, a)
}

// RedeemZcToken is a paid mutator transaction binding the contract method 0x154e0f2e.
//
// Solidity: function redeemZcToken(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactorSession) RedeemZcToken(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.RedeemZcToken(&_Swivel.TransactOpts, u, m, a)
}

// ScheduleWithdrawal is a paid mutator transaction binding the contract method 0xf8eaad35.
//
// Solidity: function scheduleWithdrawal(address e) returns()
func (_Swivel *SwivelTransactor) ScheduleWithdrawal(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "scheduleWithdrawal", e)
}

// ScheduleWithdrawal is a paid mutator transaction binding the contract method 0xf8eaad35.
//
// Solidity: function scheduleWithdrawal(address e) returns()
func (_Swivel *SwivelSession) ScheduleWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.ScheduleWithdrawal(&_Swivel.TransactOpts, e)
}

// ScheduleWithdrawal is a paid mutator transaction binding the contract method 0xf8eaad35.
//
// Solidity: function scheduleWithdrawal(address e) returns()
func (_Swivel *SwivelTransactorSession) ScheduleWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.ScheduleWithdrawal(&_Swivel.TransactOpts, e)
}

// SetFee is a paid mutator transaction binding the contract method 0x99b64de1.
//
// Solidity: function setFee(uint16 t, uint16 d) returns(bool)
func (_Swivel *SwivelTransactor) SetFee(opts *bind.TransactOpts, t uint16, d uint16) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "setFee", t, d)
}

// SetFee is a paid mutator transaction binding the contract method 0x99b64de1.
//
// Solidity: function setFee(uint16 t, uint16 d) returns(bool)
func (_Swivel *SwivelSession) SetFee(t uint16, d uint16) (*types.Transaction, error) {
	return _Swivel.Contract.SetFee(&_Swivel.TransactOpts, t, d)
}

// SetFee is a paid mutator transaction binding the contract method 0x99b64de1.
//
// Solidity: function setFee(uint16 t, uint16 d) returns(bool)
func (_Swivel *SwivelTransactorSession) SetFee(t uint16, d uint16) (*types.Transaction, error) {
	return _Swivel.Contract.SetFee(&_Swivel.TransactOpts, t, d)
}

// SplitUnderlying is a paid mutator transaction binding the contract method 0x92ae3764.
//
// Solidity: function splitUnderlying(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactor) SplitUnderlying(opts *bind.TransactOpts, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "splitUnderlying", u, m, a)
}

// SplitUnderlying is a paid mutator transaction binding the contract method 0x92ae3764.
//
// Solidity: function splitUnderlying(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelSession) SplitUnderlying(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.SplitUnderlying(&_Swivel.TransactOpts, u, m, a)
}

// SplitUnderlying is a paid mutator transaction binding the contract method 0x92ae3764.
//
// Solidity: function splitUnderlying(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactorSession) SplitUnderlying(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.SplitUnderlying(&_Swivel.TransactOpts, u, m, a)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns()
func (_Swivel *SwivelTransactor) Withdraw(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "withdraw", e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns()
func (_Swivel *SwivelSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.Withdraw(&_Swivel.TransactOpts, e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns()
func (_Swivel *SwivelTransactorSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.Withdraw(&_Swivel.TransactOpts, e)
}

// SwivelCancelIterator is returned from FilterCancel and is used to iterate over the raw logs and unpacked data for Cancel events raised by the Swivel contract.
type SwivelCancelIterator struct {
	Event *SwivelCancel // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelCancelIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelCancel)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelCancel)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelCancelIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelCancelIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelCancel represents a Cancel event raised by the Swivel contract.
type SwivelCancel struct {
	Key  [32]byte
	Hash [32]byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterCancel is a free log retrieval operation binding the contract event 0x9e5d8891dc1b047de610617bc9bc2d8ccffebbc3d63363431a546831245858a6.
//
// Solidity: event Cancel(bytes32 indexed key, bytes32 hash)
func (_Swivel *SwivelFilterer) FilterCancel(opts *bind.FilterOpts, key [][32]byte) (*SwivelCancelIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelCancelIterator{contract: _Swivel.contract, event: "Cancel", logs: logs, sub: sub}, nil
}

// WatchCancel is a free log subscription operation binding the contract event 0x9e5d8891dc1b047de610617bc9bc2d8ccffebbc3d63363431a546831245858a6.
//
// Solidity: event Cancel(bytes32 indexed key, bytes32 hash)
func (_Swivel *SwivelFilterer) WatchCancel(opts *bind.WatchOpts, sink chan<- *SwivelCancel, key [][32]byte) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelCancel)
				if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCancel is a log parse operation binding the contract event 0x9e5d8891dc1b047de610617bc9bc2d8ccffebbc3d63363431a546831245858a6.
//
// Solidity: event Cancel(bytes32 indexed key, bytes32 hash)
func (_Swivel *SwivelFilterer) ParseCancel(log types.Log) (*SwivelCancel, error) {
	event := new(SwivelCancel)
	if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelExitIterator is returned from FilterExit and is used to iterate over the raw logs and unpacked data for Exit events raised by the Swivel contract.
type SwivelExitIterator struct {
	Event *SwivelExit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelExitIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelExit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelExit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelExitIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelExitIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelExit represents a Exit event raised by the Swivel contract.
type SwivelExit struct {
	Key    [32]byte
	Hash   [32]byte
	Maker  common.Address
	Vault  bool
	Exit   bool
	Sender common.Address
	Amount *big.Int
	Filled *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterExit is a free log retrieval operation binding the contract event 0x51cad9177cf46d59109ae978bb3cf5ffed2bb3d53fb3682fa56fbd9266712834.
//
// Solidity: event Exit(bytes32 indexed key, bytes32 hash, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) FilterExit(opts *bind.FilterOpts, key [][32]byte, maker []common.Address, sender []common.Address) (*SwivelExitIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Exit", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &SwivelExitIterator{contract: _Swivel.contract, event: "Exit", logs: logs, sub: sub}, nil
}

// WatchExit is a free log subscription operation binding the contract event 0x51cad9177cf46d59109ae978bb3cf5ffed2bb3d53fb3682fa56fbd9266712834.
//
// Solidity: event Exit(bytes32 indexed key, bytes32 hash, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) WatchExit(opts *bind.WatchOpts, sink chan<- *SwivelExit, key [][32]byte, maker []common.Address, sender []common.Address) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Exit", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelExit)
				if err := _Swivel.contract.UnpackLog(event, "Exit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseExit is a log parse operation binding the contract event 0x51cad9177cf46d59109ae978bb3cf5ffed2bb3d53fb3682fa56fbd9266712834.
//
// Solidity: event Exit(bytes32 indexed key, bytes32 hash, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) ParseExit(log types.Log) (*SwivelExit, error) {
	event := new(SwivelExit)
	if err := _Swivel.contract.UnpackLog(event, "Exit", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelInitiateIterator is returned from FilterInitiate and is used to iterate over the raw logs and unpacked data for Initiate events raised by the Swivel contract.
type SwivelInitiateIterator struct {
	Event *SwivelInitiate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelInitiateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelInitiate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelInitiate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelInitiateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelInitiateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelInitiate represents a Initiate event raised by the Swivel contract.
type SwivelInitiate struct {
	Key    [32]byte
	Hash   [32]byte
	Maker  common.Address
	Vault  bool
	Exit   bool
	Sender common.Address
	Amount *big.Int
	Filled *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterInitiate is a free log retrieval operation binding the contract event 0x32bc401d77ffde781b234d480866e0c360e724770a30ea3299309f9171e400ef.
//
// Solidity: event Initiate(bytes32 indexed key, bytes32 hash, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) FilterInitiate(opts *bind.FilterOpts, key [][32]byte, maker []common.Address, sender []common.Address) (*SwivelInitiateIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Initiate", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &SwivelInitiateIterator{contract: _Swivel.contract, event: "Initiate", logs: logs, sub: sub}, nil
}

// WatchInitiate is a free log subscription operation binding the contract event 0x32bc401d77ffde781b234d480866e0c360e724770a30ea3299309f9171e400ef.
//
// Solidity: event Initiate(bytes32 indexed key, bytes32 hash, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) WatchInitiate(opts *bind.WatchOpts, sink chan<- *SwivelInitiate, key [][32]byte, maker []common.Address, sender []common.Address) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Initiate", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelInitiate)
				if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiate is a log parse operation binding the contract event 0x32bc401d77ffde781b234d480866e0c360e724770a30ea3299309f9171e400ef.
//
// Solidity: event Initiate(bytes32 indexed key, bytes32 hash, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) ParseInitiate(log types.Log) (*SwivelInitiate, error) {
	event := new(SwivelInitiate)
	if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelWithdrawalScheduledIterator is returned from FilterWithdrawalScheduled and is used to iterate over the raw logs and unpacked data for WithdrawalScheduled events raised by the Swivel contract.
type SwivelWithdrawalScheduledIterator struct {
	Event *SwivelWithdrawalScheduled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelWithdrawalScheduledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelWithdrawalScheduled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelWithdrawalScheduled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelWithdrawalScheduledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelWithdrawalScheduledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelWithdrawalScheduled represents a WithdrawalScheduled event raised by the Swivel contract.
type SwivelWithdrawalScheduled struct {
	Token common.Address
	Hold  *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterWithdrawalScheduled is a free log retrieval operation binding the contract event 0xd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd3.
//
// Solidity: event WithdrawalScheduled(address indexed token, uint256 hold)
func (_Swivel *SwivelFilterer) FilterWithdrawalScheduled(opts *bind.FilterOpts, token []common.Address) (*SwivelWithdrawalScheduledIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "WithdrawalScheduled", tokenRule)
	if err != nil {
		return nil, err
	}
	return &SwivelWithdrawalScheduledIterator{contract: _Swivel.contract, event: "WithdrawalScheduled", logs: logs, sub: sub}, nil
}

// WatchWithdrawalScheduled is a free log subscription operation binding the contract event 0xd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd3.
//
// Solidity: event WithdrawalScheduled(address indexed token, uint256 hold)
func (_Swivel *SwivelFilterer) WatchWithdrawalScheduled(opts *bind.WatchOpts, sink chan<- *SwivelWithdrawalScheduled, token []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "WithdrawalScheduled", tokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelWithdrawalScheduled)
				if err := _Swivel.contract.UnpackLog(event, "WithdrawalScheduled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdrawalScheduled is a log parse operation binding the contract event 0xd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd3.
//
// Solidity: event WithdrawalScheduled(address indexed token, uint256 hold)
func (_Swivel *SwivelFilterer) ParseWithdrawalScheduled(log types.Log) (*SwivelWithdrawalScheduled, error) {
	event := new(SwivelWithdrawalScheduled)
	if err := _Swivel.contract.UnpackLog(event, "WithdrawalScheduled", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
