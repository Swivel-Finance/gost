// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package swivel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashOrder is an auto generated low-level Go binding around an user-defined struct.
type HashOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Vault      bool
	Exit       bool
	Principal  *big.Int
	Premium    *big.Int
	Maturity   *big.Int
	Expiry     *big.Int
}

// SigComponents is an auto generated low-level Go binding around an user-defined struct.
type SigComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelABI is the input ABI used to generate the binding from.
const SwivelABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"m\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"}],\"name\":\"Exit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"}],\"name\":\"Initiate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"hold\",\"type\":\"uint256\"}],\"name\":\"WithdrawalScheduled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"blockWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"combineTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fenominator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"vault\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"initiate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPlace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"scheduleWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"t\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"d\",\"type\":\"uint16\"}],\"name\":\"setFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"u\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"m\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"splitUnderlying\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"e\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// SwivelBin is the compiled bytecode used for deploying new contracts.
var SwivelBin = "0x60e06040523480156200001157600080fd5b506040516200581238038062005812833981016040819052620000349162000206565b3360601b60c052604080518082018252600e81526d53776976656c2046696e616e636560901b602080830191909152825180840190935260058352640322e302e360dc1b838201526200009592904690309062001749620000e8821b17901c565b6080908152606082811b6001600160601b03191660a05260408051928301815260c880845261025860208501526101909184019190915290820152620000e09060039060046200013f565b505062000236565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b82805482825590600052602060002090600f01601090048101928215620001dd5791602002820160005b83821115620001ab57835183826101000a81548161ffff021916908361ffff160217905550926020019260020160208160010104928301926001030262000169565b8015620001db5782816101000a81549061ffff0219169055600201602081600101049283019260010302620001ab565b505b50620001eb929150620001ef565b5090565b5b80821115620001eb5760008155600101620001f0565b60006020828403121562000218578081fd5b81516001600160a01b03811681146200022f578182fd5b9392505050565b60805160a05160601c60c05160601c6154fe620003146000396000818161035a015281816108ba01528181610a3901528181610f560152818161102f01526116650152600081816101d40152818161041a01528181610c3701528181611dbd015281816123dc0152818161281901528181612fca0152818161382a0152818161414e0152818161486e0152614db40152600081816103160152818161077901528181611ae3015281816121140152818161263701528181612de7015281816134b501528181613dde0152818161459f0152614b0201526154fe6000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806399b64de1116100cd578063d0886f9711610081578063f851a44011610066578063f851a44014610355578063f8eaad351461037c578063ffa1ad741461038f57600080fd5b8063d0886f9714610338578063d2144f581461034257600080fd5b8063a3f4df7e116100b2578063a3f4df7e146102b5578063aba28701146102fe578063c2fb26a61461031157600080fd5b806399b64de11461028f578063a102e384146102a257600080fd5b806333c810e91161012457806351cff8d91161010957806351cff8d9146102475780637a9262a21461025c57806392ae37641461027c57600080fd5b806333c810e91461020e5780633e1608b41461023457600080fd5b80630908ff2d14610156578063288cdc911461017e5780632ac12622146101ac5780632e25d2a6146101cf575b600080fd5b610169610164366004615144565b6103cb565b60405190151581526020015b60405180910390f35b61019e61018c366004615272565b60016020526000908152604090205481565b604051908152602001610175565b6101696101ba366004615272565b60006020819052908152604090205460ff1681565b6101f67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610175565b61022161021c366004615272565b610737565b60405161ffff9091168152602001610175565b61016961024236600461528a565b61076f565b61025a610255366004615105565b6108b8565b005b61019e61026a366004615105565b60026020526000908152604090205481565b61016961028a366004615144565b610b53565b61016961029d3660046152eb565b610f52565b61025a6102b0366004615105565b61102d565b6102f16040518060400160405280600e81526020017f53776976656c2046696e616e636500000000000000000000000000000000000081525081565b6040516101759190615356565b61016961030c366004615178565b6110c1565b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b61019e6203f48081565b610169610350366004615178565b611399565b6101f67f000000000000000000000000000000000000000000000000000000000000000081565b61025a61038a366004615105565b611663565b6102f16040518060400160405280600581526020017f322e302e3000000000000000000000000000000000000000000000000000000081525081565b6040517fb50a66f70000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260248201849052336044830152606482018390526000917f00000000000000000000000000000000000000000000000000000000000000009182169063b50a66f790608401602060405180830381600087803b15801561046057600080fd5b505af1158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190615256565b61050f5760405162461bcd60e51b815260206004820152602560248201527f6275726e205a63546f6b656e2072656d6f76696e67204e6f74696f6e616c206660448201527f61696c656400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040517f05e1dc250000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015260248201869052600091908316906305e1dc2590604401602060405180830381600087803b15801561057657600080fd5b505af115801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190615128565b6040517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018690529091506001600160a01b0382169063852a12e390602401602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610644919061531d565b156106915760405162461bcd60e51b815260206004820152601960248201527f636f6d706f756e6420726564656d7074696f6e206572726f72000000000000006044820152606401610506565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b0387169063a9059cbb90604401602060405180830381600087803b1580156106f257600080fd5b505af1158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190615256565b5060019695505050505050565b6003818154811061074757600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b60006107e16107db7f00000000000000000000000000000000000000000000000000000000000000006107a1866117a0565b6040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b8361189e565b6001600160a01b03166107fa6040850160208601615105565b6001600160a01b0316146108505760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b823560008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a9190a250600192915050565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146109315760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610506565b6001600160a01b038216600090815260026020526040902054806109975760405162461bcd60e51b815260206004820152601760248201527f6e6f207769746864726177616c207363686564756c65640000000000000000006044820152606401610506565b804210156109e75760405162461bcd60e51b815260206004820152601860248201527f7769746864726177616c207374696c6c206f6e20686f6c6400000000000000006044820152606401610506565b6001600160a01b03831660008181526002602052604080822091909155517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015284919063a9059cbb907f00000000000000000000000000000000000000000000000000000000000000009083906370a0823190602401602060405180830381600087803b158015610a7e57600080fd5b505af1158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab6919061531d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c9190615256565b5050505050565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810182905260009084906001600160a01b038216906323b872dd90606401602060405180830381600087803b158015610bbf57600080fd5b505af1158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf79190615256565b506040517f05e1dc250000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000916000918316906305e1dc2590604401602060405180830381600087803b158015610c8057600080fd5b505af1158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb89190615128565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038083166004830152602482018890529192509084169063095ea7b390604401602060405180830381600087803b158015610d1f57600080fd5b505af1158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d579190615256565b506040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0382169063a0712d6890602401602060405180830381600087803b158015610db357600080fd5b505af1158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb919061531d565b15610e385760405162461bcd60e51b815260206004820152601560248201527f6d696e74696e672043546f6b656e204661696c656400000000000000000000006044820152606401610506565b6040517fef267f2c0000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018890523360448301526064820187905283169063ef267f2c90608401602060405180830381600087803b158015610ea857600080fd5b505af1158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee09190615256565b61072a5760405162461bcd60e51b815260206004820152602360248201527f6d696e74205a63546f6b656e20616464696e67204e6f74696f6e616c2066616960448201527f6c656400000000000000000000000000000000000000000000000000000000006064820152608401610506565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610fcd5760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610506565b8260038561ffff1681548110610ff357634e487b7160e01b600052603260045260246000fd5b90600052602060002090601091828204019190066002026101000a81548161ffff021916908361ffff160217905550600191505092915050565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146110a65760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610506565b506001600160a01b0316600090815260026020526040812055565b6000805b8681101561138b578787828181106110ed57634e487b7160e01b600052603260045260246000fd5b905061012002016080016020810190611106919061523a565b6112445787878281811061112a57634e487b7160e01b600052603260045260246000fd5b905061012002016060016020810190611143919061523a565b6111c8576111c388888381811061116a57634e487b7160e01b600052603260045260246000fd5b9050610120020187878481811061119157634e487b7160e01b600052603260045260246000fd5b905060200201358686858181106111b857634e487b7160e01b600052603260045260246000fd5b905060600201611a21565b611379565b6111c38888838181106111eb57634e487b7160e01b600052603260045260246000fd5b9050610120020187878481811061121257634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061123957634e487b7160e01b600052603260045260246000fd5b905060600201612052565b87878281811061126457634e487b7160e01b600052603260045260246000fd5b90506101200201606001602081019061127d919061523a565b6112fd576111c38888838181106112a457634e487b7160e01b600052603260045260246000fd5b905061012002018787848181106112cb57634e487b7160e01b600052603260045260246000fd5b905060200201358686858181106112f257634e487b7160e01b600052603260045260246000fd5b905060600201612575565b61137988888381811061132057634e487b7160e01b600052603260045260246000fd5b9050610120020187878481811061134757634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061136e57634e487b7160e01b600052603260045260246000fd5b905060600201612d25565b8061138381615453565b9150506110c5565b506001979650505050505050565b6000805b8681101561138b578787828181106113c557634e487b7160e01b600052603260045260246000fd5b9050610120020160800160208101906113de919061523a565b61151c5787878281811061140257634e487b7160e01b600052603260045260246000fd5b90506101200201606001602081019061141b919061523a565b6114a05761149b88888381811061144257634e487b7160e01b600052603260045260246000fd5b9050610120020187878481811061146957634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061149057634e487b7160e01b600052603260045260246000fd5b9050606002016133f3565b611651565b61149b8888838181106114c357634e487b7160e01b600052603260045260246000fd5b905061012002018787848181106114ea57634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061151157634e487b7160e01b600052603260045260246000fd5b905060600201613d1c565b87878281811061153c57634e487b7160e01b600052603260045260246000fd5b905061012002016060016020810190611555919061523a565b6115d55761149b88888381811061157c57634e487b7160e01b600052603260045260246000fd5b905061012002018787848181106115a357634e487b7160e01b600052603260045260246000fd5b905060200201358686858181106115ca57634e487b7160e01b600052603260045260246000fd5b9050606002016144dd565b6116518888838181106115f857634e487b7160e01b600052603260045260246000fd5b9050610120020187878481811061161f57634e487b7160e01b600052603260045260246000fd5b9050602002013586868581811061164657634e487b7160e01b600052603260045260246000fd5b905060600201614a40565b8061165b81615453565b91505061139d565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146116dc5760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d7573742062652061646d696e0000000000000000000000006044820152606401610506565b60006116eb6203f480426153c7565b6001600160a01b0384166000818152600260205260409081902083905551919250907fd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd39061173c9084815260200190565b60405180910390a2505050565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b60007f7ddd38ab5ed1c16b61ca90eeb9579e29da1ba821cf42d8cdef8f30a31a6a414682356117d56040850160208601615105565b6117e56060860160408701615105565b6117f5608087016060880161523a565b61180560a088016080890161523a565b8760a001358860c001358960e001358a61010001356040516020016118819a99989796959493929190998a5260208a01989098526001600160a01b0396871660408a01529490951660608801529115156080870152151560a086015260c085015260e08401919091526101008301526101208201526101400190565b604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0604083013511156119145760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964207369676e6174757265202273222076616c756500000000006044820152606401610506565b6119216020830183615335565b60ff16601b1480611941575061193a6020830183615335565b60ff16601c145b61198d5760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964207369676e6174757265202276222076616c756500000000006044820152606401610506565b60018361199d6020850185615335565b604080516000815260208181018084529490945260ff9092168282015291850135606082015290840135608082015260a0016020604051602081039080840390855afa1580156119f1573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151949350505050565b82356000908152602081905260409020548390829060ff1615611a865760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b428261010001351015611adb5760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b611b11611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b8261189e565b6001600160a01b0316611b2a6040840160208501615105565b6001600160a01b031614611b805760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b8435600090815260016020526040902054611b9f9060c087013561543c565b841115611bee5760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b843560009081526001602052604081208054869290611c0e9084906153c7565b9091555060009050670de0b6b3a764000060a087013560c0880135611c3388846153ff565b611c3d91906153df565b611c4791906153ff565b611c5191906153df565b90506000670de0b6b3a76400006003600181548110611c8057634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff16611cb484670de0b6b3a76400006153ff565b611cbe91906153df565b611cc891906153df565b90506000611cdc6060890160408a01615105565b90506001600160a01b0381166323b872dd611cfd60408b0160208c01615105565b3385611d098c8961543c565b611d13919061543c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015611d7a57600080fd5b505af1158015611d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db29190615256565b506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166365a963aa611df260608b0160408c01615105565b60e08b013533611e0860408e0160208f01615105565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0394851660048201526024810193909352908316604483015290911660648201526084810186905260a401602060405180830381600087803b158015611e8057600080fd5b505af1158015611e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb89190615256565b611f045760405162461bcd60e51b815260206004820152601760248201527f7a63546f6b656e2065786368616e6765206661696c65640000000000000000006044820152606401610506565b6001600160a01b0381166323b872dd611f2360408b0160208c01615105565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152306024820152604481018590526064015b602060405180830381600087803b158015611f8a57600080fd5b505af1158015611f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc29190615256565b5033611fd460408a0160208b01615105565b6001600160a01b031689357fc2b841cf870951b686224fb1542371a6f102f38c38b5883c09b96a1124c2254361201060808d0160608e0161523a565b61202060a08e0160808f0161523a565b604080519215158352901515602083015281018c90526060810188905260800160405180910390a45050505050505050565b82356000908152602081905260409020548390829060ff16156120b75760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b42826101000135101561210c5760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b61213c611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b6001600160a01b03166121556040840160208501615105565b6001600160a01b0316146121ab5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b84356000908152600160205260409020546121ca9060a087013561543c565b8411156122195760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b8435600090815260016020526040812080548692906122399084906153c7565b9091555060009050670de0b6b3a764000060c087013560a088013561225e88846153ff565b61226891906153df565b61227291906153ff565b61227c91906153df565b90506000670de0b6b3a7640000600380815481106122aa57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff166122de84670de0b6b3a76400006153ff565b6122e891906153df565b6122f291906153df565b905060006123066060890160408a01615105565b90506001600160a01b0381166323b872dd61232760408b0160208c01615105565b33612332868861543c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561239957600080fd5b505af11580156123ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d19190615256565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663bddbfbe461241160608b0160408c01615105565b60e08b01353361242760408e0160208f01615105565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039485166004820152602481019390935290831660448301529091166064820152608481018a905260a401602060405180830381600087803b15801561249f57600080fd5b505af11580156124b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d79190615256565b6125235760405162461bcd60e51b815260206004820152601560248201527f7661756c742065786368616e6765206661696c656400000000000000000000006044820152606401610506565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b038216906323b872dd90606401611f70565b82356000908152602081905260409020548390829060ff16156125da5760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b42826101000135101561262f5760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b61265f611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b6001600160a01b03166126786040840160208501615105565b6001600160a01b0316146126ce5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b84356000908152600160205260409020546126ed9060a087013561543c565b84111561273c5760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b84356000908152600160205260408120805486929061275c9084906153c7565b9091555060009050670de0b6b3a764000060c087013560a088013561278188846153ff565b61278b91906153df565b61279591906153ff565b61279f91906153df565b90506000670de0b6b3a7640000600380815481106127cd57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff1661280184670de0b6b3a76400006153ff565b61280b91906153df565b61281591906153df565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116638c6b9b4161285760608b0160408c01615105565b60e08b013561286c60408d0160208e01615105565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03938416600482015260248101929092529091166044820152336064820152608481018a905260a401602060405180830381600087803b1580156128e257600080fd5b505af11580156128f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291a9190615256565b6129665760405162461bcd60e51b815260206004820152601560248201527f637573746f6469616c2065786974206661696c656400000000000000000000006044820152606401610506565b60006001600160a01b0382166305e1dc2561298760608c0160408d01615105565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908c01356024820152604401602060405180830381600087803b1580156129ea57600080fd5b505af11580156129fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a229190615128565b6040517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018a90529091506001600160a01b0382169063852a12e390602401602060405180830381600087803b158015612a8057600080fd5b505af1158015612a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab8919061531d565b15612b055760405162461bcd60e51b815260206004820152601960248201527f636f6d706f756e6420726564656d7074696f6e206572726f72000000000000006044820152606401610506565b6000612b1760608b0160408c01615105565b90506001600160a01b03811663a9059cbb612b3860408d0160208e01615105565b612b42888d61543c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015612ba057600080fd5b505af1158015612bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd89190615256565b506001600160a01b03811663a9059cbb33612bf3878961543c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044015b602060405180830381600087803b158015612c5257600080fd5b505af1158015612c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c8a9190615256565b5033612c9c60408c0160208d01615105565b6001600160a01b03168b600001357fc2b841cf870951b686224fb1542371a6f102f38c38b5883c09b96a1124c225438d6060016020810190612cde919061523a565b8e6080016020810190612cf1919061523a565b604080519215158352901515602083015281018e9052606081018a905260800160405180910390a450505050505050505050565b82356000908152602081905260409020548390829060ff1615612d8a5760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b428261010001351015612ddf5760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b612e0f611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b6001600160a01b0316612e286040840160208501615105565b6001600160a01b031614612e7e5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b8435600090815260016020526040902054612e9d9060c087013561543c565b841115612eec5760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b843560009081526001602052604081208054869290612f0c9084906153c7565b9091555060009050670de0b6b3a764000060a087013560c0880135612f3188846153ff565b612f3b91906153df565b612f4591906153ff565b612f4f91906153df565b90506000670de0b6b3a76400006003600181548110612f7e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff16612fb284670de0b6b3a76400006153ff565b612fbc91906153df565b612fc691906153df565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116638c6b9b4161300860608b0160408c01615105565b60e08b01353361301e60408e0160208f01615105565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0394851660048201526024810193909352908316604483015290911660648201526084810186905260a401602060405180830381600087803b15801561309657600080fd5b505af11580156130aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ce9190615256565b61311a5760405162461bcd60e51b815260206004820152601560248201527f637573746f6469616c2065786974206661696c656400000000000000000000006044820152606401610506565b60006001600160a01b0382166305e1dc2561313b60608c0160408d01615105565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908c01356024820152604401602060405180830381600087803b15801561319e57600080fd5b505af11580156131b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131d69190615128565b6040517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018690529091506001600160a01b0382169063852a12e390602401602060405180830381600087803b15801561323457600080fd5b505af1158015613248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061326c919061531d565b156132b95760405162461bcd60e51b815260206004820152601960248201527f636f6d706f756e6420726564656d7074696f6e206572726f72000000000000006044820152606401610506565b60006132cb60608b0160408c01615105565b90506001600160a01b03811663a9059cbb33866132e88d8a61543c565b6132f2919061543c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561335057600080fd5b505af1158015613364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133889190615256565b506001600160a01b03811663a9059cbb6133a860408d0160208e01615105565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018c9052604401612c38565b82356000908152602081905260409020548390829060ff16156134585760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b4282610100013510156134ad5760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b6134dd611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b6001600160a01b03166134f66040840160208501615105565b6001600160a01b03161461354c5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b843560009081526001602052604090205461356b9060c087013561543c565b8411156135ba5760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b8435600090815260016020526040812080548692906135da9084906153c7565b9091555060009050670de0b6b3a764000060a087013560c08801356135ff88846153ff565b61360991906153df565b61361391906153ff565b61361d91906153df565b90506000670de0b6b3a7640000600360028154811061364c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff1661368084670de0b6b3a76400006153ff565b61368a91906153df565b61369491906153df565b905060006136a86060890160408a01615105565b90506001600160a01b0381166323b872dd336136ca60408c0160208d01615105565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604481018a9052606401602060405180830381600087803b15801561373157600080fd5b505af1158015613745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137699190615256565b506001600160a01b0381166323b872dd61378960408b0160208c01615105565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015230602482015260448101869052606401602060405180830381600087803b1580156137ef57600080fd5b505af1158015613803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138279190615256565b507f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b0382166305e1dc2561386a60608d0160408e01615105565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908d01356024820152604401602060405180830381600087803b1580156138cd57600080fd5b505af11580156138e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139059190615128565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038083166004830152602482018890529192509084169063095ea7b390604401602060405180830381600087803b15801561396c57600080fd5b505af1158015613980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139a49190615256565b506040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b0382169063a0712d6890602401602060405180830381600087803b158015613a0057600080fd5b505af1158015613a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a38919061531d565b15613a855760405162461bcd60e51b815260206004820152601560248201527f6d696e74696e672043546f6b656e206661696c656400000000000000000000006044820152606401610506565b6001600160a01b03821663f8e51bcb613aa460608d0160408e01615105565b8c60e001358d6020016020810190613abc9190615105565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039384166004820152602481019290925290911660448201523360648201526084810188905260a401602060405180830381600087803b158015613b3257600080fd5b505af1158015613b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b6a9190615256565b613bb65760405162461bcd60e51b815260206004820152601960248201527f637573746f6469616c20696e697469617465206661696c6564000000000000006044820152606401610506565b6001600160a01b038216633cf9a4e3613bd560608d0160408e01615105565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908d0135602482015233604482015260648101879052608401602060405180830381600087803b158015613c4557600080fd5b505af1158015613c59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c7d9190615256565b613cc95760405162461bcd60e51b815260206004820152601c60248201527f6e6f74696f6e616c20666565207472616e73666572206661696c6564000000006044820152606401610506565b33613cda60408c0160208d01615105565b6001600160a01b03168b600001357f8a438a403cb62fca11be8232092fd51c3b97d93fd1322876d992cedba02baa288d6060016020810190612cde919061523a565b82356000908152602081905260409020548390829060ff1615613d815760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b428261010001351015613dd65760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b613e06611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b6001600160a01b0316613e1f6040840160208501615105565b6001600160a01b031614613e755760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b8435600090815260016020526040902054613e949060a087013561543c565b841115613ee35760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b843560009081526001602052604081208054869290613f039084906153c7565b9091555060009050670de0b6b3a764000060c087013560a0880135613f2888846153ff565b613f3291906153df565b613f3c91906153ff565b613f4691906153df565b90506000670de0b6b3a76400006003600081548110613f7557634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff16613fa984670de0b6b3a76400006153ff565b613fb391906153df565b613fbd91906153df565b90506000613fd16060890160408a01615105565b90506001600160a01b0381166323b872dd613ff260408b0160208c01615105565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015233602482015260448101869052606401602060405180830381600087803b15801561405857600080fd5b505af115801561406c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140909190615256565b506001600160a01b0381166323b872dd33306140ac868c6153c7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561411357600080fd5b505af1158015614127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061414b9190615256565b507f000000000000000000000000000000000000000000000000000000000000000060006001600160a01b0382166305e1dc2561418e60608d0160408e01615105565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908d01356024820152604401602060405180830381600087803b1580156141f157600080fd5b505af1158015614205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142299190615128565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038083166004830152602482018c90529192509084169063095ea7b390604401602060405180830381600087803b15801561429057600080fd5b505af11580156142a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142c89190615256565b506040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018a90526001600160a01b0382169063a0712d6890602401602060405180830381600087803b15801561432457600080fd5b505af1158015614338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061435c919061531d565b156143a95760405162461bcd60e51b815260206004820152601560248201527f6d696e74696e672043546f6b656e204661696c656400000000000000000000006044820152606401610506565b6001600160a01b03821663f8e51bcb6143c860608d0160408e01615105565b8c60e00135338e60200160208101906143e19190615105565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039485166004820152602481019390935290831660448301529091166064820152608481018c905260a401602060405180830381600087803b15801561445957600080fd5b505af115801561446d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144919190615256565b613cc95760405162461bcd60e51b815260206004820152601960248201527f637573746f6469616c20696e697469617465206661696c6564000000000000006044820152606401610506565b82356000908152602081905260409020548390829060ff16156145425760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b4282610100013510156145975760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b6145c7611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b6001600160a01b03166145e06040840160208501615105565b6001600160a01b0316146146365760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b84356000908152600160205260409020546146559060a087013561543c565b8411156146a45760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b8435600090815260016020526040812080548692906146c49084906153c7565b9091555060009050670de0b6b3a764000060c087013560a08801356146e988846153ff565b6146f391906153df565b6146fd91906153ff565b61470791906153df565b90506000670de0b6b3a7640000600360008154811061473657634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff1661476a84670de0b6b3a76400006153ff565b61477491906153df565b61477e91906153df565b90506147906060880160408901615105565b6001600160a01b03166323b872dd336147af60408b0160208c01615105565b846147ba878c61543c565b6147c491906153c7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561482b57600080fd5b505af115801561483f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148639190615256565b506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166365a963aa6148a360608a0160408b01615105565b60e08a01356148b860408c0160208d01615105565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039384166004820152602481019290925290911660448201523360648201526084810189905260a401602060405180830381600087803b15801561492e57600080fd5b505af1158015614942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149669190615256565b6149b25760405162461bcd60e51b815260206004820152601760248201527f7a63546f6b656e2065786368616e6765206661696c65640000000000000000006044820152606401610506565b336149c36040890160208a01615105565b6001600160a01b031688357f8a438a403cb62fca11be8232092fd51c3b97d93fd1322876d992cedba02baa286149ff60808c0160608d0161523a565b614a0f60a08d0160808e0161523a565b604080519215158352901515602083015281018b90526060810187905260800160405180910390a450505050505050565b82356000908152602081905260409020548390829060ff1615614aa55760405162461bcd60e51b815260206004820152600f60248201527f6f726465722063616e63656c6c656400000000000000000000000000000000006044820152606401610506565b428261010001351015614afa5760405162461bcd60e51b815260206004820152600d60248201527f6f726465722065787069726564000000000000000000000000000000000000006044820152606401610506565b614b2a611b0b7f00000000000000000000000000000000000000000000000000000000000000006107a1856117a0565b6001600160a01b0316614b436040840160208501615105565b6001600160a01b031614614b995760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610506565b8435600090815260016020526040902054614bb89060c087013561543c565b841115614c075760405162461bcd60e51b815260206004820152601f60248201527f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006044820152606401610506565b843560009081526001602052604081208054869290614c279084906153c7565b90915550614c3d90506060860160408701615105565b6001600160a01b03166323b872dd33614c5c6040890160208a01615105565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0392831660048201529116602482015260448101879052606401602060405180830381600087803b158015614cc357600080fd5b505af1158015614cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614cfb9190615256565b506000670de0b6b3a764000060a087013560c0880135614d1b88846153ff565b614d2591906153df565b614d2f91906153ff565b614d3991906153df565b90506000670de0b6b3a76400006003600281548110614d6857634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff16614d9c84670de0b6b3a76400006153ff565b614da691906153df565b614db091906153df565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811663bddbfbe4614df260608b0160408c01615105565b60e08b0135614e0760408d0160208e01615105565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039384166004820152602481019290925290911660448201523360648201526084810186905260a401602060405180830381600087803b158015614e7d57600080fd5b505af1158015614e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614eb59190615256565b614f015760405162461bcd60e51b815260206004820152601560248201527f7661756c742065786368616e6765206661696c656400000000000000000000006044820152606401610506565b6001600160a01b038116633cf9a4e3614f2060608b0160408c01615105565b60405160e083811b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b03929092166004820152908b0135602482015233604482015260648101859052608401602060405180830381600087803b158015614f9057600080fd5b505af1158015614fa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614fc89190615256565b6150145760405162461bcd60e51b815260206004820152601c60248201527f6e6f74696f6e616c20666565207472616e73666572206661696c6564000000006044820152606401610506565b3361502560408a0160208b01615105565b6001600160a01b031689357f8a438a403cb62fca11be8232092fd51c3b97d93fd1322876d992cedba02baa2861201060808d0160608e0161523a565b60008083601f840112615072578182fd5b50813567ffffffffffffffff811115615089578182fd5b6020830191508360206060830285010111156150a457600080fd5b9250929050565b60008083601f8401126150bc578182fd5b50813567ffffffffffffffff8111156150d3578182fd5b6020830191508360208260051b85010111156150a457600080fd5b803561ffff8116811461510057600080fd5b919050565b600060208284031215615116578081fd5b8135615121816154a2565b9392505050565b600060208284031215615139578081fd5b8151615121816154a2565b600080600060608486031215615158578182fd5b8335615163816154a2565b95602085013595506040909401359392505050565b60008060008060008060608789031215615190578182fd5b863567ffffffffffffffff808211156151a7578384fd5b818901915089601f8301126151ba578384fd5b8135818111156151c8578485fd5b8a6020610120830285010111156151dd578485fd5b6020928301985096509088013590808211156151f7578384fd5b6152038a838b016150ab565b9096509450604089013591508082111561521b578384fd5b5061522889828a01615061565b979a9699509497509295939492505050565b60006020828403121561524b578081fd5b8135615121816154ba565b600060208284031215615267578081fd5b8151615121816154ba565b600060208284031215615283578081fd5b5035919050565b60008082840361018081121561529e578283fd5b610120808212156152ad578384fd5b84935060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee0830112156152df578283fd5b92959390920193505050565b600080604083850312156152fd578182fd5b615306836150ee565b9150615314602084016150ee565b90509250929050565b60006020828403121561532e578081fd5b5051919050565b600060208284031215615346578081fd5b813560ff81168114615121578182fd5b6000602080835283518082850152825b8181101561538257858101830151858201604001528201615366565b818111156153935783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082198211156153da576153da61548c565b500190565b6000826153fa57634e487b7160e01b81526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156154375761543761548c565b500290565b60008282101561544e5761544e61548c565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156154855761548561548c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146154b757600080fd5b50565b80151581146154b757600080fdfea264697066735822122082afe342a08f51787b18170d5d35acba04ccb7176baf231f5e42af1d1a9bebea64736f6c63430008040033"

// DeploySwivel deploys a new Ethereum contract, binding an instance of Swivel to it.
func DeploySwivel(auth *bind.TransactOpts, backend bind.ContractBackend, m common.Address) (common.Address, *types.Transaction, *Swivel, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SwivelBin), backend, m)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// Swivel is an auto generated Go binding around an Ethereum contract.
type Swivel struct {
	SwivelCaller     // Read-only binding to the contract
	SwivelTransactor // Write-only binding to the contract
	SwivelFilterer   // Log filterer for contract events
}

// SwivelCaller is an auto generated read-only Go binding around an Ethereum contract.
type SwivelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SwivelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwivelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwivelSession struct {
	Contract     *Swivel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwivelCallerSession struct {
	Contract *SwivelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SwivelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwivelTransactorSession struct {
	Contract     *SwivelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelRaw is an auto generated low-level Go binding around an Ethereum contract.
type SwivelRaw struct {
	Contract *Swivel // Generic contract binding to access the raw methods on
}

// SwivelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwivelCallerRaw struct {
	Contract *SwivelCaller // Generic read-only contract binding to access the raw methods on
}

// SwivelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwivelTransactorRaw struct {
	Contract *SwivelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSwivel creates a new instance of Swivel, bound to a specific deployed contract.
func NewSwivel(address common.Address, backend bind.ContractBackend) (*Swivel, error) {
	contract, err := bindSwivel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// NewSwivelCaller creates a new read-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelCaller(address common.Address, caller bind.ContractCaller) (*SwivelCaller, error) {
	contract, err := bindSwivel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelCaller{contract: contract}, nil
}

// NewSwivelTransactor creates a new write-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelTransactor(address common.Address, transactor bind.ContractTransactor) (*SwivelTransactor, error) {
	contract, err := bindSwivel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelTransactor{contract: contract}, nil
}

// NewSwivelFilterer creates a new log filterer instance of Swivel, bound to a specific deployed contract.
func NewSwivelFilterer(address common.Address, filterer bind.ContractFilterer) (*SwivelFilterer, error) {
	contract, err := bindSwivel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwivelFilterer{contract: contract}, nil
}

// bindSwivel binds a generic wrapper to an already deployed contract.
func bindSwivel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.SwivelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transact(opts, method, params...)
}

// HOLD is a free data retrieval call binding the contract method 0xd0886f97.
//
// Solidity: function HOLD() view returns(uint256)
func (_Swivel *SwivelCaller) HOLD(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "HOLD")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// HOLD is a free data retrieval call binding the contract method 0xd0886f97.
//
// Solidity: function HOLD() view returns(uint256)
func (_Swivel *SwivelSession) HOLD() (*big.Int, error) {
	return _Swivel.Contract.HOLD(&_Swivel.CallOpts)
}

// HOLD is a free data retrieval call binding the contract method 0xd0886f97.
//
// Solidity: function HOLD() view returns(uint256)
func (_Swivel *SwivelCallerSession) HOLD() (*big.Int, error) {
	return _Swivel.Contract.HOLD(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCaller) NAME(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "NAME")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCallerSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCallerSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Swivel *SwivelCallerSession) Admin() (common.Address, error) {
	return _Swivel.Contract.Admin(&_Swivel.CallOpts)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCaller) Cancelled(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "cancelled", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCallerSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Domain is a free data retrieval call binding the contract method 0xc2fb26a6.
//
// Solidity: function domain() view returns(bytes32)
func (_Swivel *SwivelCaller) Domain(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "domain")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// Domain is a free data retrieval call binding the contract method 0xc2fb26a6.
//
// Solidity: function domain() view returns(bytes32)
func (_Swivel *SwivelSession) Domain() ([32]byte, error) {
	return _Swivel.Contract.Domain(&_Swivel.CallOpts)
}

// Domain is a free data retrieval call binding the contract method 0xc2fb26a6.
//
// Solidity: function domain() view returns(bytes32)
func (_Swivel *SwivelCallerSession) Domain() ([32]byte, error) {
	return _Swivel.Contract.Domain(&_Swivel.CallOpts)
}

// Fenominator is a free data retrieval call binding the contract method 0x33c810e9.
//
// Solidity: function fenominator(uint256 ) view returns(uint16)
func (_Swivel *SwivelCaller) Fenominator(opts *bind.CallOpts, arg0 *big.Int) (uint16, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "fenominator", arg0)

	if err != nil {
		return *new(uint16), err
	}

	out0 := *abi.ConvertType(out[0], new(uint16)).(*uint16)

	return out0, err

}

// Fenominator is a free data retrieval call binding the contract method 0x33c810e9.
//
// Solidity: function fenominator(uint256 ) view returns(uint16)
func (_Swivel *SwivelSession) Fenominator(arg0 *big.Int) (uint16, error) {
	return _Swivel.Contract.Fenominator(&_Swivel.CallOpts, arg0)
}

// Fenominator is a free data retrieval call binding the contract method 0x33c810e9.
//
// Solidity: function fenominator(uint256 ) view returns(uint16)
func (_Swivel *SwivelCallerSession) Fenominator(arg0 *big.Int) (uint16, error) {
	return _Swivel.Contract.Fenominator(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCaller) Filled(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "filled", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Swivel *SwivelCaller) MarketPlace(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "marketPlace")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Swivel *SwivelSession) MarketPlace() (common.Address, error) {
	return _Swivel.Contract.MarketPlace(&_Swivel.CallOpts)
}

// MarketPlace is a free data retrieval call binding the contract method 0x2e25d2a6.
//
// Solidity: function marketPlace() view returns(address)
func (_Swivel *SwivelCallerSession) MarketPlace() (common.Address, error) {
	return _Swivel.Contract.MarketPlace(&_Swivel.CallOpts)
}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(uint256)
func (_Swivel *SwivelCaller) Withdrawals(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "withdrawals", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(uint256)
func (_Swivel *SwivelSession) Withdrawals(arg0 common.Address) (*big.Int, error) {
	return _Swivel.Contract.Withdrawals(&_Swivel.CallOpts, arg0)
}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Withdrawals(arg0 common.Address) (*big.Int, error) {
	return _Swivel.Contract.Withdrawals(&_Swivel.CallOpts, arg0)
}

// BlockWithdrawal is a paid mutator transaction binding the contract method 0xa102e384.
//
// Solidity: function blockWithdrawal(address e) returns()
func (_Swivel *SwivelTransactor) BlockWithdrawal(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "blockWithdrawal", e)
}

// BlockWithdrawal is a paid mutator transaction binding the contract method 0xa102e384.
//
// Solidity: function blockWithdrawal(address e) returns()
func (_Swivel *SwivelSession) BlockWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.BlockWithdrawal(&_Swivel.TransactOpts, e)
}

// BlockWithdrawal is a paid mutator transaction binding the contract method 0xa102e384.
//
// Solidity: function blockWithdrawal(address e) returns()
func (_Swivel *SwivelTransactorSession) BlockWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.BlockWithdrawal(&_Swivel.TransactOpts, e)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) Cancel(opts *bind.TransactOpts, o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "cancel", o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x3e1608b4.
//
// Solidity: function cancel((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// CombineTokens is a paid mutator transaction binding the contract method 0x0908ff2d.
//
// Solidity: function combineTokens(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactor) CombineTokens(opts *bind.TransactOpts, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "combineTokens", u, m, a)
}

// CombineTokens is a paid mutator transaction binding the contract method 0x0908ff2d.
//
// Solidity: function combineTokens(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelSession) CombineTokens(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.CombineTokens(&_Swivel.TransactOpts, u, m, a)
}

// CombineTokens is a paid mutator transaction binding the contract method 0x0908ff2d.
//
// Solidity: function combineTokens(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactorSession) CombineTokens(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.CombineTokens(&_Swivel.TransactOpts, u, m, a)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Exit(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "exit", o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Exit is a paid mutator transaction binding the contract method 0xaba28701.
//
// Solidity: function exit((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Exit(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Exit(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) Initiate(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "initiate", o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// Initiate is a paid mutator transaction binding the contract method 0xd2144f58.
//
// Solidity: function initiate((bytes32,address,address,bool,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) Initiate(o []HashOrder, a []*big.Int, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Initiate(&_Swivel.TransactOpts, o, a, c)
}

// ScheduleWithdrawal is a paid mutator transaction binding the contract method 0xf8eaad35.
//
// Solidity: function scheduleWithdrawal(address e) returns()
func (_Swivel *SwivelTransactor) ScheduleWithdrawal(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "scheduleWithdrawal", e)
}

// ScheduleWithdrawal is a paid mutator transaction binding the contract method 0xf8eaad35.
//
// Solidity: function scheduleWithdrawal(address e) returns()
func (_Swivel *SwivelSession) ScheduleWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.ScheduleWithdrawal(&_Swivel.TransactOpts, e)
}

// ScheduleWithdrawal is a paid mutator transaction binding the contract method 0xf8eaad35.
//
// Solidity: function scheduleWithdrawal(address e) returns()
func (_Swivel *SwivelTransactorSession) ScheduleWithdrawal(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.ScheduleWithdrawal(&_Swivel.TransactOpts, e)
}

// SetFee is a paid mutator transaction binding the contract method 0x99b64de1.
//
// Solidity: function setFee(uint16 t, uint16 d) returns(bool)
func (_Swivel *SwivelTransactor) SetFee(opts *bind.TransactOpts, t uint16, d uint16) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "setFee", t, d)
}

// SetFee is a paid mutator transaction binding the contract method 0x99b64de1.
//
// Solidity: function setFee(uint16 t, uint16 d) returns(bool)
func (_Swivel *SwivelSession) SetFee(t uint16, d uint16) (*types.Transaction, error) {
	return _Swivel.Contract.SetFee(&_Swivel.TransactOpts, t, d)
}

// SetFee is a paid mutator transaction binding the contract method 0x99b64de1.
//
// Solidity: function setFee(uint16 t, uint16 d) returns(bool)
func (_Swivel *SwivelTransactorSession) SetFee(t uint16, d uint16) (*types.Transaction, error) {
	return _Swivel.Contract.SetFee(&_Swivel.TransactOpts, t, d)
}

// SplitUnderlying is a paid mutator transaction binding the contract method 0x92ae3764.
//
// Solidity: function splitUnderlying(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactor) SplitUnderlying(opts *bind.TransactOpts, u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "splitUnderlying", u, m, a)
}

// SplitUnderlying is a paid mutator transaction binding the contract method 0x92ae3764.
//
// Solidity: function splitUnderlying(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelSession) SplitUnderlying(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.SplitUnderlying(&_Swivel.TransactOpts, u, m, a)
}

// SplitUnderlying is a paid mutator transaction binding the contract method 0x92ae3764.
//
// Solidity: function splitUnderlying(address u, uint256 m, uint256 a) returns(bool)
func (_Swivel *SwivelTransactorSession) SplitUnderlying(u common.Address, m *big.Int, a *big.Int) (*types.Transaction, error) {
	return _Swivel.Contract.SplitUnderlying(&_Swivel.TransactOpts, u, m, a)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns()
func (_Swivel *SwivelTransactor) Withdraw(opts *bind.TransactOpts, e common.Address) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "withdraw", e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns()
func (_Swivel *SwivelSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.Withdraw(&_Swivel.TransactOpts, e)
}

// Withdraw is a paid mutator transaction binding the contract method 0x51cff8d9.
//
// Solidity: function withdraw(address e) returns()
func (_Swivel *SwivelTransactorSession) Withdraw(e common.Address) (*types.Transaction, error) {
	return _Swivel.Contract.Withdraw(&_Swivel.TransactOpts, e)
}

// SwivelCancelIterator is returned from FilterCancel and is used to iterate over the raw logs and unpacked data for Cancel events raised by the Swivel contract.
type SwivelCancelIterator struct {
	Event *SwivelCancel // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelCancelIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelCancel)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelCancel)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelCancelIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelCancelIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelCancel represents a Cancel event raised by the Swivel contract.
type SwivelCancel struct {
	Key [32]byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterCancel is a free log retrieval operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) FilterCancel(opts *bind.FilterOpts, key [][32]byte) (*SwivelCancelIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelCancelIterator{contract: _Swivel.contract, event: "Cancel", logs: logs, sub: sub}, nil
}

// WatchCancel is a free log subscription operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) WatchCancel(opts *bind.WatchOpts, sink chan<- *SwivelCancel, key [][32]byte) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelCancel)
				if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCancel is a log parse operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) ParseCancel(log types.Log) (*SwivelCancel, error) {
	event := new(SwivelCancel)
	if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelExitIterator is returned from FilterExit and is used to iterate over the raw logs and unpacked data for Exit events raised by the Swivel contract.
type SwivelExitIterator struct {
	Event *SwivelExit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelExitIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelExit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelExit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelExitIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelExitIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelExit represents a Exit event raised by the Swivel contract.
type SwivelExit struct {
	Key    [32]byte
	Maker  common.Address
	Vault  bool
	Exit   bool
	Sender common.Address
	Amount *big.Int
	Filled *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterExit is a free log retrieval operation binding the contract event 0xc2b841cf870951b686224fb1542371a6f102f38c38b5883c09b96a1124c22543.
//
// Solidity: event Exit(bytes32 indexed key, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) FilterExit(opts *bind.FilterOpts, key [][32]byte, maker []common.Address, sender []common.Address) (*SwivelExitIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}
	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Exit", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &SwivelExitIterator{contract: _Swivel.contract, event: "Exit", logs: logs, sub: sub}, nil
}

// WatchExit is a free log subscription operation binding the contract event 0xc2b841cf870951b686224fb1542371a6f102f38c38b5883c09b96a1124c22543.
//
// Solidity: event Exit(bytes32 indexed key, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) WatchExit(opts *bind.WatchOpts, sink chan<- *SwivelExit, key [][32]byte, maker []common.Address, sender []common.Address) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}
	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Exit", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelExit)
				if err := _Swivel.contract.UnpackLog(event, "Exit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseExit is a log parse operation binding the contract event 0xc2b841cf870951b686224fb1542371a6f102f38c38b5883c09b96a1124c22543.
//
// Solidity: event Exit(bytes32 indexed key, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) ParseExit(log types.Log) (*SwivelExit, error) {
	event := new(SwivelExit)
	if err := _Swivel.contract.UnpackLog(event, "Exit", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelInitiateIterator is returned from FilterInitiate and is used to iterate over the raw logs and unpacked data for Initiate events raised by the Swivel contract.
type SwivelInitiateIterator struct {
	Event *SwivelInitiate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelInitiateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelInitiate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelInitiate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelInitiateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelInitiateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelInitiate represents a Initiate event raised by the Swivel contract.
type SwivelInitiate struct {
	Key    [32]byte
	Maker  common.Address
	Vault  bool
	Exit   bool
	Sender common.Address
	Amount *big.Int
	Filled *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterInitiate is a free log retrieval operation binding the contract event 0x8a438a403cb62fca11be8232092fd51c3b97d93fd1322876d992cedba02baa28.
//
// Solidity: event Initiate(bytes32 indexed key, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) FilterInitiate(opts *bind.FilterOpts, key [][32]byte, maker []common.Address, sender []common.Address) (*SwivelInitiateIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}
	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Initiate", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &SwivelInitiateIterator{contract: _Swivel.contract, event: "Initiate", logs: logs, sub: sub}, nil
}

// WatchInitiate is a free log subscription operation binding the contract event 0x8a438a403cb62fca11be8232092fd51c3b97d93fd1322876d992cedba02baa28.
//
// Solidity: event Initiate(bytes32 indexed key, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) WatchInitiate(opts *bind.WatchOpts, sink chan<- *SwivelInitiate, key [][32]byte, maker []common.Address, sender []common.Address) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}
	var makerRule []interface{}
	for _, makerItem := range maker {
		makerRule = append(makerRule, makerItem)
	}

	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Initiate", keyRule, makerRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelInitiate)
				if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiate is a log parse operation binding the contract event 0x8a438a403cb62fca11be8232092fd51c3b97d93fd1322876d992cedba02baa28.
//
// Solidity: event Initiate(bytes32 indexed key, address indexed maker, bool vault, bool exit, address indexed sender, uint256 amount, uint256 filled)
func (_Swivel *SwivelFilterer) ParseInitiate(log types.Log) (*SwivelInitiate, error) {
	event := new(SwivelInitiate)
	if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelWithdrawalScheduledIterator is returned from FilterWithdrawalScheduled and is used to iterate over the raw logs and unpacked data for WithdrawalScheduled events raised by the Swivel contract.
type SwivelWithdrawalScheduledIterator struct {
	Event *SwivelWithdrawalScheduled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelWithdrawalScheduledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelWithdrawalScheduled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelWithdrawalScheduled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelWithdrawalScheduledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelWithdrawalScheduledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelWithdrawalScheduled represents a WithdrawalScheduled event raised by the Swivel contract.
type SwivelWithdrawalScheduled struct {
	Token common.Address
	Hold  *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterWithdrawalScheduled is a free log retrieval operation binding the contract event 0xd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd3.
//
// Solidity: event WithdrawalScheduled(address indexed token, uint256 hold)
func (_Swivel *SwivelFilterer) FilterWithdrawalScheduled(opts *bind.FilterOpts, token []common.Address) (*SwivelWithdrawalScheduledIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "WithdrawalScheduled", tokenRule)
	if err != nil {
		return nil, err
	}
	return &SwivelWithdrawalScheduledIterator{contract: _Swivel.contract, event: "WithdrawalScheduled", logs: logs, sub: sub}, nil
}

// WatchWithdrawalScheduled is a free log subscription operation binding the contract event 0xd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd3.
//
// Solidity: event WithdrawalScheduled(address indexed token, uint256 hold)
func (_Swivel *SwivelFilterer) WatchWithdrawalScheduled(opts *bind.WatchOpts, sink chan<- *SwivelWithdrawalScheduled, token []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "WithdrawalScheduled", tokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelWithdrawalScheduled)
				if err := _Swivel.contract.UnpackLog(event, "WithdrawalScheduled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdrawalScheduled is a log parse operation binding the contract event 0xd9cf0116e5bb6fbe3d257dc8d1ee7ae76c303efeae77f1e93024d2cb218bedd3.
//
// Solidity: event WithdrawalScheduled(address indexed token, uint256 hold)
func (_Swivel *SwivelFilterer) ParseWithdrawalScheduled(log types.Log) (*SwivelWithdrawalScheduled, error) {
	event := new(SwivelWithdrawalScheduled)
	if err := _Swivel.contract.UnpackLog(event, "WithdrawalScheduled", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
