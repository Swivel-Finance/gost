// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package swivel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashOrder is an auto generated low-level Go binding around an user-defined struct.
type HashOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Floating   bool
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Expiry     *big.Int
}

// SigComponents is an auto generated low-level Go binding around an user-defined struct.
type SigComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelABI is the input ABI used to generate the binding from.
const SwivelABI = "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"v\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"agreementKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"Initiate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"agreementKey\",\"type\":\"bytes32\"}],\"name\":\"Release\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CTOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"released\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"release\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"batchFillFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"batchFillFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"o\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"a\",\"type\":\"bytes32[]\"}],\"name\":\"batchRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"fillFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"fillFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"o\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"a\",\"type\":\"bytes32\"}],\"name\":\"releaseFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"o\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"a\",\"type\":\"bytes32\"}],\"name\":\"releaseFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// SwivelBin is the compiled bytecode used for deploying new contracts.
var SwivelBin = "0x60806040523480156200001157600080fd5b5060405162003d9d38038062003d9d83398181016040528101906200003791906200024b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a190620002e3565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161462000127578162000129565b305b9050620001ae6040518060400160405280600e81526020017f53776976656c2046696e616e63650000000000000000000000000000000000008152506040518060400160405280600581526020017f312e302e300000000000000000000000000000000000000000000000000000008152508684620001be60201b6200164c1760201c565b6001819055505050505062000388565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b6000815190506200022e8162000354565b92915050565b60008151905062000245816200036e565b92915050565b6000806000606084860312156200026157600080fd5b6000620002718682870162000234565b935050602062000284868287016200021d565b925050604062000297868287016200021d565b9150509250925092565b6000620002b0601f8362000305565b91507f636f6d706f756e6420746f6b656e2061646472657373207265717569726564006000830152602082019050919050565b60006020820190508181036000830152620002fe81620002a1565b9050919050565b600082825260208201905092915050565b600062000323826200032a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200035f8162000316565b81146200036b57600080fd5b50565b62000379816200034a565b81146200038557600080fd5b50565b613a0580620003986000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b9d28db11610097578063a60caa6311610066578063a60caa63146102d4578063bd18e9fe14610304578063be3b52ec14610334578063ffa1ad741461036d576100f5565b80636b9d28db146102265780637856b727146102565780638c9c71d614610286578063a3f4df7e146102b6576100f5565b806343ea62df116100d357806343ea62df146101785780634ee1586e146101a857806352a9674b146101d8578063547747b7146101f6576100f5565b8063288cdc91146100fa5780632ac126221461012a578063432954111461015a575b600080fd5b610114600480360381019061010f91906129f0565b61038b565b604051610121919061369d565b60405180910390f35b610144600480360381019061013f91906129f0565b6103a3565b60405161015191906132b3565b60405180910390f35b6101626103c3565b60405161016f919061319c565b60405180910390f35b610192600480360381019061018d91906128e5565b6103e7565b60405161019f91906132b3565b60405180910390f35b6101c260048036038101906101bd9190612a93565b6104ee565b6040516101cf91906132b3565b60405180910390f35b6101e061092d565b6040516101ed91906132ce565b60405180910390f35b610210600480360381019061020b9190612a19565b610933565b60405161021d91906132b3565b60405180910390f35b610240600480360381019061023b9190612a55565b610a4b565b60405161024d91906132b3565b60405180910390f35b610270600480360381019061026b9190612a93565b610c1c565b60405161027d91906132b3565b60405180910390f35b6102a0600480360381019061029b91906128e5565b61105b565b6040516102ad91906132b3565b60405180910390f35b6102be611162565b6040516102cb91906133bb565b60405180910390f35b6102ee60048036038101906102e99190612870565b61119b565b6040516102fb91906132b3565b60405180910390f35b61031e60048036038101906103199190612a19565b61141a565b60405161032b91906132b3565b60405180910390f35b61034e60048036038101906103499190612a19565b611538565b6040516103649a999897969594939291906131b7565b60405180910390f35b610375611613565b60405161038291906133bb565b60405180910390f35b60036020528060005260406000206000915090505481565b60026020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b888890508110156104de576104c2898983818110610436577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101000201888884818110610476577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135878787868181106104b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050606002016104ee565b6104cb57600080fd5b80806104d6906138a4565b9150506103ef565b5060019050979650505050505050565b6000848260001515600260008460000135815260200190815260200160002060009054906101000a900460ff1615151461055d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105549061347d565b60405180910390fd5b428260e0013510156105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b906133dd565b60405180910390fd5b6105c16105bb6001546105b6856116ab565b611758565b82611799565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906105ea9190612847565b73ffffffffffffffffffffffffffffffffffffffff1614610640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106379061343d565b60405180910390fd5b60011515876060016020810190610657919061299e565b151514610699576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610690906135dd565b60405180910390fd5b60036000886000013581526020019081526020016000205487608001356106c091906137de565b861115610702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f9906134dd565b60405180910390fd5b6000670de0b6b3a76400008860800135670de0b6b3a7640000896107269190613784565b6107309190613753565b8960a0013561073f9190613784565b6107499190613753565b905060008860400160208101906107609190612847565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8a60200160208101906107919190612847565b30856040518463ffffffff1660e01b81526004016107b193929190613253565b602060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080391906129c7565b610842576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108399061357d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b815260040161087f93929190613253565b602060405180830381600087803b15801561089957600080fd5b505af11580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d191906129c7565b610910576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109079061355d565b60405180910390fd5b61091f8989898b8660016118ee565b945050505050949350505050565b60015481565b600060046000848152602001908152602001600020600083815260200190815260200160002060020160149054906101000a900460ff166109a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a09061353d565b60405180910390fd5b610a43838360046000878152602001908152602001600020600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000888152602001908152602001600020600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d24565b905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16836020016020810190610a779190612847565b73ffffffffffffffffffffffffffffffffffffffff161480610ad657503273ffffffffffffffffffffffffffffffffffffffff16836020016020810190610abe9190612847565b73ffffffffffffffffffffffffffffffffffffffff16145b610b15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0c9061351d565b60405180910390fd5b610b32610b2c600154610b27866116ab565b611758565b83611799565b73ffffffffffffffffffffffffffffffffffffffff16836020016020810190610b5b9190612847565b73ffffffffffffffffffffffffffffffffffffffff1614610bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba89061343d565b60405180910390fd5b6001600260008560000135815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001357fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a60405160405180910390a26001905092915050565b6000848260001515600260008460000135815260200190815260200160002060009054906101000a900460ff16151514610c8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c829061347d565b60405180910390fd5b428260e001351015610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc9906133dd565b60405180910390fd5b610cef610ce9600154610ce4856116ab565b611758565b82611799565b73ffffffffffffffffffffffffffffffffffffffff16826020016020810190610d189190612847565b73ffffffffffffffffffffffffffffffffffffffff1614610d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d659061343d565b60405180910390fd5b60001515876060016020810190610d85919061299e565b151514610dc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbe9061365d565b60405180910390fd5b6003600088600001358152602001908152602001600020548760a00135610dee91906137de565b861115610e30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e27906134dd565b60405180910390fd5b6000670de0b6b3a76400008860a00135670de0b6b3a764000089610e549190613784565b610e5e9190613753565b8960800135610e6d9190613784565b610e779190613753565b90506000886040016020810190610e8e9190612847565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8a6020016020810190610ebf9190612847565b30856040518463ffffffff1660e01b8152600401610edf93929190613253565b602060405180830381600087803b158015610ef957600080fd5b505af1158015610f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3191906129c7565b610f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f679061357d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401610fad93929190613253565b602060405180830381600087803b158015610fc757600080fd5b505af1158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff91906129c7565b61103e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110359061355d565b60405180910390fd5b61104d898989858c60006118ee565b945050505050949350505050565b600080600090505b88889050811015611152576111368989838181106110aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905061010002018888848181106110ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358787878681811061112b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201610c1c565b61113f57600080fd5b808061114a906138a4565b915050611063565b5060019050979650505050505050565b6040518060400160405280600e81526020017f53776976656c2046696e616e636500000000000000000000000000000000000081525081565b600080600090505b8585905081101561140d57600460008787848181106111eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358152602001908152602001600020600085858481811061123b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815260200190815260200160002060020160149054906101000a900460ff1615611332576112ee8686838181106112a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358585848181106112e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135610933565b61132d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113249061341d565b60405180910390fd5b6113fa565b6113ba86868381811061136e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358585848181106113ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013561141a565b6113f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f09061345d565b60405180910390fd5b5b8080611405906138a4565b9150506111a3565b5060019050949350505050565b600080151560046000858152602001908152602001600020600084815260200190815260200160002060020160149054906101000a900460ff16151514611496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148d9061349d565b60405180910390fd5b611530838360046000878152602001908152602001600020600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000888152602001908152602001600020600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d24565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060020160159054906101000a900460ff1690806003015490806004015490806005015490806006015490806007015490508a565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b60007fa3c680804aa3dc3cf9b923a1d0d8b699fcdf013624a69077d1fe6673a236562a60001b82600001358360200160208101906116e99190612847565b8460400160208101906116fc9190612847565b85606001602081019061170f919061299e565b86608001358760a001358860c001358960e0013560405160200161173b999897969594939291906132e9565b604051602081830303815290604052805190602001209050919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0826040013560001c1115611805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fc9061361d565b60405180910390fd5b601b82600001602081019061181a9190612b23565b60ff16148061183e5750601c8260000160208101906118399190612b23565b60ff16145b61187d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611874906134fd565b60405180910390fd5b6001838360000160208101906118939190612b23565b84602001358560400135604051600081526020016040526040516118ba9493929190613376565b6020604051602081039080840390855afa1580156118dc573d6000803e3d6000fd5b50505060206040510351905092915050565b60006118f86125bb565b848160c0018181525050838160e0018181525050600061193d8960400160208101906119249190612847565b8360c001518460e0015161193891906136fd565b612359565b1461197d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611974906135bd565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508860200160208101906119b69190612847565b826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033826020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050886040016020810190611a389190612847565b826040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838260600190151590811515815250508073ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ac757600080fd5b505af1158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff9190612afa565b8260a00181815250508860c001358261010001818152505042826101000151611b2891906136fd565b8261012001818152505081600460008b600001358152602001908152602001600020600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690831515021790555060808201518160020160156101000a81548160ff02191690831515021790555060a0820151816003015560c0820151816004015560e082015181600501556101008201518160060155610120820151816007015590505087600360008b6000013581526020019081526020016000206000828254611cce91906136fd565b925050819055508689600001357fc0c200188c33d4f906980cfd68a1925ffe57aa4a6fb8a043ecda01bd08973c098a33604051611d0c9291906136b8565b60405180910390a36001925050509695505050505050565b600080600460008781526020019081526020016000206000868152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff161515151581526020016002820160159054906101000a900460ff16151515158152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600015158160800151151514611f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f05906134bd565b60405180910390fd5b806101200151421015611f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4d9061367d565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260e001518360c00151611f9291906136fd565b905060006a52b7d2dcc80cd2e40000008460a001516a52b7d2dcc80cd2e40000008573ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ffb57600080fd5b505af115801561200f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120339190612afa565b61203d9190613784565b6120479190613753565b61205191906137de565b905060006a52b7d2dcc80cd2e40000008560e00151836120719190613784565b8660c00151846120819190613784565b61208b91906136fd565b6120959190613753565b905060008560e001518214156120ad578190506120e1565b8560e0015182116120cd57818660e001516120c891906137de565b6120de565b8560e00151826120dd91906137de565b5b90505b60006120f782866120f291906136fd565b612506565b14612137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161212e9061363d565b60405180910390fd5b6000866040015190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8b876040518363ffffffff1660e01b815260040161217b92919061328a565b602060405180830381600087803b15801561219557600080fd5b505af11580156121a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121cd91906129c7565b61220c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612203906133fd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a846040518363ffffffff1660e01b815260040161224792919061328a565b602060405180830381600087803b15801561226157600080fd5b505af1158015612275573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229991906129c7565b6122d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122cf9061359d565b60405180910390fd5b6001600460008e815260200190815260200160002060008d815260200190815260200160002060020160156101000a81548160ff0219169083151502179055508a8c7fa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd9029460405160405180910390a36001975050505050505050949350505050565b6000808390508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016123ba92919061328a565b602060405180830381600087803b1580156123d457600080fd5b505af11580156123e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240c91906129c7565b61244b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612442906135fd565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a0712d68856040518263ffffffff1660e01b81526004016124aa919061369d565b602060405180830381600087803b1580156124c457600080fd5b505af11580156124d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124fc9190612afa565b9250505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663852a12e3836040518263ffffffff1660e01b8152600401612562919061369d565b602060405180830381600087803b15801561257c57600080fd5b505af1158015612590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b49190612afa565b9050919050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000813590506126638161395c565b92915050565b60008083601f84011261267b57600080fd5b8235905067ffffffffffffffff81111561269457600080fd5b6020830191508360208202830111156126ac57600080fd5b9250929050565b60008083601f8401126126c557600080fd5b8235905067ffffffffffffffff8111156126de57600080fd5b6020830191508360608202830111156126f657600080fd5b9250929050565b60008083601f84011261270f57600080fd5b8235905067ffffffffffffffff81111561272857600080fd5b6020830191508361010082028301111561274157600080fd5b9250929050565b60008083601f84011261275a57600080fd5b8235905067ffffffffffffffff81111561277357600080fd5b60208301915083602082028301111561278b57600080fd5b9250929050565b6000813590506127a181613973565b92915050565b6000815190506127b681613973565b92915050565b6000813590506127cb8161398a565b92915050565b6000606082840312156127e357600080fd5b81905092915050565b600061010082840312156127ff57600080fd5b81905092915050565b600081359050612817816139a1565b92915050565b60008151905061282c816139a1565b92915050565b600081359050612841816139b8565b92915050565b60006020828403121561285957600080fd5b600061286784828501612654565b91505092915050565b6000806000806040858703121561288657600080fd5b600085013567ffffffffffffffff8111156128a057600080fd5b6128ac87828801612669565b9450945050602085013567ffffffffffffffff8111156128cb57600080fd5b6128d787828801612669565b925092505092959194509250565b60008060008060008060006080888a03121561290057600080fd5b600088013567ffffffffffffffff81111561291a57600080fd5b6129268a828b016126fd565b9750975050602088013567ffffffffffffffff81111561294557600080fd5b6129518a828b01612748565b955095505060406129648a828b016127bc565b935050606088013567ffffffffffffffff81111561298157600080fd5b61298d8a828b016126b3565b925092505092959891949750929550565b6000602082840312156129b057600080fd5b60006129be84828501612792565b91505092915050565b6000602082840312156129d957600080fd5b60006129e7848285016127a7565b91505092915050565b600060208284031215612a0257600080fd5b6000612a10848285016127bc565b91505092915050565b60008060408385031215612a2c57600080fd5b6000612a3a858286016127bc565b9250506020612a4b858286016127bc565b9150509250929050565b6000806101608385031215612a6957600080fd5b6000612a77858286016127ec565b925050610100612a89858286016127d1565b9150509250929050565b6000806000806101a08587031215612aaa57600080fd5b6000612ab8878288016127ec565b945050610100612aca87828801612808565b935050610120612adc878288016127bc565b925050610140612aee878288016127d1565b91505092959194509250565b600060208284031215612b0c57600080fd5b6000612b1a8482850161281d565b91505092915050565b600060208284031215612b3557600080fd5b6000612b4384828501612832565b91505092915050565b612b5581613812565b82525050565b612b6481613824565b82525050565b612b7381613830565b82525050565b6000612b84826136e1565b612b8e81856136ec565b9350612b9e818560208601613871565b612ba78161394b565b840191505092915050565b6000612bbf6011836136ec565b91507f6f726465722068617320657870697265640000000000000000000000000000006000830152602082019050919050565b6000612bff6018836136ec565b91507f7472616e73666572206f6620746f74616c206661696c656400000000000000006000830152602082019050919050565b6000612c3f6024836136ec565b91507f72656c65617365206f6620666c6f6174696e672061677265656d656e7420666160008301527f696c6564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ca56011836136ec565b91507f696e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b6000612ce56021836136ec565b91507f72656c65617365206f662066697865642061677265656d656e74206661696c6560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d4b6018836136ec565b91507f6f7264657220686173206265656e2063616e63656c6c656400000000000000006000830152602082019050919050565b6000612d8b6017836136ec565b91507f61677265656d656e74206d7573742062652066697865640000000000000000006000830152602082019050919050565b6000612dcb601d836136ec565b91507f61677265656d656e7420697320616c72656164792072656c65617365640000006000830152602082019050919050565b6000612e0b601f836136ec565b91507f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006000830152602082019050919050565b6000612e4b601b836136ec565b91507f696e76616c6964207369676e6174757265202276222076616c756500000000006000830152602082019050919050565b6000612e8b601c836136ec565b91507f6d75737420626520617574686f72697a656420746f2063616e63656c000000006000830152602082019050919050565b6000612ecb601a836136ec565b91507f61677265656d656e74206d75737420626520666c6f6174696e670000000000006000830152602082019050919050565b6000612f0b601a836136ec565b91507f7472616e736665722066726f6d2074616b6572206661696c65640000000000006000830152602082019050919050565b6000612f4b601a836136ec565b91507f7472616e736665722066726f6d206d616b6572206661696c65640000000000006000830152602082019050919050565b6000612f8b6017836136ec565b91507f7472616e73666572206f662064696666206661696c65640000000000000000006000830152602082019050919050565b6000612fcb6015836136ec565b91507f43546f6b656e206d696e74696e67206661696c656400000000000000000000006000830152602082019050919050565b600061300b601f836136ec565b91507f6d7573742062652066696c6c6564206f6e20666c6f6174696e672073696465006000830152602082019050919050565b600061304b601a836136ec565b91507f756e6465726c79696e6720617070726f76616c206661696c65640000000000006000830152602082019050919050565b600061308b601b836136ec565b91507f696e76616c6964207369676e6174757265202273222076616c756500000000006000830152602082019050919050565b60006130cb601c836136ec565b91507f72656465656d20636f6d706f756e6420746f6b656e206661696c6564000000006000830152602082019050919050565b600061310b601c836136ec565b91507f6d7573742062652066696c6c6564206f6e2066697865642073696465000000006000830152602082019050919050565b600061314b601e836136ec565b91507f61677265656d656e74207465726d206973206e6f7420636f6d706c65746500006000830152602082019050919050565b6131878161385a565b82525050565b61319681613864565b82525050565b60006020820190506131b16000830184612b4c565b92915050565b6000610140820190506131cd600083018d612b4c565b6131da602083018c612b4c565b6131e7604083018b612b4c565b6131f4606083018a612b5b565b6132016080830189612b5b565b61320e60a083018861317e565b61321b60c083018761317e565b61322860e083018661317e565b61323661010083018561317e565b61324461012083018461317e565b9b9a5050505050505050505050565b60006060820190506132686000830186612b4c565b6132756020830185612b4c565b613282604083018461317e565b949350505050565b600060408201905061329f6000830185612b4c565b6132ac602083018461317e565b9392505050565b60006020820190506132c86000830184612b5b565b92915050565b60006020820190506132e36000830184612b6a565b92915050565b6000610120820190506132ff600083018c612b6a565b61330c602083018b612b6a565b613319604083018a612b4c565b6133266060830189612b4c565b6133336080830188612b5b565b61334060a083018761317e565b61334d60c083018661317e565b61335a60e083018561317e565b61336861010083018461317e565b9a9950505050505050505050565b600060808201905061338b6000830187612b6a565b613398602083018661318d565b6133a56040830185612b6a565b6133b26060830184612b6a565b95945050505050565b600060208201905081810360008301526133d58184612b79565b905092915050565b600060208201905081810360008301526133f681612bb2565b9050919050565b6000602082019050818103600083015261341681612bf2565b9050919050565b6000602082019050818103600083015261343681612c32565b9050919050565b6000602082019050818103600083015261345681612c98565b9050919050565b6000602082019050818103600083015261347681612cd8565b9050919050565b6000602082019050818103600083015261349681612d3e565b9050919050565b600060208201905081810360008301526134b681612d7e565b9050919050565b600060208201905081810360008301526134d681612dbe565b9050919050565b600060208201905081810360008301526134f681612dfe565b9050919050565b6000602082019050818103600083015261351681612e3e565b9050919050565b6000602082019050818103600083015261353681612e7e565b9050919050565b6000602082019050818103600083015261355681612ebe565b9050919050565b6000602082019050818103600083015261357681612efe565b9050919050565b6000602082019050818103600083015261359681612f3e565b9050919050565b600060208201905081810360008301526135b681612f7e565b9050919050565b600060208201905081810360008301526135d681612fbe565b9050919050565b600060208201905081810360008301526135f681612ffe565b9050919050565b600060208201905081810360008301526136168161303e565b9050919050565b600060208201905081810360008301526136368161307e565b9050919050565b60006020820190508181036000830152613656816130be565b9050919050565b60006020820190508181036000830152613676816130fe565b9050919050565b600060208201905081810360008301526136968161313e565b9050919050565b60006020820190506136b2600083018461317e565b92915050565b60006040820190506136cd600083018561317e565b6136da6020830184612b4c565b9392505050565b600081519050919050565b600082825260208201905092915050565b60006137088261385a565b91506137138361385a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613748576137476138ed565b5b828201905092915050565b600061375e8261385a565b91506137698361385a565b9250826137795761377861391c565b5b828204905092915050565b600061378f8261385a565b915061379a8361385a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156137d3576137d26138ed565b5b828202905092915050565b60006137e98261385a565b91506137f48361385a565b925082821015613807576138066138ed565b5b828203905092915050565b600061381d8261383a565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561388f578082015181840152602081019050613874565b8381111561389e576000848401525b50505050565b60006138af8261385a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156138e2576138e16138ed565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61396581613812565b811461397057600080fd5b50565b61397c81613824565b811461398757600080fd5b50565b61399381613830565b811461399e57600080fd5b50565b6139aa8161385a565b81146139b557600080fd5b50565b6139c181613864565b81146139cc57600080fd5b5056fea264697066735822122073991b8e6bcb39cc669a7e84276817f88a2b3a4eecd03e28d85e7d5bbf3dc15464736f6c63430008000033"

// DeploySwivel deploys a new Ethereum contract, binding an instance of Swivel to it.
func DeploySwivel(auth *bind.TransactOpts, backend bind.ContractBackend, i *big.Int, c common.Address, v common.Address) (common.Address, *types.Transaction, *Swivel, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SwivelBin), backend, i, c, v)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// Swivel is an auto generated Go binding around an Ethereum contract.
type Swivel struct {
	SwivelCaller     // Read-only binding to the contract
	SwivelTransactor // Write-only binding to the contract
	SwivelFilterer   // Log filterer for contract events
}

// SwivelCaller is an auto generated read-only Go binding around an Ethereum contract.
type SwivelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SwivelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwivelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwivelSession struct {
	Contract     *Swivel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwivelCallerSession struct {
	Contract *SwivelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SwivelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwivelTransactorSession struct {
	Contract     *SwivelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelRaw is an auto generated low-level Go binding around an Ethereum contract.
type SwivelRaw struct {
	Contract *Swivel // Generic contract binding to access the raw methods on
}

// SwivelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwivelCallerRaw struct {
	Contract *SwivelCaller // Generic read-only contract binding to access the raw methods on
}

// SwivelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwivelTransactorRaw struct {
	Contract *SwivelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSwivel creates a new instance of Swivel, bound to a specific deployed contract.
func NewSwivel(address common.Address, backend bind.ContractBackend) (*Swivel, error) {
	contract, err := bindSwivel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// NewSwivelCaller creates a new read-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelCaller(address common.Address, caller bind.ContractCaller) (*SwivelCaller, error) {
	contract, err := bindSwivel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelCaller{contract: contract}, nil
}

// NewSwivelTransactor creates a new write-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelTransactor(address common.Address, transactor bind.ContractTransactor) (*SwivelTransactor, error) {
	contract, err := bindSwivel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelTransactor{contract: contract}, nil
}

// NewSwivelFilterer creates a new log filterer instance of Swivel, bound to a specific deployed contract.
func NewSwivelFilterer(address common.Address, filterer bind.ContractFilterer) (*SwivelFilterer, error) {
	contract, err := bindSwivel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwivelFilterer{contract: contract}, nil
}

// bindSwivel binds a generic wrapper to an already deployed contract.
func bindSwivel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.SwivelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transact(opts, method, params...)
}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelCaller) CTOKEN(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "CTOKEN")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelSession) CTOKEN() (common.Address, error) {
	return _Swivel.Contract.CTOKEN(&_Swivel.CallOpts)
}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelCallerSession) CTOKEN() (common.Address, error) {
	return _Swivel.Contract.CTOKEN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCaller) DOMAIN(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "DOMAIN")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCallerSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCaller) NAME(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "NAME")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCallerSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCallerSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelCaller) Agreements(opts *bind.CallOpts, arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "agreements", arg0, arg1)

	outstruct := new(struct {
		Maker      common.Address
		Taker      common.Address
		Underlying common.Address
		Floating   bool
		Released   bool
		Rate       *big.Int
		Principal  *big.Int
		Interest   *big.Int
		Duration   *big.Int
		Release    *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Maker = out[0].(common.Address)
	outstruct.Taker = out[1].(common.Address)
	outstruct.Underlying = out[2].(common.Address)
	outstruct.Floating = out[3].(bool)
	outstruct.Released = out[4].(bool)
	outstruct.Rate = out[5].(*big.Int)
	outstruct.Principal = out[6].(*big.Int)
	outstruct.Interest = out[7].(*big.Int)
	outstruct.Duration = out[8].(*big.Int)
	outstruct.Release = out[9].(*big.Int)

	return *outstruct, err

}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelSession) Agreements(arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	return _Swivel.Contract.Agreements(&_Swivel.CallOpts, arg0, arg1)
}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelCallerSession) Agreements(arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	return _Swivel.Contract.Agreements(&_Swivel.CallOpts, arg0, arg1)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCaller) Cancelled(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "cancelled", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCallerSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCaller) Filled(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "filled", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// BatchFillFixed is a paid mutator transaction binding the contract method 0x8c9c71d6.
//
// Solidity: function batchFillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) BatchFillFixed(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "batchFillFixed", o, a, k, c)
}

// BatchFillFixed is a paid mutator transaction binding the contract method 0x8c9c71d6.
//
// Solidity: function batchFillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) BatchFillFixed(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchFillFixed is a paid mutator transaction binding the contract method 0x8c9c71d6.
//
// Solidity: function batchFillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) BatchFillFixed(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchFillFloating is a paid mutator transaction binding the contract method 0x43ea62df.
//
// Solidity: function batchFillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) BatchFillFloating(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "batchFillFloating", o, a, k, c)
}

// BatchFillFloating is a paid mutator transaction binding the contract method 0x43ea62df.
//
// Solidity: function batchFillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) BatchFillFloating(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchFillFloating is a paid mutator transaction binding the contract method 0x43ea62df.
//
// Solidity: function batchFillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) BatchFillFloating(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchRelease is a paid mutator transaction binding the contract method 0xa60caa63.
//
// Solidity: function batchRelease(bytes32[] o, bytes32[] a) returns(bool)
func (_Swivel *SwivelTransactor) BatchRelease(opts *bind.TransactOpts, o [][32]byte, a [][32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "batchRelease", o, a)
}

// BatchRelease is a paid mutator transaction binding the contract method 0xa60caa63.
//
// Solidity: function batchRelease(bytes32[] o, bytes32[] a) returns(bool)
func (_Swivel *SwivelSession) BatchRelease(o [][32]byte, a [][32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.BatchRelease(&_Swivel.TransactOpts, o, a)
}

// BatchRelease is a paid mutator transaction binding the contract method 0xa60caa63.
//
// Solidity: function batchRelease(bytes32[] o, bytes32[] a) returns(bool)
func (_Swivel *SwivelTransactorSession) BatchRelease(o [][32]byte, a [][32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.BatchRelease(&_Swivel.TransactOpts, o, a)
}

// Cancel is a paid mutator transaction binding the contract method 0x6b9d28db.
//
// Solidity: function cancel((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) Cancel(opts *bind.TransactOpts, o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "cancel", o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x6b9d28db.
//
// Solidity: function cancel((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x6b9d28db.
//
// Solidity: function cancel((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x7856b727.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) FillFixed(opts *bind.TransactOpts, o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "fillFixed", o, a, k, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x7856b727.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) FillFixed(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x7856b727.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) FillFixed(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x4ee1586e.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) FillFloating(opts *bind.TransactOpts, o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "fillFloating", o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x4ee1586e.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) FillFloating(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x4ee1586e.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) FillFloating(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactor) ReleaseFixed(opts *bind.TransactOpts, o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "releaseFixed", o, a)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelSession) ReleaseFixed(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFixed(&_Swivel.TransactOpts, o, a)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactorSession) ReleaseFixed(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFixed(&_Swivel.TransactOpts, o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactor) ReleaseFloating(opts *bind.TransactOpts, o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "releaseFloating", o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelSession) ReleaseFloating(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFloating(&_Swivel.TransactOpts, o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactorSession) ReleaseFloating(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFloating(&_Swivel.TransactOpts, o, a)
}

// SwivelCancelIterator is returned from FilterCancel and is used to iterate over the raw logs and unpacked data for Cancel events raised by the Swivel contract.
type SwivelCancelIterator struct {
	Event *SwivelCancel // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelCancelIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelCancel)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelCancel)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelCancelIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelCancelIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelCancel represents a Cancel event raised by the Swivel contract.
type SwivelCancel struct {
	Key [32]byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterCancel is a free log retrieval operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) FilterCancel(opts *bind.FilterOpts, key [][32]byte) (*SwivelCancelIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelCancelIterator{contract: _Swivel.contract, event: "Cancel", logs: logs, sub: sub}, nil
}

// WatchCancel is a free log subscription operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) WatchCancel(opts *bind.WatchOpts, sink chan<- *SwivelCancel, key [][32]byte) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelCancel)
				if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCancel is a log parse operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) ParseCancel(log types.Log) (*SwivelCancel, error) {
	event := new(SwivelCancel)
	if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelInitiateIterator is returned from FilterInitiate and is used to iterate over the raw logs and unpacked data for Initiate events raised by the Swivel contract.
type SwivelInitiateIterator struct {
	Event *SwivelInitiate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelInitiateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelInitiate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelInitiate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelInitiateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelInitiateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelInitiate represents a Initiate event raised by the Swivel contract.
type SwivelInitiate struct {
	OrderKey     [32]byte
	AgreementKey [32]byte
	Filled       *big.Int
	Taker        common.Address
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterInitiate is a free log retrieval operation binding the contract event 0xc0c200188c33d4f906980cfd68a1925ffe57aa4a6fb8a043ecda01bd08973c09.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey, uint256 filled, address taker)
func (_Swivel *SwivelFilterer) FilterInitiate(opts *bind.FilterOpts, orderKey [][32]byte, agreementKey [][32]byte) (*SwivelInitiateIterator, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Initiate", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelInitiateIterator{contract: _Swivel.contract, event: "Initiate", logs: logs, sub: sub}, nil
}

// WatchInitiate is a free log subscription operation binding the contract event 0xc0c200188c33d4f906980cfd68a1925ffe57aa4a6fb8a043ecda01bd08973c09.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey, uint256 filled, address taker)
func (_Swivel *SwivelFilterer) WatchInitiate(opts *bind.WatchOpts, sink chan<- *SwivelInitiate, orderKey [][32]byte, agreementKey [][32]byte) (event.Subscription, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Initiate", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelInitiate)
				if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiate is a log parse operation binding the contract event 0xc0c200188c33d4f906980cfd68a1925ffe57aa4a6fb8a043ecda01bd08973c09.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey, uint256 filled, address taker)
func (_Swivel *SwivelFilterer) ParseInitiate(log types.Log) (*SwivelInitiate, error) {
	event := new(SwivelInitiate)
	if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelReleaseIterator is returned from FilterRelease and is used to iterate over the raw logs and unpacked data for Release events raised by the Swivel contract.
type SwivelReleaseIterator struct {
	Event *SwivelRelease // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelReleaseIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelRelease)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelRelease)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelReleaseIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelReleaseIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelRelease represents a Release event raised by the Swivel contract.
type SwivelRelease struct {
	OrderKey     [32]byte
	AgreementKey [32]byte
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterRelease is a free log retrieval operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) FilterRelease(opts *bind.FilterOpts, orderKey [][32]byte, agreementKey [][32]byte) (*SwivelReleaseIterator, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Release", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelReleaseIterator{contract: _Swivel.contract, event: "Release", logs: logs, sub: sub}, nil
}

// WatchRelease is a free log subscription operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) WatchRelease(opts *bind.WatchOpts, sink chan<- *SwivelRelease, orderKey [][32]byte, agreementKey [][32]byte) (event.Subscription, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Release", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelRelease)
				if err := _Swivel.contract.UnpackLog(event, "Release", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRelease is a log parse operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) ParseRelease(log types.Log) (*SwivelRelease, error) {
	event := new(SwivelRelease)
	if err := _Swivel.contract.UnpackLog(event, "Release", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
