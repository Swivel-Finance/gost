// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package swivel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashOrder is an auto generated low-level Go binding around an user-defined struct.
type HashOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Floating   bool
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Expiry     *big.Int
}

// SigComponents is an auto generated low-level Go binding around an user-defined struct.
type SigComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelABI is the input ABI used to generate the binding from.
const SwivelABI = "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"v\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"agreementKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"}],\"name\":\"Initiate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"agreementKey\",\"type\":\"bytes32\"}],\"name\":\"Release\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CTOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"released\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"release\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"batchFillFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order[]\",\"name\":\"o\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"a\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components[]\",\"name\":\"c\",\"type\":\"tuple[]\"}],\"name\":\"batchFillFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"o\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"a\",\"type\":\"bytes32[]\"}],\"name\":\"batchRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"fillFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"fillFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"o\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"a\",\"type\":\"bytes32\"}],\"name\":\"releaseFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"o\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"a\",\"type\":\"bytes32\"}],\"name\":\"releaseFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// SwivelBin is the compiled bytecode used for deploying new contracts.
var SwivelBin = "0x60806040523480156200001157600080fd5b5060405162003bb438038062003bb483398181016040528101906200003791906200024b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a190620002e3565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161462000127578162000129565b305b9050620001ae6040518060400160405280600e81526020017f53776976656c2046696e616e63650000000000000000000000000000000000008152506040518060400160405280600581526020017f312e302e300000000000000000000000000000000000000000000000000000008152508684620001be60201b620012c01760201c565b6001819055505050505062000388565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b6000815190506200022e8162000354565b92915050565b60008151905062000245816200036e565b92915050565b6000806000606084860312156200026157600080fd5b6000620002718682870162000234565b935050602062000284868287016200021d565b925050604062000297868287016200021d565b9150509250925092565b6000620002b0601f8362000305565b91507f636f6d706f756e6420746f6b656e2061646472657373207265717569726564006000830152602082019050919050565b60006020820190508181036000830152620002fe81620002a1565b9050919050565b600082825260208201905092915050565b600062000323826200032a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200035f8162000316565b81146200036b57600080fd5b50565b62000379816200034a565b81146200038557600080fd5b50565b61381c80620003986000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b9d28db11610097578063a60caa6311610066578063a60caa63146102d4578063bd18e9fe14610304578063be3b52ec14610334578063ffa1ad741461036d576100f5565b80636b9d28db146102265780637856b727146102565780638c9c71d614610286578063a3f4df7e146102b6576100f5565b806343ea62df116100d357806343ea62df146101785780634ee1586e146101a857806352a9674b146101d8578063547747b7146101f6576100f5565b8063288cdc91146100fa5780632ac126221461012a578063432954111461015a575b600080fd5b610114600480360381019061010f9190612830565b61038b565b60405161012191906134dd565b60405180910390f35b610144600480360381019061013f9190612830565b6103a3565b60405161015191906130f3565b60405180910390f35b6101626103c3565b60405161016f9190612fdc565b60405180910390f35b610192600480360381019061018d9190612725565b6103e7565b60405161019f91906130f3565b60405180910390f35b6101c260048036038101906101bd91906128d3565b6104ee565b6040516101cf91906130f3565b60405180910390f35b6101e0610767565b6040516101ed919061310e565b60405180910390f35b610210600480360381019061020b9190612859565b61076d565b60405161021d91906130f3565b60405180910390f35b610240600480360381019061023b9190612895565b610885565b60405161024d91906130f3565b60405180910390f35b610270600480360381019061026b91906128d3565b610a56565b60405161027d91906130f3565b60405180910390f35b6102a0600480360381019061029b9190612725565b610ccf565b6040516102ad91906130f3565b60405180910390f35b6102be610dd6565b6040516102cb91906131fb565b60405180910390f35b6102ee60048036038101906102e991906126b0565b610e0f565b6040516102fb91906130f3565b60405180910390f35b61031e60048036038101906103199190612859565b61108e565b60405161032b91906130f3565b60405180910390f35b61034e60048036038101906103499190612859565b6111ac565b6040516103649a99989796959493929190612ff7565b60405180910390f35b610375611287565b60405161038291906131fb565b60405180910390f35b60036020528060005260406000206000915090505481565b60026020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b888890508110156104de576104c2898983818110610436577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101000201888884818110610476577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135878787868181106104b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050606002016104ee565b6104cb57600080fd5b80806104d6906136bb565b9150506103ef565b5060019050979650505050505050565b6000848260001515600260008460000135815260200190815260200160002060009054906101000a900460ff1615151461055d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610554906132bd565b60405180910390fd5b428260e0013510156105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9061321d565b60405180910390fd5b6105c16105bb6001546105b68561131f565b6113cc565b8261140d565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906105ea9190612687565b73ffffffffffffffffffffffffffffffffffffffff1614610640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106379061327d565b60405180910390fd5b6001151587606001602081019061065791906127de565b151514610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106909061341d565b60405180910390fd5b60036000886000013581526020019081526020016000205487608001356106c091906135f5565b861115610702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f99061331d565b60405180910390fd5b6000670de0b6b3a76400008860800135670de0b6b3a764000089610726919061359b565b610730919061356a565b8960a0013561073f919061359b565b610749919061356a565b905061075a8888888a856001611562565b9350505050949350505050565b60015481565b600060046000848152602001908152602001600020600083815260200190815260200160002060020160149054906101000a900460ff166107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da9061337d565b60405180910390fd5b61087d838360046000878152602001908152602001600020600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000888152602001908152602001600020600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b64565b905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff168360200160208101906108b19190612687565b73ffffffffffffffffffffffffffffffffffffffff16148061091057503273ffffffffffffffffffffffffffffffffffffffff168360200160208101906108f89190612687565b73ffffffffffffffffffffffffffffffffffffffff16145b61094f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109469061335d565b60405180910390fd5b61096c6109666001546109618661131f565b6113cc565b8361140d565b73ffffffffffffffffffffffffffffffffffffffff168360200160208101906109959190612687565b73ffffffffffffffffffffffffffffffffffffffff16146109eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e29061327d565b60405180910390fd5b6001600260008560000135815260200190815260200160002060006101000a81548160ff02191690831515021790555082600001357fe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a60405160405180910390a26001905092915050565b6000848260001515600260008460000135815260200190815260200160002060009054906101000a900460ff16151514610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc906132bd565b60405180910390fd5b428260e001351015610b0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b039061321d565b60405180910390fd5b610b29610b23600154610b1e8561131f565b6113cc565b8261140d565b73ffffffffffffffffffffffffffffffffffffffff16826020016020810190610b529190612687565b73ffffffffffffffffffffffffffffffffffffffff1614610ba8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9f9061327d565b60405180910390fd5b60001515876060016020810190610bbf91906127de565b151514610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf89061349d565b60405180910390fd5b6003600088600001358152602001908152602001600020548760a00135610c2891906135f5565b861115610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c619061331d565b60405180910390fd5b6000670de0b6b3a76400008860a00135670de0b6b3a764000089610c8e919061359b565b610c98919061356a565b8960800135610ca7919061359b565b610cb1919061356a565b9050610cc2888888848b6000611562565b9350505050949350505050565b600080600090505b88889050811015610dc657610daa898983818110610d1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506101000201888884818110610d5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013587878786818110610d9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060600201610a56565b610db357600080fd5b8080610dbe906136bb565b915050610cd7565b5060019050979650505050505050565b6040518060400160405280600e81526020017f53776976656c2046696e616e636500000000000000000000000000000000000081525081565b600080600090505b858590508110156110815760046000878784818110610e5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013581526020019081526020016000206000858584818110610eaf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815260200190815260200160002060020160149054906101000a900460ff1615610fa657610f62868683818110610f16577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135858584818110610f56577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013561076d565b610fa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f989061325d565b60405180910390fd5b61106e565b61102e868683818110610fe2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135858584818110611022577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013561108e565b61106d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110649061329d565b60405180910390fd5b5b8080611079906136bb565b915050610e17565b5060019050949350505050565b600080151560046000858152602001908152602001600020600084815260200190815260200160002060020160149054906101000a900460ff1615151461110a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611101906132dd565b60405180910390fd5b6111a4838360046000878152602001908152602001600020600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000888152602001908152602001600020600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b64565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060020160159054906101000a900460ff1690806003015490806004015490806005015490806006015490806007015490508a565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b60007fa3c680804aa3dc3cf9b923a1d0d8b699fcdf013624a69077d1fe6673a236562a60001b826000013583602001602081019061135d9190612687565b8460400160208101906113709190612687565b85606001602081019061138391906127de565b86608001358760a001358860c001358960e001356040516020016113af99989796959493929190613129565b604051602081830303815290604052805190602001209050919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0826040013560001c1115611479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114709061345d565b60405180910390fd5b601b82600001602081019061148e9190612963565b60ff1614806114b25750601c8260000160208101906114ad9190612963565b60ff16145b6114f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e89061333d565b60405180910390fd5b6001838360000160208101906115079190612963565b846020013585604001356040516000815260200160405260405161152e94939291906131b6565b6020604051602081039080840390855afa158015611550573d6000803e3d6000fd5b50505060206040510351905092915050565b600061156c6123fb565b848160c0018181525050838160e001818152505060008860400160208101906115959190612687565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8a60200160208101906115c69190612687565b308560e001516040518463ffffffff1660e01b81526004016115ea93929190613093565b602060405180830381600087803b15801561160457600080fd5b505af1158015611618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163c9190612807565b61167b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611672906133bd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308560c001516040518463ffffffff1660e01b81526004016116bc93929190613093565b602060405180830381600087803b1580156116d657600080fd5b505af11580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190612807565b61174d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117449061339d565b60405180910390fd5b600061177e8a60400160208101906117659190612687565b8460c001518560e001516117799190613514565b612199565b146117be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b5906133fd565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508960200160208101906117f79190612687565b836000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033836020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508960400160208101906118799190612687565b836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848360600190151590811515815250508073ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561190857600080fd5b505af115801561191c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611940919061293a565b8360a00181815250508960c0013583610100018181525050428361010001516119699190613514565b8361012001818152505082600460008c60000135815260200190815260200160002060008a815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690831515021790555060808201518160020160156101000a81548160ff02191690831515021790555060a0820151816003015560c0820151816004015560e082015181600501556101008201518160060155610120820151816007015590505088600360008c6000013581526020019081526020016000206000828254611b0f9190613514565b92505081905550878a600001357ff373419e0d1b0ccbe5c66f4987d80fe709363e125e983039023ef0715b68ed638b604051611b4b91906134dd565b60405180910390a3600193505050509695505050505050565b600080600460008781526020019081526020016000206000868152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff161515151581526020016002820160159054906101000a900460ff16151515158152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600015158160800151151514611d4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d45906132fd565b60405180910390fd5b806101200151421015611d96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8d906134bd565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260e001518360c00151611dd29190613514565b905060006a52b7d2dcc80cd2e40000008460a001516a52b7d2dcc80cd2e40000008573ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611e3b57600080fd5b505af1158015611e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e73919061293a565b611e7d919061359b565b611e87919061356a565b611e9191906135f5565b905060006a52b7d2dcc80cd2e40000008560e0015183611eb1919061359b565b8660c0015184611ec1919061359b565b611ecb9190613514565b611ed5919061356a565b905060008560e00151821415611eed57819050611f21565b8560e001518211611f0d57818660e00151611f0891906135f5565b611f1e565b8560e0015182611f1d91906135f5565b5b90505b6000611f378286611f329190613514565b612346565b14611f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6e9061347d565b60405180910390fd5b6000866040015190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8b876040518363ffffffff1660e01b8152600401611fbb9291906130ca565b602060405180830381600087803b158015611fd557600080fd5b505af1158015611fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200d9190612807565b61204c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120439061323d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a846040518363ffffffff1660e01b81526004016120879291906130ca565b602060405180830381600087803b1580156120a157600080fd5b505af11580156120b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d99190612807565b612118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210f906133dd565b60405180910390fd5b6001600460008e815260200190815260200160002060008d815260200190815260200160002060020160156101000a81548160ff0219169083151502179055508a8c7fa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd9029460405160405180910390a36001975050505050505050949350505050565b6000808390508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016121fa9291906130ca565b602060405180830381600087803b15801561221457600080fd5b505af1158015612228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224c9190612807565b61228b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122829061343d565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a0712d68856040518263ffffffff1660e01b81526004016122ea91906134dd565b602060405180830381600087803b15801561230457600080fd5b505af1158015612318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061233c919061293a565b9250505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663852a12e3836040518263ffffffff1660e01b81526004016123a291906134dd565b602060405180830381600087803b1580156123bc57600080fd5b505af11580156123d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123f4919061293a565b9050919050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000813590506124a381613773565b92915050565b60008083601f8401126124bb57600080fd5b8235905067ffffffffffffffff8111156124d457600080fd5b6020830191508360208202830111156124ec57600080fd5b9250929050565b60008083601f84011261250557600080fd5b8235905067ffffffffffffffff81111561251e57600080fd5b60208301915083606082028301111561253657600080fd5b9250929050565b60008083601f84011261254f57600080fd5b8235905067ffffffffffffffff81111561256857600080fd5b6020830191508361010082028301111561258157600080fd5b9250929050565b60008083601f84011261259a57600080fd5b8235905067ffffffffffffffff8111156125b357600080fd5b6020830191508360208202830111156125cb57600080fd5b9250929050565b6000813590506125e18161378a565b92915050565b6000815190506125f68161378a565b92915050565b60008135905061260b816137a1565b92915050565b60006060828403121561262357600080fd5b81905092915050565b6000610100828403121561263f57600080fd5b81905092915050565b600081359050612657816137b8565b92915050565b60008151905061266c816137b8565b92915050565b600081359050612681816137cf565b92915050565b60006020828403121561269957600080fd5b60006126a784828501612494565b91505092915050565b600080600080604085870312156126c657600080fd5b600085013567ffffffffffffffff8111156126e057600080fd5b6126ec878288016124a9565b9450945050602085013567ffffffffffffffff81111561270b57600080fd5b612717878288016124a9565b925092505092959194509250565b60008060008060008060006080888a03121561274057600080fd5b600088013567ffffffffffffffff81111561275a57600080fd5b6127668a828b0161253d565b9750975050602088013567ffffffffffffffff81111561278557600080fd5b6127918a828b01612588565b955095505060406127a48a828b016125fc565b935050606088013567ffffffffffffffff8111156127c157600080fd5b6127cd8a828b016124f3565b925092505092959891949750929550565b6000602082840312156127f057600080fd5b60006127fe848285016125d2565b91505092915050565b60006020828403121561281957600080fd5b6000612827848285016125e7565b91505092915050565b60006020828403121561284257600080fd5b6000612850848285016125fc565b91505092915050565b6000806040838503121561286c57600080fd5b600061287a858286016125fc565b925050602061288b858286016125fc565b9150509250929050565b60008061016083850312156128a957600080fd5b60006128b78582860161262c565b9250506101006128c985828601612611565b9150509250929050565b6000806000806101a085870312156128ea57600080fd5b60006128f88782880161262c565b94505061010061290a87828801612648565b93505061012061291c878288016125fc565b92505061014061292e87828801612611565b91505092959194509250565b60006020828403121561294c57600080fd5b600061295a8482850161265d565b91505092915050565b60006020828403121561297557600080fd5b600061298384828501612672565b91505092915050565b61299581613629565b82525050565b6129a48161363b565b82525050565b6129b381613647565b82525050565b60006129c4826134f8565b6129ce8185613503565b93506129de818560208601613688565b6129e781613762565b840191505092915050565b60006129ff601183613503565b91507f6f726465722068617320657870697265640000000000000000000000000000006000830152602082019050919050565b6000612a3f601883613503565b91507f7472616e73666572206f6620746f74616c206661696c656400000000000000006000830152602082019050919050565b6000612a7f602483613503565b91507f72656c65617365206f6620666c6f6174696e672061677265656d656e7420666160008301527f696c6564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ae5601183613503565b91507f696e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b6000612b25602183613503565b91507f72656c65617365206f662066697865642061677265656d656e74206661696c6560008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b8b601883613503565b91507f6f7264657220686173206265656e2063616e63656c6c656400000000000000006000830152602082019050919050565b6000612bcb601783613503565b91507f61677265656d656e74206d7573742062652066697865640000000000000000006000830152602082019050919050565b6000612c0b601d83613503565b91507f61677265656d656e7420697320616c72656164792072656c65617365640000006000830152602082019050919050565b6000612c4b601f83613503565b91507f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006000830152602082019050919050565b6000612c8b601b83613503565b91507f696e76616c6964207369676e6174757265202276222076616c756500000000006000830152602082019050919050565b6000612ccb601c83613503565b91507f6d75737420626520617574686f72697a656420746f2063616e63656c000000006000830152602082019050919050565b6000612d0b601a83613503565b91507f61677265656d656e74206d75737420626520666c6f6174696e670000000000006000830152602082019050919050565b6000612d4b601a83613503565b91507f7472616e736665722066726f6d2074616b6572206661696c65640000000000006000830152602082019050919050565b6000612d8b601a83613503565b91507f7472616e736665722066726f6d206d616b6572206661696c65640000000000006000830152602082019050919050565b6000612dcb601783613503565b91507f7472616e73666572206f662064696666206661696c65640000000000000000006000830152602082019050919050565b6000612e0b601583613503565b91507f43546f6b656e206d696e74696e67206661696c656400000000000000000000006000830152602082019050919050565b6000612e4b601f83613503565b91507f6d7573742062652066696c6c6564206f6e20666c6f6174696e672073696465006000830152602082019050919050565b6000612e8b601a83613503565b91507f756e6465726c79696e6720617070726f76616c206661696c65640000000000006000830152602082019050919050565b6000612ecb601b83613503565b91507f696e76616c6964207369676e6174757265202273222076616c756500000000006000830152602082019050919050565b6000612f0b601c83613503565b91507f72656465656d20636f6d706f756e6420746f6b656e206661696c6564000000006000830152602082019050919050565b6000612f4b601c83613503565b91507f6d7573742062652066696c6c6564206f6e2066697865642073696465000000006000830152602082019050919050565b6000612f8b601e83613503565b91507f61677265656d656e74207465726d206973206e6f7420636f6d706c65746500006000830152602082019050919050565b612fc781613671565b82525050565b612fd68161367b565b82525050565b6000602082019050612ff1600083018461298c565b92915050565b60006101408201905061300d600083018d61298c565b61301a602083018c61298c565b613027604083018b61298c565b613034606083018a61299b565b613041608083018961299b565b61304e60a0830188612fbe565b61305b60c0830187612fbe565b61306860e0830186612fbe565b613076610100830185612fbe565b613084610120830184612fbe565b9b9a5050505050505050505050565b60006060820190506130a8600083018661298c565b6130b5602083018561298c565b6130c26040830184612fbe565b949350505050565b60006040820190506130df600083018561298c565b6130ec6020830184612fbe565b9392505050565b6000602082019050613108600083018461299b565b92915050565b600060208201905061312360008301846129aa565b92915050565b60006101208201905061313f600083018c6129aa565b61314c602083018b6129aa565b613159604083018a61298c565b613166606083018961298c565b613173608083018861299b565b61318060a0830187612fbe565b61318d60c0830186612fbe565b61319a60e0830185612fbe565b6131a8610100830184612fbe565b9a9950505050505050505050565b60006080820190506131cb60008301876129aa565b6131d86020830186612fcd565b6131e560408301856129aa565b6131f260608301846129aa565b95945050505050565b6000602082019050818103600083015261321581846129b9565b905092915050565b60006020820190508181036000830152613236816129f2565b9050919050565b6000602082019050818103600083015261325681612a32565b9050919050565b6000602082019050818103600083015261327681612a72565b9050919050565b6000602082019050818103600083015261329681612ad8565b9050919050565b600060208201905081810360008301526132b681612b18565b9050919050565b600060208201905081810360008301526132d681612b7e565b9050919050565b600060208201905081810360008301526132f681612bbe565b9050919050565b6000602082019050818103600083015261331681612bfe565b9050919050565b6000602082019050818103600083015261333681612c3e565b9050919050565b6000602082019050818103600083015261335681612c7e565b9050919050565b6000602082019050818103600083015261337681612cbe565b9050919050565b6000602082019050818103600083015261339681612cfe565b9050919050565b600060208201905081810360008301526133b681612d3e565b9050919050565b600060208201905081810360008301526133d681612d7e565b9050919050565b600060208201905081810360008301526133f681612dbe565b9050919050565b6000602082019050818103600083015261341681612dfe565b9050919050565b6000602082019050818103600083015261343681612e3e565b9050919050565b6000602082019050818103600083015261345681612e7e565b9050919050565b6000602082019050818103600083015261347681612ebe565b9050919050565b6000602082019050818103600083015261349681612efe565b9050919050565b600060208201905081810360008301526134b681612f3e565b9050919050565b600060208201905081810360008301526134d681612f7e565b9050919050565b60006020820190506134f26000830184612fbe565b92915050565b600081519050919050565b600082825260208201905092915050565b600061351f82613671565b915061352a83613671565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561355f5761355e613704565b5b828201905092915050565b600061357582613671565b915061358083613671565b9250826135905761358f613733565b5b828204905092915050565b60006135a682613671565b91506135b183613671565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156135ea576135e9613704565b5b828202905092915050565b600061360082613671565b915061360b83613671565b92508282101561361e5761361d613704565b5b828203905092915050565b600061363482613651565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156136a657808201518184015260208101905061368b565b838111156136b5576000848401525b50505050565b60006136c682613671565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136f9576136f8613704565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61377c81613629565b811461378757600080fd5b50565b6137938161363b565b811461379e57600080fd5b50565b6137aa81613647565b81146137b557600080fd5b50565b6137c181613671565b81146137cc57600080fd5b50565b6137d88161367b565b81146137e357600080fd5b5056fea264697066735822122040c1425dfe53317e2dbc32894373be1007d3d3eb7ea293f725eaff4ed615ab9c64736f6c63430008000033"

// DeploySwivel deploys a new Ethereum contract, binding an instance of Swivel to it.
func DeploySwivel(auth *bind.TransactOpts, backend bind.ContractBackend, i *big.Int, c common.Address, v common.Address) (common.Address, *types.Transaction, *Swivel, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SwivelBin), backend, i, c, v)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// Swivel is an auto generated Go binding around an Ethereum contract.
type Swivel struct {
	SwivelCaller     // Read-only binding to the contract
	SwivelTransactor // Write-only binding to the contract
	SwivelFilterer   // Log filterer for contract events
}

// SwivelCaller is an auto generated read-only Go binding around an Ethereum contract.
type SwivelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SwivelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwivelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwivelSession struct {
	Contract     *Swivel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwivelCallerSession struct {
	Contract *SwivelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SwivelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwivelTransactorSession struct {
	Contract     *SwivelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelRaw is an auto generated low-level Go binding around an Ethereum contract.
type SwivelRaw struct {
	Contract *Swivel // Generic contract binding to access the raw methods on
}

// SwivelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwivelCallerRaw struct {
	Contract *SwivelCaller // Generic read-only contract binding to access the raw methods on
}

// SwivelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwivelTransactorRaw struct {
	Contract *SwivelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSwivel creates a new instance of Swivel, bound to a specific deployed contract.
func NewSwivel(address common.Address, backend bind.ContractBackend) (*Swivel, error) {
	contract, err := bindSwivel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// NewSwivelCaller creates a new read-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelCaller(address common.Address, caller bind.ContractCaller) (*SwivelCaller, error) {
	contract, err := bindSwivel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelCaller{contract: contract}, nil
}

// NewSwivelTransactor creates a new write-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelTransactor(address common.Address, transactor bind.ContractTransactor) (*SwivelTransactor, error) {
	contract, err := bindSwivel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelTransactor{contract: contract}, nil
}

// NewSwivelFilterer creates a new log filterer instance of Swivel, bound to a specific deployed contract.
func NewSwivelFilterer(address common.Address, filterer bind.ContractFilterer) (*SwivelFilterer, error) {
	contract, err := bindSwivel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwivelFilterer{contract: contract}, nil
}

// bindSwivel binds a generic wrapper to an already deployed contract.
func bindSwivel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.SwivelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transact(opts, method, params...)
}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelCaller) CTOKEN(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "CTOKEN")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelSession) CTOKEN() (common.Address, error) {
	return _Swivel.Contract.CTOKEN(&_Swivel.CallOpts)
}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelCallerSession) CTOKEN() (common.Address, error) {
	return _Swivel.Contract.CTOKEN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCaller) DOMAIN(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "DOMAIN")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCallerSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCaller) NAME(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "NAME")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCallerSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCallerSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelCaller) Agreements(opts *bind.CallOpts, arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "agreements", arg0, arg1)

	outstruct := new(struct {
		Maker      common.Address
		Taker      common.Address
		Underlying common.Address
		Floating   bool
		Released   bool
		Rate       *big.Int
		Principal  *big.Int
		Interest   *big.Int
		Duration   *big.Int
		Release    *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Maker = out[0].(common.Address)
	outstruct.Taker = out[1].(common.Address)
	outstruct.Underlying = out[2].(common.Address)
	outstruct.Floating = out[3].(bool)
	outstruct.Released = out[4].(bool)
	outstruct.Rate = out[5].(*big.Int)
	outstruct.Principal = out[6].(*big.Int)
	outstruct.Interest = out[7].(*big.Int)
	outstruct.Duration = out[8].(*big.Int)
	outstruct.Release = out[9].(*big.Int)

	return *outstruct, err

}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelSession) Agreements(arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	return _Swivel.Contract.Agreements(&_Swivel.CallOpts, arg0, arg1)
}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelCallerSession) Agreements(arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	return _Swivel.Contract.Agreements(&_Swivel.CallOpts, arg0, arg1)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCaller) Cancelled(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "cancelled", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCallerSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCaller) Filled(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "filled", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// BatchFillFixed is a paid mutator transaction binding the contract method 0x8c9c71d6.
//
// Solidity: function batchFillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) BatchFillFixed(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "batchFillFixed", o, a, k, c)
}

// BatchFillFixed is a paid mutator transaction binding the contract method 0x8c9c71d6.
//
// Solidity: function batchFillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) BatchFillFixed(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchFillFixed is a paid mutator transaction binding the contract method 0x8c9c71d6.
//
// Solidity: function batchFillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) BatchFillFixed(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchFillFloating is a paid mutator transaction binding the contract method 0x43ea62df.
//
// Solidity: function batchFillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactor) BatchFillFloating(opts *bind.TransactOpts, o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "batchFillFloating", o, a, k, c)
}

// BatchFillFloating is a paid mutator transaction binding the contract method 0x43ea62df.
//
// Solidity: function batchFillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelSession) BatchFillFloating(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchFillFloating is a paid mutator transaction binding the contract method 0x43ea62df.
//
// Solidity: function batchFillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256)[] o, uint256[] a, bytes32 k, (uint8,bytes32,bytes32)[] c) returns(bool)
func (_Swivel *SwivelTransactorSession) BatchFillFloating(o []HashOrder, a []*big.Int, k [32]byte, c []SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.BatchFillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// BatchRelease is a paid mutator transaction binding the contract method 0xa60caa63.
//
// Solidity: function batchRelease(bytes32[] o, bytes32[] a) returns(bool)
func (_Swivel *SwivelTransactor) BatchRelease(opts *bind.TransactOpts, o [][32]byte, a [][32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "batchRelease", o, a)
}

// BatchRelease is a paid mutator transaction binding the contract method 0xa60caa63.
//
// Solidity: function batchRelease(bytes32[] o, bytes32[] a) returns(bool)
func (_Swivel *SwivelSession) BatchRelease(o [][32]byte, a [][32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.BatchRelease(&_Swivel.TransactOpts, o, a)
}

// BatchRelease is a paid mutator transaction binding the contract method 0xa60caa63.
//
// Solidity: function batchRelease(bytes32[] o, bytes32[] a) returns(bool)
func (_Swivel *SwivelTransactorSession) BatchRelease(o [][32]byte, a [][32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.BatchRelease(&_Swivel.TransactOpts, o, a)
}

// Cancel is a paid mutator transaction binding the contract method 0x6b9d28db.
//
// Solidity: function cancel((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) Cancel(opts *bind.TransactOpts, o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "cancel", o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x6b9d28db.
//
// Solidity: function cancel((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// Cancel is a paid mutator transaction binding the contract method 0x6b9d28db.
//
// Solidity: function cancel((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) Cancel(o HashOrder, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.Cancel(&_Swivel.TransactOpts, o, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x7856b727.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) FillFixed(opts *bind.TransactOpts, o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "fillFixed", o, a, k, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x7856b727.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) FillFixed(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x7856b727.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) FillFixed(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x4ee1586e.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) FillFloating(opts *bind.TransactOpts, o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "fillFloating", o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x4ee1586e.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) FillFloating(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x4ee1586e.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) FillFloating(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactor) ReleaseFixed(opts *bind.TransactOpts, o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "releaseFixed", o, a)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelSession) ReleaseFixed(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFixed(&_Swivel.TransactOpts, o, a)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactorSession) ReleaseFixed(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFixed(&_Swivel.TransactOpts, o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactor) ReleaseFloating(opts *bind.TransactOpts, o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "releaseFloating", o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelSession) ReleaseFloating(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFloating(&_Swivel.TransactOpts, o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactorSession) ReleaseFloating(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFloating(&_Swivel.TransactOpts, o, a)
}

// SwivelCancelIterator is returned from FilterCancel and is used to iterate over the raw logs and unpacked data for Cancel events raised by the Swivel contract.
type SwivelCancelIterator struct {
	Event *SwivelCancel // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelCancelIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelCancel)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelCancel)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelCancelIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelCancelIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelCancel represents a Cancel event raised by the Swivel contract.
type SwivelCancel struct {
	Key [32]byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterCancel is a free log retrieval operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) FilterCancel(opts *bind.FilterOpts, key [][32]byte) (*SwivelCancelIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelCancelIterator{contract: _Swivel.contract, event: "Cancel", logs: logs, sub: sub}, nil
}

// WatchCancel is a free log subscription operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) WatchCancel(opts *bind.WatchOpts, sink chan<- *SwivelCancel, key [][32]byte) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelCancel)
				if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCancel is a log parse operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) ParseCancel(log types.Log) (*SwivelCancel, error) {
	event := new(SwivelCancel)
	if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelInitiateIterator is returned from FilterInitiate and is used to iterate over the raw logs and unpacked data for Initiate events raised by the Swivel contract.
type SwivelInitiateIterator struct {
	Event *SwivelInitiate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelInitiateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelInitiate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelInitiate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelInitiateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelInitiateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelInitiate represents a Initiate event raised by the Swivel contract.
type SwivelInitiate struct {
	OrderKey     [32]byte
	AgreementKey [32]byte
	Filled       *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterInitiate is a free log retrieval operation binding the contract event 0xf373419e0d1b0ccbe5c66f4987d80fe709363e125e983039023ef0715b68ed63.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey, uint256 filled)
func (_Swivel *SwivelFilterer) FilterInitiate(opts *bind.FilterOpts, orderKey [][32]byte, agreementKey [][32]byte) (*SwivelInitiateIterator, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Initiate", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelInitiateIterator{contract: _Swivel.contract, event: "Initiate", logs: logs, sub: sub}, nil
}

// WatchInitiate is a free log subscription operation binding the contract event 0xf373419e0d1b0ccbe5c66f4987d80fe709363e125e983039023ef0715b68ed63.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey, uint256 filled)
func (_Swivel *SwivelFilterer) WatchInitiate(opts *bind.WatchOpts, sink chan<- *SwivelInitiate, orderKey [][32]byte, agreementKey [][32]byte) (event.Subscription, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Initiate", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelInitiate)
				if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiate is a log parse operation binding the contract event 0xf373419e0d1b0ccbe5c66f4987d80fe709363e125e983039023ef0715b68ed63.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey, uint256 filled)
func (_Swivel *SwivelFilterer) ParseInitiate(log types.Log) (*SwivelInitiate, error) {
	event := new(SwivelInitiate)
	if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelReleaseIterator is returned from FilterRelease and is used to iterate over the raw logs and unpacked data for Release events raised by the Swivel contract.
type SwivelReleaseIterator struct {
	Event *SwivelRelease // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelReleaseIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelRelease)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelRelease)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelReleaseIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelReleaseIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelRelease represents a Release event raised by the Swivel contract.
type SwivelRelease struct {
	OrderKey     [32]byte
	AgreementKey [32]byte
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterRelease is a free log retrieval operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) FilterRelease(opts *bind.FilterOpts, orderKey [][32]byte, agreementKey [][32]byte) (*SwivelReleaseIterator, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Release", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelReleaseIterator{contract: _Swivel.contract, event: "Release", logs: logs, sub: sub}, nil
}

// WatchRelease is a free log subscription operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) WatchRelease(opts *bind.WatchOpts, sink chan<- *SwivelRelease, orderKey [][32]byte, agreementKey [][32]byte) (event.Subscription, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Release", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelRelease)
				if err := _Swivel.contract.UnpackLog(event, "Release", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRelease is a log parse operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) ParseRelease(log types.Log) (*SwivelRelease, error) {
	event := new(SwivelRelease)
	if err := _Swivel.contract.UnpackLog(event, "Release", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
