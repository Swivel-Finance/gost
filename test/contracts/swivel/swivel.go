// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package swivel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HashOrder is an auto generated low-level Go binding around an user-defined struct.
type HashOrder struct {
	Key        [32]byte
	Maker      common.Address
	Underlying common.Address
	Floating   bool
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Expiry     *big.Int
	Nonce      *big.Int
}

// SigComponents is an auto generated low-level Go binding around an user-defined struct.
type SigComponents struct {
	V uint8
	R [32]byte
	S [32]byte
}

// SwivelABI is the input ABI used to generate the binding from.
const SwivelABI = "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"v\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"agreementKey\",\"type\":\"bytes32\"}],\"name\":\"Initiate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"agreementKey\",\"type\":\"bytes32\"}],\"name\":\"Release\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CTOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"released\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"release\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"fillFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"floating\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structHash.Order\",\"name\":\"o\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"k\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structSig.Components\",\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"fillFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"o\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"a\",\"type\":\"bytes32\"}],\"name\":\"releaseFixed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"o\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"a\",\"type\":\"bytes32\"}],\"name\":\"releaseFloating\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// SwivelBin is the compiled bytecode used for deploying new contracts.
var SwivelBin = "0x60806040523480156200001157600080fd5b5060405162002f5438038062002f5483398181016040528101906200003791906200024b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a190620002e3565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161462000127578162000129565b305b9050620001ae6040518060400160405280600e81526020017f53776976656c2046696e616e63650000000000000000000000000000000000008152506040518060400160405280600581526020017f312e302e300000000000000000000000000000000000000000000000000000008152508684620001be60201b62000aa41760201c565b6001819055505050505062000388565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b6000815190506200022e8162000354565b92915050565b60008151905062000245816200036e565b92915050565b6000806000606084860312156200026157600080fd5b6000620002718682870162000234565b935050602062000284868287016200021d565b925050604062000297868287016200021d565b9150509250925092565b6000620002b0601f8362000305565b91507f636f6d706f756e6420746f6b656e2061646472657373207265717569726564006000830152602082019050919050565b60006020820190508181036000830152620002fe81620002a1565b9050919050565b600082825260208201905092915050565b600062000323826200032a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200035f8162000316565b81146200036b57600080fd5b50565b62000379816200034a565b81146200038557600080fd5b50565b612bbc80620003986000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063592ab2fb11610071578063592ab2fb1461017a57806379d5e867146101aa578063a3f4df7e146101da578063bd18e9fe146101f8578063be3b52ec14610228578063ffa1ad7414610261576100a9565b8063288cdc91146100ae5780632ac12622146100de578063432954111461010e57806352a9674b1461012c578063547747b71461014a575b600080fd5b6100c860048036038101906100c39190611d8a565b61027f565b6040516100d59190612850565b60405180910390f35b6100f860048036038101906100f39190611d8a565b610297565b6040516101059190612593565b60405180910390f35b6101166102b7565b604051610123919061247c565b60405180910390f35b6101346102db565b60405161014191906125ae565b60405180910390f35b610164600480360381019061015f9190611db3565b6102e1565b6040516101719190612593565b60405180910390f35b610194600480360381019061018f9190611def565b6103f9565b6040516101a19190612593565b60405180910390f35b6101c460048036038101906101bf9190611def565b610619565b6040516101d19190612593565b60405180910390f35b6101e2610839565b6040516101ef919061260e565b60405180910390f35b610212600480360381019061020d9190611db3565b610872565b60405161021f9190612593565b60405180910390f35b610242600480360381019061023d9190611db3565b610990565b6040516102589a99989796959493929190612497565b60405180910390f35b610269610a6b565b604051610276919061260e565b60405180910390f35b60036020528060005260406000206000915090505481565b60026020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600060046000848152602001908152602001600020600083815260200190815260200160002060020160149054906101000a900460ff16610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e90612730565b60405180910390fd5b6103f1838360046000878152602001908152602001600020600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000888152602001908152602001600020600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b03565b905092915050565b6000848260001515600260008460000135815260200190815260200160002060009054906101000a900460ff16151514610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90612690565b60405180910390fd5b428260e0013510156104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a690612630565b60405180910390fd5b6104cc6104c66001546104c185611109565b6111bd565b826111fe565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906104f59190611d0f565b73ffffffffffffffffffffffffffffffffffffffff161461054b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054290612670565b60405180910390fd5b60036000886000013581526020019081526020016000205487608001356105729190612968565b8611156105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab906126f0565b60405180910390fd5b6000670de0b6b3a76400008860800135670de0b6b3a7640000896105d8919061290e565b6105e291906128dd565b8960a001356105f1919061290e565b6105fb91906128dd565b905061060c8888888a856001611353565b9350505050949350505050565b6000848260001515600260008460000135815260200190815260200160002060009054906101000a900460ff16151514610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90612690565b60405180910390fd5b428260e0013510156106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c690612630565b60405180910390fd5b6106ec6106e66001546106e185611109565b6111bd565b826111fe565b73ffffffffffffffffffffffffffffffffffffffff168260200160208101906107159190611d0f565b73ffffffffffffffffffffffffffffffffffffffff161461076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290612670565b60405180910390fd5b6003600088600001358152602001908152602001600020548760a001356107929190612968565b8611156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb906126f0565b60405180910390fd5b6000670de0b6b3a76400008860a00135670de0b6b3a7640000896107f8919061290e565b61080291906128dd565b8960800135610811919061290e565b61081b91906128dd565b905061082c888888848b6000611353565b9350505050949350505050565b6040518060400160405280600e81526020017f53776976656c2046696e616e636500000000000000000000000000000000000081525081565b600080151560046000858152602001908152602001600020600084815260200190815260200160002060020160149054906101000a900460ff161515146108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e5906126b0565b60405180910390fd5b610988838360046000878152602001908152602001600020600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000888152602001908152602001600020600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b03565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060020160159054906101000a900460ff1690806003015490806004015490806005015490806006015490806007015490508a565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b600084516020860120845160208601206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815282602082015281604082015285606082015284608082015260a081209350505050949350505050565b600080600460008781526020019081526020016000206000868152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff161515151581526020016002820160159054906101000a900460ff16151515158152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050600015158160800151151514610ced576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce4906126d0565b60405180910390fd5b806101200151421015610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c90612830565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260e001518360c00151610d719190612887565b905060006a52b7d2dcc80cd2e40000008460a001516a52b7d2dcc80cd2e40000008573ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610dda57600080fd5b505af1158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e129190611e56565b610e1c919061290e565b610e2691906128dd565b610e309190612968565b905060006a52b7d2dcc80cd2e40000008560e0015183610e50919061290e565b8660c0015184610e60919061290e565b610e6a9190612887565b610e7491906128dd565b905060008560e00151821415610e8c57819050610ec0565b8560e001518211610eac57818660e00151610ea79190612968565b610ebd565b8560e0015182610ebc9190612968565b5b90505b6000610ed68286610ed19190612887565b61194a565b14610f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0d90612810565b60405180910390fd5b6000866040015190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8b876040518363ffffffff1660e01b8152600401610f5a92919061256a565b602060405180830381600087803b158015610f7457600080fd5b505af1158015610f88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fac9190611d61565b610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe290612650565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a846040518363ffffffff1660e01b815260040161102692919061256a565b602060405180830381600087803b15801561104057600080fd5b505af1158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611d61565b6110b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ae90612790565b60405180910390fd5b60018760800190151590811515815250508a8c7fa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd9029460405160405180910390a36001975050505050505050949350505050565b60007ff01cc16c244dd394ae954a5b2cd48a4f17007f995776783399d1190f45ada62360001b82600001358360200160208101906111479190611d0f565b84604001602081019061115a9190611d0f565b85606001602081019061116d9190611d38565b86608001358760a001358860c001358960e001358a61010001356040516020016111a09a999897969594939291906123c8565b604051602081830303815290604052805190602001209050919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0826040013560001c111561126a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611261906127f0565b60405180910390fd5b601b82600001602081019061127f9190611e7f565b60ff1614806112a35750601c82600001602081019061129e9190611e7f565b60ff16145b6112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d990612710565b60405180910390fd5b6001838360000160208101906112f89190611e7f565b846020013585604001356040516000815260200160405260405161131f94939291906125c9565b6020604051602081039080840390855afa158015611341573d6000803e3d6000fd5b50505060206040510351905092915050565b600061135d611bac565b848160c0018181525050838160e001818152505060008860400160208101906113869190611d0f565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8a60200160208101906113b79190611d0f565b308560e001516040518463ffffffff1660e01b81526004016113db93929190612533565b602060405180830381600087803b1580156113f557600080fd5b505af1158015611409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142d9190611d61565b61146c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146390612770565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308560c001516040518463ffffffff1660e01b81526004016114ad93929190612533565b602060405180830381600087803b1580156114c757600080fd5b505af11580156114db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ff9190611d61565b61153e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153590612750565b60405180910390fd5b600061156f8a60400160208101906115569190611d0f565b8b608001358c60a0013561156a9190612887565b6119ff565b116115af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a6906127b0565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508960200160208101906115e89190611d0f565b836000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033836020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505089604001602081019061166a9190611d0f565b836040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848360600190151590811515815250508073ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156116f957600080fd5b505af115801561170d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117319190611e56565b8360a00181815250508960c00135836101000181815250504283610100015161175a9190612887565b8361012001818152505082600460008c60000135815260200190815260200160002060008a815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690831515021790555060808201518160020160156101000a81548160ff02191690831515021790555060a0820151816003015560c0820151816004015560e082015181600501556101008201518160060155610120820151816007015590505088600360008c60000135815260200190815260200160002060008282546119009190612887565b92505081905550878a600001357fa93e646db02470b4aa881817da6191d55ffba8bd3377a40de3d62abb38fc7ceb60405160405180910390a3600193505050509695505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663852a12e3836040518263ffffffff1660e01b81526004016119a69190612850565b602060405180830381600087803b1580156119c057600080fd5b505af11580156119d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f89190611e56565b9050919050565b6000808390508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401611a6092919061256a565b602060405180830381600087803b158015611a7a57600080fd5b505af1158015611a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab29190611d61565b611af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae8906127d0565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a0712d68856040518263ffffffff1660e01b8152600401611b509190612850565b602060405180830381600087803b158015611b6a57600080fd5b505af1158015611b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba29190611e56565b9250505092915050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081359050611c5481612b13565b92915050565b600081359050611c6981612b2a565b92915050565b600081519050611c7e81612b2a565b92915050565b600081359050611c9381612b41565b92915050565b600060608284031215611cab57600080fd5b81905092915050565b60006101208284031215611cc757600080fd5b81905092915050565b600081359050611cdf81612b58565b92915050565b600081519050611cf481612b58565b92915050565b600081359050611d0981612b6f565b92915050565b600060208284031215611d2157600080fd5b6000611d2f84828501611c45565b91505092915050565b600060208284031215611d4a57600080fd5b6000611d5884828501611c5a565b91505092915050565b600060208284031215611d7357600080fd5b6000611d8184828501611c6f565b91505092915050565b600060208284031215611d9c57600080fd5b6000611daa84828501611c84565b91505092915050565b60008060408385031215611dc657600080fd5b6000611dd485828601611c84565b9250506020611de585828601611c84565b9150509250929050565b6000806000806101c08587031215611e0657600080fd5b6000611e1487828801611cb4565b945050610120611e2687828801611cd0565b935050610140611e3887828801611c84565b925050610160611e4a87828801611c99565b91505092959194509250565b600060208284031215611e6857600080fd5b6000611e7684828501611ce5565b91505092915050565b600060208284031215611e9157600080fd5b6000611e9f84828501611cfa565b91505092915050565b611eb18161299c565b82525050565b611ec8611ec38261299c565b612a2e565b82525050565b611ed7816129ae565b82525050565b611eee611ee9826129ae565b612a40565b82525050565b611efd816129ba565b82525050565b611f14611f0f826129ba565b612a52565b82525050565b6000611f258261286b565b611f2f8185612876565b9350611f3f8185602086016129fb565b611f4881612ae8565b840191505092915050565b6000611f60601183612876565b91507f6f726465722068617320657870697265640000000000000000000000000000006000830152602082019050919050565b6000611fa0601883612876565b91507f7472616e73666572206f6620746f74616c206661696c656400000000000000006000830152602082019050919050565b6000611fe0601183612876565b91507f696e76616c6964207369676e61747572650000000000000000000000000000006000830152602082019050919050565b6000612020601883612876565b91507f6f7264657220686173206265656e2063616e63656c6c656400000000000000006000830152602082019050919050565b6000612060601783612876565b91507f61677265656d656e74206d7573742062652066697865640000000000000000006000830152602082019050919050565b60006120a0601d83612876565b91507f61677265656d656e7420697320616c72656164792072656c65617365640000006000830152602082019050919050565b60006120e0601f83612876565b91507f74616b657220616d6f756e74203e20617661696c61626c6520766f6c756d65006000830152602082019050919050565b6000612120601b83612876565b91507f696e76616c6964207369676e6174757265202276222076616c756500000000006000830152602082019050919050565b6000612160601a83612876565b91507f61677265656d656e74206d75737420626520666c6f6174696e670000000000006000830152602082019050919050565b60006121a0601a83612876565b91507f7472616e736665722066726f6d2074616b6572206661696c65640000000000006000830152602082019050919050565b60006121e0601a83612876565b91507f7472616e736665722066726f6d206d616b6572206661696c65640000000000006000830152602082019050919050565b6000612220601783612876565b91507f7472616e73666572206f662064696666206661696c65640000000000000000006000830152602082019050919050565b6000612260601583612876565b91507f43546f6b656e206d696e74696e67206661696c656400000000000000000000006000830152602082019050919050565b60006122a0601a83612876565b91507f756e6465726c79696e6720617070726f76616c206661696c65640000000000006000830152602082019050919050565b60006122e0601b83612876565b91507f696e76616c6964207369676e6174757265202273222076616c756500000000006000830152602082019050919050565b6000612320601c83612876565b91507f72656465656d20636f6d706f756e6420746f6b656e206661696c6564000000006000830152602082019050919050565b6000612360601e83612876565b91507f61677265656d656e74207465726d206973206e6f7420636f6d706c65746500006000830152602082019050919050565b61239c816129e4565b82525050565b6123b36123ae826129e4565b612a6e565b82525050565b6123c2816129ee565b82525050565b60006123d4828d611f03565b6020820191506123e4828c611f03565b6020820191506123f4828b611eb7565b601482019150612404828a611eb7565b6014820191506124148289611edd565b60018201915061242482886123a2565b60208201915061243482876123a2565b60208201915061244482866123a2565b60208201915061245482856123a2565b60208201915061246482846123a2565b6020820191508190509b9a5050505050505050505050565b60006020820190506124916000830184611ea8565b92915050565b6000610140820190506124ad600083018d611ea8565b6124ba602083018c611ea8565b6124c7604083018b611ea8565b6124d4606083018a611ece565b6124e16080830189611ece565b6124ee60a0830188612393565b6124fb60c0830187612393565b61250860e0830186612393565b612516610100830185612393565b612524610120830184612393565b9b9a5050505050505050505050565b60006060820190506125486000830186611ea8565b6125556020830185611ea8565b6125626040830184612393565b949350505050565b600060408201905061257f6000830185611ea8565b61258c6020830184612393565b9392505050565b60006020820190506125a86000830184611ece565b92915050565b60006020820190506125c36000830184611ef4565b92915050565b60006080820190506125de6000830187611ef4565b6125eb60208301866123b9565b6125f86040830185611ef4565b6126056060830184611ef4565b95945050505050565b600060208201905081810360008301526126288184611f1a565b905092915050565b6000602082019050818103600083015261264981611f53565b9050919050565b6000602082019050818103600083015261266981611f93565b9050919050565b6000602082019050818103600083015261268981611fd3565b9050919050565b600060208201905081810360008301526126a981612013565b9050919050565b600060208201905081810360008301526126c981612053565b9050919050565b600060208201905081810360008301526126e981612093565b9050919050565b60006020820190508181036000830152612709816120d3565b9050919050565b6000602082019050818103600083015261272981612113565b9050919050565b6000602082019050818103600083015261274981612153565b9050919050565b6000602082019050818103600083015261276981612193565b9050919050565b60006020820190508181036000830152612789816121d3565b9050919050565b600060208201905081810360008301526127a981612213565b9050919050565b600060208201905081810360008301526127c981612253565b9050919050565b600060208201905081810360008301526127e981612293565b9050919050565b60006020820190508181036000830152612809816122d3565b9050919050565b6000602082019050818103600083015261282981612313565b9050919050565b6000602082019050818103600083015261284981612353565b9050919050565b60006020820190506128656000830184612393565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612892826129e4565b915061289d836129e4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156128d2576128d1612a8a565b5b828201905092915050565b60006128e8826129e4565b91506128f3836129e4565b92508261290357612902612ab9565b5b828204905092915050565b6000612919826129e4565b9150612924836129e4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561295d5761295c612a8a565b5b828202905092915050565b6000612973826129e4565b915061297e836129e4565b92508282101561299157612990612a8a565b5b828203905092915050565b60006129a7826129c4565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612a195780820151818401526020810190506129fe565b83811115612a28576000848401525b50505050565b6000612a3982612a5c565b9050919050565b6000612a4b82612a78565b9050919050565b6000819050919050565b6000612a6782612b06565b9050919050565b6000819050919050565b6000612a8382612af9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160f81b9050919050565b60008160601b9050919050565b612b1c8161299c565b8114612b2757600080fd5b50565b612b33816129ae565b8114612b3e57600080fd5b50565b612b4a816129ba565b8114612b5557600080fd5b50565b612b61816129e4565b8114612b6c57600080fd5b50565b612b78816129ee565b8114612b8357600080fd5b5056fea26469706673582212200f6ed2853b7721b4e194abc8f84ab985faefbb37b413493668932213049d2f6d64736f6c63430008000033"

// DeploySwivel deploys a new Ethereum contract, binding an instance of Swivel to it.
func DeploySwivel(auth *bind.TransactOpts, backend bind.ContractBackend, i *big.Int, c common.Address, v common.Address) (common.Address, *types.Transaction, *Swivel, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SwivelBin), backend, i, c, v)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// Swivel is an auto generated Go binding around an Ethereum contract.
type Swivel struct {
	SwivelCaller     // Read-only binding to the contract
	SwivelTransactor // Write-only binding to the contract
	SwivelFilterer   // Log filterer for contract events
}

// SwivelCaller is an auto generated read-only Go binding around an Ethereum contract.
type SwivelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SwivelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SwivelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SwivelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SwivelSession struct {
	Contract     *Swivel           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SwivelCallerSession struct {
	Contract *SwivelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SwivelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SwivelTransactorSession struct {
	Contract     *SwivelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SwivelRaw is an auto generated low-level Go binding around an Ethereum contract.
type SwivelRaw struct {
	Contract *Swivel // Generic contract binding to access the raw methods on
}

// SwivelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SwivelCallerRaw struct {
	Contract *SwivelCaller // Generic read-only contract binding to access the raw methods on
}

// SwivelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SwivelTransactorRaw struct {
	Contract *SwivelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSwivel creates a new instance of Swivel, bound to a specific deployed contract.
func NewSwivel(address common.Address, backend bind.ContractBackend) (*Swivel, error) {
	contract, err := bindSwivel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Swivel{SwivelCaller: SwivelCaller{contract: contract}, SwivelTransactor: SwivelTransactor{contract: contract}, SwivelFilterer: SwivelFilterer{contract: contract}}, nil
}

// NewSwivelCaller creates a new read-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelCaller(address common.Address, caller bind.ContractCaller) (*SwivelCaller, error) {
	contract, err := bindSwivel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelCaller{contract: contract}, nil
}

// NewSwivelTransactor creates a new write-only instance of Swivel, bound to a specific deployed contract.
func NewSwivelTransactor(address common.Address, transactor bind.ContractTransactor) (*SwivelTransactor, error) {
	contract, err := bindSwivel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SwivelTransactor{contract: contract}, nil
}

// NewSwivelFilterer creates a new log filterer instance of Swivel, bound to a specific deployed contract.
func NewSwivelFilterer(address common.Address, filterer bind.ContractFilterer) (*SwivelFilterer, error) {
	contract, err := bindSwivel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SwivelFilterer{contract: contract}, nil
}

// bindSwivel binds a generic wrapper to an already deployed contract.
func bindSwivel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SwivelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.SwivelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.SwivelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Swivel *SwivelCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Swivel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Swivel *SwivelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Swivel *SwivelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Swivel.Contract.contract.Transact(opts, method, params...)
}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelCaller) CTOKEN(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "CTOKEN")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelSession) CTOKEN() (common.Address, error) {
	return _Swivel.Contract.CTOKEN(&_Swivel.CallOpts)
}

// CTOKEN is a free data retrieval call binding the contract method 0x43295411.
//
// Solidity: function CTOKEN() view returns(address)
func (_Swivel *SwivelCallerSession) CTOKEN() (common.Address, error) {
	return _Swivel.Contract.CTOKEN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCaller) DOMAIN(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "DOMAIN")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// DOMAIN is a free data retrieval call binding the contract method 0x52a9674b.
//
// Solidity: function DOMAIN() view returns(bytes32)
func (_Swivel *SwivelCallerSession) DOMAIN() ([32]byte, error) {
	return _Swivel.Contract.DOMAIN(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCaller) NAME(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "NAME")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// NAME is a free data retrieval call binding the contract method 0xa3f4df7e.
//
// Solidity: function NAME() view returns(string)
func (_Swivel *SwivelCallerSession) NAME() (string, error) {
	return _Swivel.Contract.NAME(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCaller) VERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// VERSION is a free data retrieval call binding the contract method 0xffa1ad74.
//
// Solidity: function VERSION() view returns(string)
func (_Swivel *SwivelCallerSession) VERSION() (string, error) {
	return _Swivel.Contract.VERSION(&_Swivel.CallOpts)
}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelCaller) Agreements(opts *bind.CallOpts, arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "agreements", arg0, arg1)

	outstruct := new(struct {
		Maker      common.Address
		Taker      common.Address
		Underlying common.Address
		Floating   bool
		Released   bool
		Rate       *big.Int
		Principal  *big.Int
		Interest   *big.Int
		Duration   *big.Int
		Release    *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Maker = out[0].(common.Address)
	outstruct.Taker = out[1].(common.Address)
	outstruct.Underlying = out[2].(common.Address)
	outstruct.Floating = out[3].(bool)
	outstruct.Released = out[4].(bool)
	outstruct.Rate = out[5].(*big.Int)
	outstruct.Principal = out[6].(*big.Int)
	outstruct.Interest = out[7].(*big.Int)
	outstruct.Duration = out[8].(*big.Int)
	outstruct.Release = out[9].(*big.Int)

	return *outstruct, err

}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelSession) Agreements(arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	return _Swivel.Contract.Agreements(&_Swivel.CallOpts, arg0, arg1)
}

// Agreements is a free data retrieval call binding the contract method 0xbe3b52ec.
//
// Solidity: function agreements(bytes32 , bytes32 ) view returns(address maker, address taker, address underlying, bool floating, bool released, uint256 rate, uint256 principal, uint256 interest, uint256 duration, uint256 release)
func (_Swivel *SwivelCallerSession) Agreements(arg0 [32]byte, arg1 [32]byte) (struct {
	Maker      common.Address
	Taker      common.Address
	Underlying common.Address
	Floating   bool
	Released   bool
	Rate       *big.Int
	Principal  *big.Int
	Interest   *big.Int
	Duration   *big.Int
	Release    *big.Int
}, error) {
	return _Swivel.Contract.Agreements(&_Swivel.CallOpts, arg0, arg1)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCaller) Cancelled(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "cancelled", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Cancelled is a free data retrieval call binding the contract method 0x2ac12622.
//
// Solidity: function cancelled(bytes32 ) view returns(bool)
func (_Swivel *SwivelCallerSession) Cancelled(arg0 [32]byte) (bool, error) {
	return _Swivel.Contract.Cancelled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCaller) Filled(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _Swivel.contract.Call(opts, &out, "filled", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// Filled is a free data retrieval call binding the contract method 0x288cdc91.
//
// Solidity: function filled(bytes32 ) view returns(uint256)
func (_Swivel *SwivelCallerSession) Filled(arg0 [32]byte) (*big.Int, error) {
	return _Swivel.Contract.Filled(&_Swivel.CallOpts, arg0)
}

// FillFixed is a paid mutator transaction binding the contract method 0x79d5e867.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) FillFixed(opts *bind.TransactOpts, o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "fillFixed", o, a, k, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x79d5e867.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) FillFixed(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFixed is a paid mutator transaction binding the contract method 0x79d5e867.
//
// Solidity: function fillFixed((bytes32,address,address,bool,uint256,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) FillFixed(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFixed(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x592ab2fb.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactor) FillFloating(opts *bind.TransactOpts, o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "fillFloating", o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x592ab2fb.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelSession) FillFloating(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// FillFloating is a paid mutator transaction binding the contract method 0x592ab2fb.
//
// Solidity: function fillFloating((bytes32,address,address,bool,uint256,uint256,uint256,uint256,uint256) o, uint256 a, bytes32 k, (uint8,bytes32,bytes32) c) returns(bool)
func (_Swivel *SwivelTransactorSession) FillFloating(o HashOrder, a *big.Int, k [32]byte, c SigComponents) (*types.Transaction, error) {
	return _Swivel.Contract.FillFloating(&_Swivel.TransactOpts, o, a, k, c)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactor) ReleaseFixed(opts *bind.TransactOpts, o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "releaseFixed", o, a)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelSession) ReleaseFixed(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFixed(&_Swivel.TransactOpts, o, a)
}

// ReleaseFixed is a paid mutator transaction binding the contract method 0xbd18e9fe.
//
// Solidity: function releaseFixed(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactorSession) ReleaseFixed(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFixed(&_Swivel.TransactOpts, o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactor) ReleaseFloating(opts *bind.TransactOpts, o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.contract.Transact(opts, "releaseFloating", o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelSession) ReleaseFloating(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFloating(&_Swivel.TransactOpts, o, a)
}

// ReleaseFloating is a paid mutator transaction binding the contract method 0x547747b7.
//
// Solidity: function releaseFloating(bytes32 o, bytes32 a) returns(bool)
func (_Swivel *SwivelTransactorSession) ReleaseFloating(o [32]byte, a [32]byte) (*types.Transaction, error) {
	return _Swivel.Contract.ReleaseFloating(&_Swivel.TransactOpts, o, a)
}

// SwivelCancelIterator is returned from FilterCancel and is used to iterate over the raw logs and unpacked data for Cancel events raised by the Swivel contract.
type SwivelCancelIterator struct {
	Event *SwivelCancel // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelCancelIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelCancel)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelCancel)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelCancelIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelCancelIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelCancel represents a Cancel event raised by the Swivel contract.
type SwivelCancel struct {
	Key [32]byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterCancel is a free log retrieval operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) FilterCancel(opts *bind.FilterOpts, key [][32]byte) (*SwivelCancelIterator, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelCancelIterator{contract: _Swivel.contract, event: "Cancel", logs: logs, sub: sub}, nil
}

// WatchCancel is a free log subscription operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) WatchCancel(opts *bind.WatchOpts, sink chan<- *SwivelCancel, key [][32]byte) (event.Subscription, error) {

	var keyRule []interface{}
	for _, keyItem := range key {
		keyRule = append(keyRule, keyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Cancel", keyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelCancel)
				if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCancel is a log parse operation binding the contract event 0xe8d9861dbc9c663ed3accd261bbe2fe01e0d3d9e5f51fa38523b265c7757a93a.
//
// Solidity: event Cancel(bytes32 indexed key)
func (_Swivel *SwivelFilterer) ParseCancel(log types.Log) (*SwivelCancel, error) {
	event := new(SwivelCancel)
	if err := _Swivel.contract.UnpackLog(event, "Cancel", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelInitiateIterator is returned from FilterInitiate and is used to iterate over the raw logs and unpacked data for Initiate events raised by the Swivel contract.
type SwivelInitiateIterator struct {
	Event *SwivelInitiate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelInitiateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelInitiate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelInitiate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelInitiateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelInitiateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelInitiate represents a Initiate event raised by the Swivel contract.
type SwivelInitiate struct {
	OrderKey     [32]byte
	AgreementKey [32]byte
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterInitiate is a free log retrieval operation binding the contract event 0xa93e646db02470b4aa881817da6191d55ffba8bd3377a40de3d62abb38fc7ceb.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) FilterInitiate(opts *bind.FilterOpts, orderKey [][32]byte, agreementKey [][32]byte) (*SwivelInitiateIterator, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Initiate", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelInitiateIterator{contract: _Swivel.contract, event: "Initiate", logs: logs, sub: sub}, nil
}

// WatchInitiate is a free log subscription operation binding the contract event 0xa93e646db02470b4aa881817da6191d55ffba8bd3377a40de3d62abb38fc7ceb.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) WatchInitiate(opts *bind.WatchOpts, sink chan<- *SwivelInitiate, orderKey [][32]byte, agreementKey [][32]byte) (event.Subscription, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Initiate", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelInitiate)
				if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitiate is a log parse operation binding the contract event 0xa93e646db02470b4aa881817da6191d55ffba8bd3377a40de3d62abb38fc7ceb.
//
// Solidity: event Initiate(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) ParseInitiate(log types.Log) (*SwivelInitiate, error) {
	event := new(SwivelInitiate)
	if err := _Swivel.contract.UnpackLog(event, "Initiate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SwivelReleaseIterator is returned from FilterRelease and is used to iterate over the raw logs and unpacked data for Release events raised by the Swivel contract.
type SwivelReleaseIterator struct {
	Event *SwivelRelease // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SwivelReleaseIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SwivelRelease)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SwivelRelease)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SwivelReleaseIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SwivelReleaseIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SwivelRelease represents a Release event raised by the Swivel contract.
type SwivelRelease struct {
	OrderKey     [32]byte
	AgreementKey [32]byte
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterRelease is a free log retrieval operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) FilterRelease(opts *bind.FilterOpts, orderKey [][32]byte, agreementKey [][32]byte) (*SwivelReleaseIterator, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.FilterLogs(opts, "Release", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return &SwivelReleaseIterator{contract: _Swivel.contract, event: "Release", logs: logs, sub: sub}, nil
}

// WatchRelease is a free log subscription operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) WatchRelease(opts *bind.WatchOpts, sink chan<- *SwivelRelease, orderKey [][32]byte, agreementKey [][32]byte) (event.Subscription, error) {

	var orderKeyRule []interface{}
	for _, orderKeyItem := range orderKey {
		orderKeyRule = append(orderKeyRule, orderKeyItem)
	}
	var agreementKeyRule []interface{}
	for _, agreementKeyItem := range agreementKey {
		agreementKeyRule = append(agreementKeyRule, agreementKeyItem)
	}

	logs, sub, err := _Swivel.contract.WatchLogs(opts, "Release", orderKeyRule, agreementKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SwivelRelease)
				if err := _Swivel.contract.UnpackLog(event, "Release", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRelease is a log parse operation binding the contract event 0xa26be6031ace8c10be363a05e05ce508eae43c02ff806b3ff75af1d96dd90294.
//
// Solidity: event Release(bytes32 indexed orderKey, bytes32 indexed agreementKey)
func (_Swivel *SwivelFilterer) ParseRelease(log types.Log) (*SwivelRelease, error) {
	event := new(SwivelRelease)
	if err := _Swivel.contract.UnpackLog(event, "Release", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
